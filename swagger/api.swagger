{
  "openapi": "3.0.1",
  "info": {
    "title": "CMS API",
    "description": "APIs to perform main back-end infrastructure operations.",
    "contact": {
      "name": "Mehdi Daustany",
      "email": "m.daustany@outlook.com"
    },
    "version": "v1"
  },
  "paths": {
    "/api/services/app/Account/IsTenantAvailable": {
      "post": {
        "tags": [
          "Account"
        ],
        "operationId": "ApiServicesAppAccountIstenantavailablePost",
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/IsTenantAvailableInput"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/IsTenantAvailableInput"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/IsTenantAvailableInput"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/IsTenantAvailableInput"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/IsTenantAvailableOutput"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IsTenantAvailableOutput"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/IsTenantAvailableOutput"
                }
              }
            }
          }
        }
      }
    },
    "/api/services/app/Account/ResolveTenantId": {
      "post": {
        "tags": [
          "Account"
        ],
        "operationId": "ApiServicesAppAccountResolvetenantidPost",
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/ResolveTenantIdInput"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ResolveTenantIdInput"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ResolveTenantIdInput"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ResolveTenantIdInput"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              },
              "application/json": {
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              },
              "text/json": {
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              }
            }
          }
        }
      }
    },
    "/api/services/app/Account/Register": {
      "post": {
        "tags": [
          "Account"
        ],
        "operationId": "ApiServicesAppAccountRegisterPost",
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/RegisterInput"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RegisterInput"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/RegisterInput"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/RegisterInput"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/RegisterOutput"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RegisterOutput"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/RegisterOutput"
                }
              }
            }
          }
        }
      }
    },
    "/api/services/app/Account/SendPasswordResetCode": {
      "post": {
        "tags": [
          "Account"
        ],
        "operationId": "ApiServicesAppAccountSendpasswordresetcodePost",
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/SendPasswordResetCodeInput"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SendPasswordResetCodeInput"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/SendPasswordResetCodeInput"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/SendPasswordResetCodeInput"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/services/app/Account/ResetPassword": {
      "post": {
        "tags": [
          "Account"
        ],
        "operationId": "ApiServicesAppAccountResetpasswordPost",
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/ResetPasswordInput"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ResetPasswordInput"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ResetPasswordInput"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ResetPasswordInput"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ResetPasswordOutput"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResetPasswordOutput"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResetPasswordOutput"
                }
              }
            }
          }
        }
      }
    },
    "/api/services/app/Account/SendEmailActivationLink": {
      "post": {
        "tags": [
          "Account"
        ],
        "operationId": "ApiServicesAppAccountSendemailactivationlinkPost",
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/SendEmailActivationLinkInput"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SendEmailActivationLinkInput"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/SendEmailActivationLinkInput"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/SendEmailActivationLinkInput"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/services/app/Account/ActivateEmail": {
      "post": {
        "tags": [
          "Account"
        ],
        "operationId": "ApiServicesAppAccountActivateemailPost",
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/ActivateEmailInput"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ActivateEmailInput"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ActivateEmailInput"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ActivateEmailInput"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/services/app/Account/Impersonate": {
      "post": {
        "tags": [
          "Account"
        ],
        "operationId": "ApiServicesAppAccountImpersonatePost",
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/ImpersonateInput"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ImpersonateInput"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ImpersonateInput"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ImpersonateInput"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ImpersonateOutput"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ImpersonateOutput"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ImpersonateOutput"
                }
              }
            }
          }
        }
      }
    },
    "/api/services/app/Account/DelegatedImpersonate": {
      "post": {
        "tags": [
          "Account"
        ],
        "operationId": "ApiServicesAppAccountDelegatedimpersonatePost",
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/DelegatedImpersonateInput"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DelegatedImpersonateInput"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/DelegatedImpersonateInput"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/DelegatedImpersonateInput"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ImpersonateOutput"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ImpersonateOutput"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ImpersonateOutput"
                }
              }
            }
          }
        }
      }
    },
    "/api/services/app/Account/BackToImpersonator": {
      "post": {
        "tags": [
          "Account"
        ],
        "operationId": "ApiServicesAppAccountBacktoimpersonatorPost",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ImpersonateOutput"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ImpersonateOutput"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ImpersonateOutput"
                }
              }
            }
          }
        }
      }
    },
    "/api/services/app/Account/SwitchToLinkedAccount": {
      "post": {
        "tags": [
          "Account"
        ],
        "operationId": "ApiServicesAppAccountSwitchtolinkedaccountPost",
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/SwitchToLinkedAccountInput"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SwitchToLinkedAccountInput"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/SwitchToLinkedAccountInput"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/SwitchToLinkedAccountInput"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/SwitchToLinkedAccountOutput"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SwitchToLinkedAccountOutput"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/SwitchToLinkedAccountOutput"
                }
              }
            }
          }
        }
      }
    },
    "/api/services/app/Account/SendVerificationSms": {
      "post": {
        "tags": [
          "Account"
        ],
        "operationId": "ApiServicesAppAccountSendverificationsmsPost",
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/SendVerificationSmsInputDto"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SendVerificationSmsInputDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/SendVerificationSmsInputDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/SendVerificationSmsInputDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/services/app/Account/VerifySmsCode": {
      "post": {
        "tags": [
          "Account"
        ],
        "operationId": "ApiServicesAppAccountVerifysmscodePost",
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/VerifySmsCodeInputDto"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/VerifySmsCodeInputDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/VerifySmsCodeInputDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/VerifySmsCodeInputDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                }
              },
              "application/json": {
                "schema": {
                  "type": "string"
                }
              },
              "text/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/api/services/app/Account/VerifyRegisterToken": {
      "post": {
        "tags": [
          "Account"
        ],
        "operationId": "ApiServicesAppAccountVerifyregistertokenPost",
        "parameters": [
          {
            "name": "token",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                }
              },
              "application/json": {
                "schema": {
                  "type": "string"
                }
              },
              "text/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/api/services/app/Account/GetProfile": {
      "get": {
        "tags": [
          "Account"
        ],
        "operationId": "ApiServicesAppAccountGetprofileGet",
        "parameters": [
          {
            "name": "userId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/UserEditDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserEditDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserEditDto"
                }
              }
            }
          }
        }
      }
    },
    "/api/services/app/Account/SaveProfile": {
      "post": {
        "tags": [
          "Account"
        ],
        "operationId": "ApiServicesAppAccountSaveprofilePost",
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/UserEditDto"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UserEditDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/UserEditDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/UserEditDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/services/app/AuditLog/GetAuditLogs": {
      "get": {
        "tags": [
          "AuditLog"
        ],
        "operationId": "ApiServicesAppAuditlogGetauditlogsGet",
        "parameters": [
          {
            "name": "StartDate",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "EndDate",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "UserName",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "ServiceName",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "MethodName",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "BrowserInfo",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "HasException",
            "in": "query",
            "schema": {
              "type": "boolean",
              "nullable": true
            }
          },
          {
            "name": "MinExecutionDuration",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32",
              "nullable": true
            }
          },
          {
            "name": "MaxExecutionDuration",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32",
              "nullable": true
            }
          },
          {
            "name": "Sorting",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "MaxResultCount",
            "in": "query",
            "schema": {
              "maximum": 1000,
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "SkipCount",
            "in": "query",
            "schema": {
              "maximum": 2147483647,
              "minimum": 0,
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/PagedResultDtoOfAuditLogListDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PagedResultDtoOfAuditLogListDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/PagedResultDtoOfAuditLogListDto"
                }
              }
            }
          }
        }
      }
    },
    "/api/services/app/AuditLog/GetAuditLogsToExcel": {
      "get": {
        "tags": [
          "AuditLog"
        ],
        "operationId": "ApiServicesAppAuditlogGetauditlogstoexcelGet",
        "parameters": [
          {
            "name": "StartDate",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "EndDate",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "UserName",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "ServiceName",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "MethodName",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "BrowserInfo",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "HasException",
            "in": "query",
            "schema": {
              "type": "boolean",
              "nullable": true
            }
          },
          {
            "name": "MinExecutionDuration",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32",
              "nullable": true
            }
          },
          {
            "name": "MaxExecutionDuration",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32",
              "nullable": true
            }
          },
          {
            "name": "Sorting",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "MaxResultCount",
            "in": "query",
            "schema": {
              "maximum": 1000,
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "SkipCount",
            "in": "query",
            "schema": {
              "maximum": 2147483647,
              "minimum": 0,
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/FileDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FileDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/FileDto"
                }
              }
            }
          }
        }
      }
    },
    "/api/services/app/AuditLog/GetEntityHistoryObjectTypes": {
      "get": {
        "tags": [
          "AuditLog"
        ],
        "operationId": "ApiServicesAppAuditlogGetentityhistoryobjecttypesGet",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/NameValueDto"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/NameValueDto"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/NameValueDto"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/services/app/AuditLog/GetEntityChanges": {
      "get": {
        "tags": [
          "AuditLog"
        ],
        "operationId": "ApiServicesAppAuditlogGetentitychangesGet",
        "parameters": [
          {
            "name": "StartDate",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "EndDate",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "UserName",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "EntityTypeFullName",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "Sorting",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "MaxResultCount",
            "in": "query",
            "schema": {
              "maximum": 1000,
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "SkipCount",
            "in": "query",
            "schema": {
              "maximum": 2147483647,
              "minimum": 0,
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/PagedResultDtoOfEntityChangeListDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PagedResultDtoOfEntityChangeListDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/PagedResultDtoOfEntityChangeListDto"
                }
              }
            }
          }
        }
      }
    },
    "/api/services/app/AuditLog/GetEntityTypeChanges": {
      "get": {
        "tags": [
          "AuditLog"
        ],
        "operationId": "ApiServicesAppAuditlogGetentitytypechangesGet",
        "parameters": [
          {
            "name": "EntityTypeFullName",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "EntityId",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "Sorting",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "MaxResultCount",
            "in": "query",
            "schema": {
              "maximum": 1000,
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "SkipCount",
            "in": "query",
            "schema": {
              "maximum": 2147483647,
              "minimum": 0,
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/PagedResultDtoOfEntityChangeListDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PagedResultDtoOfEntityChangeListDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/PagedResultDtoOfEntityChangeListDto"
                }
              }
            }
          }
        }
      }
    },
    "/api/services/app/AuditLog/GetEntityChangesToExcel": {
      "get": {
        "tags": [
          "AuditLog"
        ],
        "operationId": "ApiServicesAppAuditlogGetentitychangestoexcelGet",
        "parameters": [
          {
            "name": "StartDate",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "EndDate",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "UserName",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "EntityTypeFullName",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "Sorting",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "MaxResultCount",
            "in": "query",
            "schema": {
              "maximum": 1000,
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "SkipCount",
            "in": "query",
            "schema": {
              "maximum": 2147483647,
              "minimum": 0,
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/FileDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FileDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/FileDto"
                }
              }
            }
          }
        }
      }
    },
    "/api/services/app/AuditLog/GetEntityPropertyChanges": {
      "get": {
        "tags": [
          "AuditLog"
        ],
        "operationId": "ApiServicesAppAuditlogGetentitypropertychangesGet",
        "parameters": [
          {
            "name": "entityChangeId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/EntityPropertyChangeDto"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/EntityPropertyChangeDto"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/EntityPropertyChangeDto"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/services/app/Caching/GetAllCaches": {
      "get": {
        "tags": [
          "Caching"
        ],
        "operationId": "ApiServicesAppCachingGetallcachesGet",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ListResultDtoOfCacheDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ListResultDtoOfCacheDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ListResultDtoOfCacheDto"
                }
              }
            }
          }
        }
      }
    },
    "/api/services/app/Caching/ClearCache": {
      "post": {
        "tags": [
          "Caching"
        ],
        "operationId": "ApiServicesAppCachingClearcachePost",
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/EntityDtoOfString"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EntityDtoOfString"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/EntityDtoOfString"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/EntityDtoOfString"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/services/app/Caching/ClearAllCaches": {
      "post": {
        "tags": [
          "Caching"
        ],
        "operationId": "ApiServicesAppCachingClearallcachesPost",
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/services/app/Calendars/GetAll": {
      "get": {
        "tags": [
          "Calendars"
        ],
        "operationId": "ApiServicesAppCalendarsGetallGet",
        "parameters": [
          {
            "name": "Filter",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "YearFilter",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32",
              "nullable": true
            }
          },
          {
            "name": "CultureFilter",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "EventNameFilter",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "EventTypeFilter",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32",
              "nullable": true
            }
          },
          {
            "name": "MaxResultCount",
            "in": "query",
            "schema": {
              "maximum": 2147483647,
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ListResultDtoOfGetCalendarForViewDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ListResultDtoOfGetCalendarForViewDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ListResultDtoOfGetCalendarForViewDto"
                }
              }
            }
          }
        }
      }
    },
    "/api/services/app/Calendars/GetCalendarForView": {
      "get": {
        "tags": [
          "Calendars"
        ],
        "operationId": "ApiServicesAppCalendarsGetcalendarforviewGet",
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/GetCalendarForViewDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetCalendarForViewDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetCalendarForViewDto"
                }
              }
            }
          }
        }
      }
    },
    "/api/services/app/Calendars/GetCalendarForEdit": {
      "get": {
        "tags": [
          "Calendars"
        ],
        "operationId": "ApiServicesAppCalendarsGetcalendarforeditGet",
        "parameters": [
          {
            "name": "Id",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/GetCalendarForEditOutput"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetCalendarForEditOutput"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetCalendarForEditOutput"
                }
              }
            }
          }
        }
      }
    },
    "/api/services/app/Calendars/CreateOrEdit": {
      "post": {
        "tags": [
          "Calendars"
        ],
        "operationId": "ApiServicesAppCalendarsCreateoreditPost",
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/CreateOrEditCalendarDto"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateOrEditCalendarDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateOrEditCalendarDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/CreateOrEditCalendarDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/services/app/Calendars/Delete": {
      "delete": {
        "tags": [
          "Calendars"
        ],
        "operationId": "ApiServicesAppCalendarsDeleteDelete",
        "parameters": [
          {
            "name": "Id",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/services/app/Calendars/GetCalendarsToExcel": {
      "get": {
        "tags": [
          "Calendars"
        ],
        "operationId": "ApiServicesAppCalendarsGetcalendarstoexcelGet",
        "parameters": [
          {
            "name": "Filter",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "YearFilter",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32",
              "nullable": true
            }
          },
          {
            "name": "CultureFilter",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "EventNameFilter",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "EventTypeFilter",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32",
              "nullable": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/FileDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FileDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/FileDto"
                }
              }
            }
          }
        }
      }
    },
    "/api/services/app/Calendars/ImportFromTimeIR": {
      "post": {
        "tags": [
          "Calendars"
        ],
        "operationId": "ApiServicesAppCalendarsImportfromtimeirPost",
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/services/app/Calendars/GetCalendarEventByDate": {
      "get": {
        "tags": [
          "Calendars"
        ],
        "operationId": "ApiServicesAppCalendarsGetcalendareventbydateGet",
        "parameters": [
          {
            "name": "input",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ListResultDtoOfGetCalendarForViewDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ListResultDtoOfGetCalendarForViewDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ListResultDtoOfGetCalendarForViewDto"
                }
              }
            }
          }
        }
      }
    },
    "/api/services/app/Category/GetCategories": {
      "get": {
        "tags": [
          "Category"
        ],
        "operationId": "ApiServicesAppCategoryGetcategoriesGet",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ListResultDtoOfCategoryDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ListResultDtoOfCategoryDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ListResultDtoOfCategoryDto"
                }
              }
            }
          }
        }
      }
    },
    "/api/services/app/Category/GetCategoryIdByName": {
      "get": {
        "tags": [
          "Category"
        ],
        "operationId": "ApiServicesAppCategoryGetcategoryidbynameGet",
        "parameters": [
          {
            "name": "categoryName",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/CategoryDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CategoryDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/CategoryDto"
                }
              }
            }
          }
        }
      }
    },
    "/api/services/app/Category/getCategoriesByCategoryType": {
      "get": {
        "tags": [
          "Category"
        ],
        "operationId": "ApiServicesAppCategoryGetcategoriesbycategorytypeGet",
        "parameters": [
          {
            "name": "categoryType",
            "in": "query",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/CategoryType"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ListResultDtoOfCategoryDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ListResultDtoOfCategoryDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ListResultDtoOfCategoryDto"
                }
              }
            }
          }
        }
      }
    },
    "/api/services/app/Category/GetCategoriesForUser": {
      "get": {
        "tags": [
          "Category"
        ],
        "operationId": "ApiServicesAppCategoryGetcategoriesforuserGet",
        "parameters": [
          {
            "name": "categoryType",
            "in": "query",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/CategoryType"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ListResultDtoOfCategoryDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ListResultDtoOfCategoryDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ListResultDtoOfCategoryDto"
                }
              }
            }
          }
        }
      }
    },
    "/api/services/app/Category/GetCategoryUsers": {
      "get": {
        "tags": [
          "Category"
        ],
        "operationId": "ApiServicesAppCategoryGetcategoryusersGet",
        "parameters": [
          {
            "name": "Id",
            "in": "query",
            "schema": {
              "minimum": 1,
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "Sorting",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "MaxResultCount",
            "in": "query",
            "schema": {
              "maximum": 1000,
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "SkipCount",
            "in": "query",
            "schema": {
              "maximum": 2147483647,
              "minimum": 0,
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/PagedResultDtoOfCategoryUserListDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PagedResultDtoOfCategoryUserListDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/PagedResultDtoOfCategoryUserListDto"
                }
              }
            }
          }
        }
      }
    },
    "/api/services/app/Category/GetCategoryRoles": {
      "get": {
        "tags": [
          "Category"
        ],
        "operationId": "ApiServicesAppCategoryGetcategoryrolesGet",
        "parameters": [
          {
            "name": "Id",
            "in": "query",
            "schema": {
              "minimum": 1,
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "Sorting",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "MaxResultCount",
            "in": "query",
            "schema": {
              "maximum": 1000,
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "SkipCount",
            "in": "query",
            "schema": {
              "maximum": 2147483647,
              "minimum": 0,
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/PagedResultDtoOfCategoryRoleListDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PagedResultDtoOfCategoryRoleListDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/PagedResultDtoOfCategoryRoleListDto"
                }
              }
            }
          }
        }
      }
    },
    "/api/services/app/Category/CreateCategory": {
      "post": {
        "tags": [
          "Category"
        ],
        "operationId": "ApiServicesAppCategoryCreatecategoryPost",
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/CreateOrEditCategoryDto"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateOrEditCategoryDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateOrEditCategoryDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/CreateOrEditCategoryDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/CategoryDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CategoryDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/CategoryDto"
                }
              }
            }
          }
        }
      }
    },
    "/api/services/app/Category/UpdateCategory": {
      "put": {
        "tags": [
          "Category"
        ],
        "operationId": "ApiServicesAppCategoryUpdatecategoryPut",
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/CreateOrEditCategoryDto"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateOrEditCategoryDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateOrEditCategoryDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/CreateOrEditCategoryDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/CategoryDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CategoryDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/CategoryDto"
                }
              }
            }
          }
        }
      }
    },
    "/api/services/app/Category/MoveCategory": {
      "post": {
        "tags": [
          "Category"
        ],
        "operationId": "ApiServicesAppCategoryMovecategoryPost",
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/MoveCategoryInput"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/MoveCategoryInput"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/MoveCategoryInput"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/MoveCategoryInput"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/CategoryDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CategoryDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/CategoryDto"
                }
              }
            }
          }
        }
      }
    },
    "/api/services/app/Category/DeleteCategory": {
      "delete": {
        "tags": [
          "Category"
        ],
        "operationId": "ApiServicesAppCategoryDeletecategoryDelete",
        "parameters": [
          {
            "name": "Id",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/services/app/Category/RemoveUserFromCategory": {
      "delete": {
        "tags": [
          "Category"
        ],
        "operationId": "ApiServicesAppCategoryRemoveuserfromcategoryDelete",
        "parameters": [
          {
            "name": "UserId",
            "in": "query",
            "schema": {
              "minimum": 1,
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "CategoryId",
            "in": "query",
            "schema": {
              "minimum": 1,
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/services/app/Category/RemoveRoleFromCategory": {
      "delete": {
        "tags": [
          "Category"
        ],
        "operationId": "ApiServicesAppCategoryRemoverolefromcategoryDelete",
        "parameters": [
          {
            "name": "RoleId",
            "in": "query",
            "schema": {
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "CategoryId",
            "in": "query",
            "schema": {
              "minimum": 1,
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/services/app/Category/AddUsersToCategory": {
      "post": {
        "tags": [
          "Category"
        ],
        "operationId": "ApiServicesAppCategoryAdduserstocategoryPost",
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/UsersToCategoryInput"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UsersToCategoryInput"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/UsersToCategoryInput"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/UsersToCategoryInput"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/services/app/Category/AddRolesToCategory": {
      "post": {
        "tags": [
          "Category"
        ],
        "operationId": "ApiServicesAppCategoryAddrolestocategoryPost",
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/RolesToCategoryInput"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RolesToCategoryInput"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/RolesToCategoryInput"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/RolesToCategoryInput"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/services/app/Category/FindUsers": {
      "post": {
        "tags": [
          "Category"
        ],
        "operationId": "ApiServicesAppCategoryFindusersPost",
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/FindCategoryUsersInput"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/FindCategoryUsersInput"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/FindCategoryUsersInput"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/FindCategoryUsersInput"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/PagedResultDtoOfNameValueDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PagedResultDtoOfNameValueDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/PagedResultDtoOfNameValueDto"
                }
              }
            }
          }
        }
      }
    },
    "/api/services/app/Category/FindRoles": {
      "post": {
        "tags": [
          "Category"
        ],
        "operationId": "ApiServicesAppCategoryFindrolesPost",
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/FindCategoryRolesInput"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/FindCategoryRolesInput"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/FindCategoryRolesInput"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/FindCategoryRolesInput"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/PagedResultDtoOfNameValueDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PagedResultDtoOfNameValueDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/PagedResultDtoOfNameValueDto"
                }
              }
            }
          }
        }
      }
    },
    "/api/services/app/Chat/GetUserChatFriendsWithSettings": {
      "get": {
        "tags": [
          "Chat"
        ],
        "operationId": "ApiServicesAppChatGetuserchatfriendswithsettingsGet",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/GetUserChatFriendsWithSettingsOutput"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetUserChatFriendsWithSettingsOutput"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetUserChatFriendsWithSettingsOutput"
                }
              }
            }
          }
        }
      }
    },
    "/api/services/app/Chat/GetUserChatMessages": {
      "get": {
        "tags": [
          "Chat"
        ],
        "operationId": "ApiServicesAppChatGetuserchatmessagesGet",
        "parameters": [
          {
            "name": "TenantId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32",
              "nullable": true
            }
          },
          {
            "name": "UserId",
            "in": "query",
            "schema": {
              "minimum": 1,
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "MinMessageId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int64",
              "nullable": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ListResultDtoOfChatMessageDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ListResultDtoOfChatMessageDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ListResultDtoOfChatMessageDto"
                }
              }
            }
          }
        }
      }
    },
    "/api/services/app/Chat/MarkAllUnreadMessagesOfUserAsRead": {
      "post": {
        "tags": [
          "Chat"
        ],
        "operationId": "ApiServicesAppChatMarkallunreadmessagesofuserasreadPost",
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/MarkAllUnreadMessagesOfUserAsReadInput"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/MarkAllUnreadMessagesOfUserAsReadInput"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/MarkAllUnreadMessagesOfUserAsReadInput"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/MarkAllUnreadMessagesOfUserAsReadInput"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/services/app/Cities/GetAll": {
      "get": {
        "tags": [
          "Cities"
        ],
        "operationId": "ApiServicesAppCitiesGetallGet",
        "parameters": [
          {
            "name": "Filter",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "NameFilter",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "StateCodeFilter",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "CountryCodeFilter",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "StateNameFilter",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "CountryNameFilter",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "Sorting",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "SkipCount",
            "in": "query",
            "schema": {
              "maximum": 2147483647,
              "minimum": 0,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "MaxResultCount",
            "in": "query",
            "schema": {
              "maximum": 2147483647,
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/PagedResultDtoOfGetCityForViewDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PagedResultDtoOfGetCityForViewDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/PagedResultDtoOfGetCityForViewDto"
                }
              }
            }
          }
        }
      }
    },
    "/api/services/app/Cities/WholeByState": {
      "post": {
        "tags": [
          "Cities"
        ],
        "operationId": "ApiServicesAppCitiesWholebystatePost",
        "parameters": [
          {
            "name": "stateId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ListResultDtoOfGetCityForViewDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ListResultDtoOfGetCityForViewDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ListResultDtoOfGetCityForViewDto"
                }
              }
            }
          }
        }
      }
    },
    "/api/services/app/Cities/GetCityForView": {
      "get": {
        "tags": [
          "Cities"
        ],
        "operationId": "ApiServicesAppCitiesGetcityforviewGet",
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/GetCityForViewDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetCityForViewDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetCityForViewDto"
                }
              }
            }
          }
        }
      }
    },
    "/api/services/app/Cities/GetCityForEdit": {
      "get": {
        "tags": [
          "Cities"
        ],
        "operationId": "ApiServicesAppCitiesGetcityforeditGet",
        "parameters": [
          {
            "name": "Id",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/GetCityForEditOutput"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetCityForEditOutput"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetCityForEditOutput"
                }
              }
            }
          }
        }
      }
    },
    "/api/services/app/Cities/CreateOrEdit": {
      "post": {
        "tags": [
          "Cities"
        ],
        "operationId": "ApiServicesAppCitiesCreateoreditPost",
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/CreateOrEditCityDto"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateOrEditCityDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateOrEditCityDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/CreateOrEditCityDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/services/app/Cities/Delete": {
      "delete": {
        "tags": [
          "Cities"
        ],
        "operationId": "ApiServicesAppCitiesDeleteDelete",
        "parameters": [
          {
            "name": "Id",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/services/app/Cities/GetCitiesToExcel": {
      "get": {
        "tags": [
          "Cities"
        ],
        "operationId": "ApiServicesAppCitiesGetcitiestoexcelGet",
        "parameters": [
          {
            "name": "Filter",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "NameFilter",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "StateCodeFilter",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "CountryCodeFilter",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "StateNameFilter",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "CountryNameFilter",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/FileDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FileDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/FileDto"
                }
              }
            }
          }
        }
      }
    },
    "/api/services/app/Cities/GetAllStateForLookupTable": {
      "get": {
        "tags": [
          "Cities"
        ],
        "operationId": "ApiServicesAppCitiesGetallstateforlookuptableGet",
        "parameters": [
          {
            "name": "Filter",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "Sorting",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "SkipCount",
            "in": "query",
            "schema": {
              "maximum": 2147483647,
              "minimum": 0,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "MaxResultCount",
            "in": "query",
            "schema": {
              "maximum": 2147483647,
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/PagedResultDtoOfCityStateLookupTableDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PagedResultDtoOfCityStateLookupTableDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/PagedResultDtoOfCityStateLookupTableDto"
                }
              }
            }
          }
        }
      }
    },
    "/api/services/app/Cities/GetAllCountryForLookupTable": {
      "get": {
        "tags": [
          "Cities"
        ],
        "operationId": "ApiServicesAppCitiesGetallcountryforlookuptableGet",
        "parameters": [
          {
            "name": "Filter",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "Sorting",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "SkipCount",
            "in": "query",
            "schema": {
              "maximum": 2147483647,
              "minimum": 0,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "MaxResultCount",
            "in": "query",
            "schema": {
              "maximum": 2147483647,
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/PagedResultDtoOfCityCountryLookupTableDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PagedResultDtoOfCityCountryLookupTableDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/PagedResultDtoOfCityCountryLookupTableDto"
                }
              }
            }
          }
        }
      }
    },
    "/api/services/app/CommonLookup/GetEditionsForCombobox": {
      "get": {
        "tags": [
          "CommonLookup"
        ],
        "operationId": "ApiServicesAppCommonlookupGeteditionsforcomboboxGet",
        "parameters": [
          {
            "name": "onlyFreeItems",
            "in": "query",
            "schema": {
              "type": "boolean",
              "default": false
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ListResultDtoOfSubscribableEditionComboboxItemDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ListResultDtoOfSubscribableEditionComboboxItemDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ListResultDtoOfSubscribableEditionComboboxItemDto"
                }
              }
            }
          }
        }
      }
    },
    "/api/services/app/CommonLookup/FindUsers": {
      "post": {
        "tags": [
          "CommonLookup"
        ],
        "operationId": "ApiServicesAppCommonlookupFindusersPost",
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/FindUsersInput"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/FindUsersInput"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/FindUsersInput"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/FindUsersInput"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/PagedResultDtoOfNameValueDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PagedResultDtoOfNameValueDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/PagedResultDtoOfNameValueDto"
                }
              }
            }
          }
        }
      }
    },
    "/api/services/app/CommonLookup/GetDefaultEditionName": {
      "get": {
        "tags": [
          "CommonLookup"
        ],
        "operationId": "ApiServicesAppCommonlookupGetdefaulteditionnameGet",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/GetDefaultEditionNameOutput"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetDefaultEditionNameOutput"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetDefaultEditionNameOutput"
                }
              }
            }
          }
        }
      }
    },
    "/api/services/app/Countries/GetAll": {
      "get": {
        "tags": [
          "Countries"
        ],
        "operationId": "ApiServicesAppCountriesGetallGet",
        "parameters": [
          {
            "name": "Filter",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "NameFilter",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "ISO3Filter",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "ISO2Filter",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "PhoneCodeFilter",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "CapitalFilter",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "CurrencyFilter",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "NativeNameFilter",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "RegionFilter",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "SubregionFilter",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "Sorting",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "SkipCount",
            "in": "query",
            "schema": {
              "maximum": 2147483647,
              "minimum": 0,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "MaxResultCount",
            "in": "query",
            "schema": {
              "maximum": 2147483647,
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/PagedResultDtoOfGetCountryForViewDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PagedResultDtoOfGetCountryForViewDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/PagedResultDtoOfGetCountryForViewDto"
                }
              }
            }
          }
        }
      }
    },
    "/api/services/app/Countries/Whole": {
      "post": {
        "tags": [
          "Countries"
        ],
        "operationId": "ApiServicesAppCountriesWholePost",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ListResultDtoOfGetCountryForViewDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ListResultDtoOfGetCountryForViewDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ListResultDtoOfGetCountryForViewDto"
                }
              }
            }
          }
        }
      }
    },
    "/api/services/app/Countries/GetCountryForView": {
      "get": {
        "tags": [
          "Countries"
        ],
        "operationId": "ApiServicesAppCountriesGetcountryforviewGet",
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/GetCountryForViewDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetCountryForViewDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetCountryForViewDto"
                }
              }
            }
          }
        }
      }
    },
    "/api/services/app/Countries/GetCountryForEdit": {
      "get": {
        "tags": [
          "Countries"
        ],
        "operationId": "ApiServicesAppCountriesGetcountryforeditGet",
        "parameters": [
          {
            "name": "Id",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/GetCountryForEditOutput"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetCountryForEditOutput"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetCountryForEditOutput"
                }
              }
            }
          }
        }
      }
    },
    "/api/services/app/Countries/CreateOrEdit": {
      "post": {
        "tags": [
          "Countries"
        ],
        "operationId": "ApiServicesAppCountriesCreateoreditPost",
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/CreateOrEditCountryDto"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateOrEditCountryDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateOrEditCountryDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/CreateOrEditCountryDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/services/app/Countries/Delete": {
      "delete": {
        "tags": [
          "Countries"
        ],
        "operationId": "ApiServicesAppCountriesDeleteDelete",
        "parameters": [
          {
            "name": "Id",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/services/app/Countries/GetCountriesToExcel": {
      "get": {
        "tags": [
          "Countries"
        ],
        "operationId": "ApiServicesAppCountriesGetcountriestoexcelGet",
        "parameters": [
          {
            "name": "Filter",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "NameFilter",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "ISO3Filter",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "ISO2Filter",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "PhoneCodeFilter",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "CapitalFilter",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "CurrencyFilter",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "NativeNameFilter",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "RegionFilter",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "SubregionFilter",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/FileDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FileDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/FileDto"
                }
              }
            }
          }
        }
      }
    },
    "/api/services/app/CryptorEngine/Encrypt": {
      "post": {
        "tags": [
          "CryptorEngine"
        ],
        "operationId": "ApiServicesAppCryptorengineEncryptPost",
        "parameters": [
          {
            "name": "toEncrypt",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "useHashing",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                }
              },
              "application/json": {
                "schema": {
                  "type": "string"
                }
              },
              "text/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/api/services/app/CryptorEngine/Decrypt": {
      "post": {
        "tags": [
          "CryptorEngine"
        ],
        "operationId": "ApiServicesAppCryptorengineDecryptPost",
        "parameters": [
          {
            "name": "cipherString",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "useHashing",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                }
              },
              "application/json": {
                "schema": {
                  "type": "string"
                }
              },
              "text/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/api/services/app/DashboardCustomization/GetUserDashboard": {
      "get": {
        "tags": [
          "DashboardCustomization"
        ],
        "operationId": "ApiServicesAppDashboardcustomizationGetuserdashboardGet",
        "parameters": [
          {
            "name": "DashboardName",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "Application",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Dashboard"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Dashboard"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Dashboard"
                }
              }
            }
          }
        }
      }
    },
    "/api/services/app/DashboardCustomization/SavePage": {
      "post": {
        "tags": [
          "DashboardCustomization"
        ],
        "operationId": "ApiServicesAppDashboardcustomizationSavepagePost",
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/SavePageInput"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SavePageInput"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/SavePageInput"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/SavePageInput"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/services/app/DashboardCustomization/RenamePage": {
      "post": {
        "tags": [
          "DashboardCustomization"
        ],
        "operationId": "ApiServicesAppDashboardcustomizationRenamepagePost",
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/RenamePageInput"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RenamePageInput"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/RenamePageInput"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/RenamePageInput"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/services/app/DashboardCustomization/AddNewPage": {
      "post": {
        "tags": [
          "DashboardCustomization"
        ],
        "operationId": "ApiServicesAppDashboardcustomizationAddnewpagePost",
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/AddNewPageInput"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AddNewPageInput"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/AddNewPageInput"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/AddNewPageInput"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AddNewPageOutput"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AddNewPageOutput"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AddNewPageOutput"
                }
              }
            }
          }
        }
      }
    },
    "/api/services/app/DashboardCustomization/DeletePage": {
      "delete": {
        "tags": [
          "DashboardCustomization"
        ],
        "operationId": "ApiServicesAppDashboardcustomizationDeletepageDelete",
        "parameters": [
          {
            "name": "Id",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "DashboardName",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "Application",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/services/app/DashboardCustomization/AddWidget": {
      "post": {
        "tags": [
          "DashboardCustomization"
        ],
        "operationId": "ApiServicesAppDashboardcustomizationAddwidgetPost",
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/AddWidgetInput"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AddWidgetInput"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/AddWidgetInput"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/AddWidgetInput"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Widget"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Widget"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Widget"
                }
              }
            }
          }
        }
      }
    },
    "/api/services/app/DashboardCustomization/GetDashboardDefinition": {
      "get": {
        "tags": [
          "DashboardCustomization"
        ],
        "operationId": "ApiServicesAppDashboardcustomizationGetdashboarddefinitionGet",
        "parameters": [
          {
            "name": "DashboardName",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "Application",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/DashboardOutput"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DashboardOutput"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/DashboardOutput"
                }
              }
            }
          }
        }
      }
    },
    "/api/services/app/DashboardCustomization/GetAllWidgetDefinitions": {
      "get": {
        "tags": [
          "DashboardCustomization"
        ],
        "operationId": "ApiServicesAppDashboardcustomizationGetallwidgetdefinitionsGet",
        "parameters": [
          {
            "name": "DashboardName",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "Application",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/WidgetOutput"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/WidgetOutput"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/WidgetOutput"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/services/app/DashboardCustomization/GetSettingName": {
      "get": {
        "tags": [
          "DashboardCustomization"
        ],
        "operationId": "ApiServicesAppDashboardcustomizationGetsettingnameGet",
        "parameters": [
          {
            "name": "application",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                }
              },
              "application/json": {
                "schema": {
                  "type": "string"
                }
              },
              "text/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/api/services/app/DemoUiComponents/SendAndGetDate": {
      "post": {
        "tags": [
          "DemoUiComponents"
        ],
        "operationId": "ApiServicesAppDemouicomponentsSendandgetdatePost",
        "parameters": [
          {
            "name": "date",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date-time",
              "nullable": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/DateToStringOutput"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DateToStringOutput"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/DateToStringOutput"
                }
              }
            }
          }
        }
      }
    },
    "/api/services/app/DemoUiComponents/SendAndGetDateTime": {
      "post": {
        "tags": [
          "DemoUiComponents"
        ],
        "operationId": "ApiServicesAppDemouicomponentsSendandgetdatetimePost",
        "parameters": [
          {
            "name": "date",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date-time",
              "nullable": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/DateToStringOutput"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DateToStringOutput"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/DateToStringOutput"
                }
              }
            }
          }
        }
      }
    },
    "/api/services/app/DemoUiComponents/SendAndGetDateRange": {
      "post": {
        "tags": [
          "DemoUiComponents"
        ],
        "operationId": "ApiServicesAppDemouicomponentsSendandgetdaterangePost",
        "parameters": [
          {
            "name": "startDate",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date-time",
              "nullable": true
            }
          },
          {
            "name": "endDate",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date-time",
              "nullable": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/DateToStringOutput"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DateToStringOutput"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/DateToStringOutput"
                }
              }
            }
          }
        }
      }
    },
    "/api/services/app/DemoUiComponents/GetCountries": {
      "get": {
        "tags": [
          "DemoUiComponents"
        ],
        "operationId": "ApiServicesAppDemouicomponentsGetcountriesGet",
        "parameters": [
          {
            "name": "searchTerm",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/NameValueOfString"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/NameValueOfString"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/NameValueOfString"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/services/app/DemoUiComponents/SendAndGetSelectedCountries": {
      "post": {
        "tags": [
          "DemoUiComponents"
        ],
        "operationId": "ApiServicesAppDemouicomponentsSendandgetselectedcountriesPost",
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/NameValueOfString"
                },
                "nullable": true
              }
            },
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/NameValueOfString"
                },
                "nullable": true
              }
            },
            "text/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/NameValueOfString"
                },
                "nullable": true
              }
            },
            "application/*+json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/NameValueOfString"
                },
                "nullable": true
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/NameValueOfString"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/NameValueOfString"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/NameValueOfString"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/services/app/DemoUiComponents/SendAndGetValue": {
      "post": {
        "tags": [
          "DemoUiComponents"
        ],
        "operationId": "ApiServicesAppDemouicomponentsSendandgetvaluePost",
        "parameters": [
          {
            "name": "input",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/StringOutput"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StringOutput"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/StringOutput"
                }
              }
            }
          }
        }
      }
    },
    "/api/services/app/DetailedEmployeeReports/GetAll": {
      "get": {
        "tags": [
          "DetailedEmployeeReports"
        ],
        "operationId": "ApiServicesAppDetailedemployeereportsGetallGet",
        "parameters": [
          {
            "name": "UserIdFilter",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "UserNameFilter",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "WorkScheduleIdFilter",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "WorkScheduleNameFilter",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "ReportDateFrom",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "ReportDateTo",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/GetDetailedEmployeeReportForViewDto"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/GetDetailedEmployeeReportForViewDto"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/GetDetailedEmployeeReportForViewDto"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/services/app/Devices/GetAll": {
      "get": {
        "tags": [
          "Devices"
        ],
        "operationId": "ApiServicesAppDevicesGetallGet",
        "parameters": [
          {
            "name": "Filter",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "SerialNumberFilter",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "QRCodeFilter",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "BssIdFilter",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "SsIdFilter",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "UuIdFilter",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "MajorFilter",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "MinorFilter",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "NameFilter",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "DeviceTypeTitleFilter",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "DeviceStatusIdFilter",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32",
              "nullable": true
            }
          },
          {
            "name": "Sorting",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "SkipCount",
            "in": "query",
            "schema": {
              "maximum": 2147483647,
              "minimum": 0,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "MaxResultCount",
            "in": "query",
            "schema": {
              "maximum": 2147483647,
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/PagedResultDtoOfGetDeviceForViewDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PagedResultDtoOfGetDeviceForViewDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/PagedResultDtoOfGetDeviceForViewDto"
                }
              }
            }
          }
        }
      }
    },
    "/api/services/app/Devices/GetDeviceForView": {
      "get": {
        "tags": [
          "Devices"
        ],
        "operationId": "ApiServicesAppDevicesGetdeviceforviewGet",
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/GetDeviceForViewDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetDeviceForViewDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetDeviceForViewDto"
                }
              }
            }
          }
        }
      }
    },
    "/api/services/app/Devices/GetDeviceSerial": {
      "get": {
        "tags": [
          "Devices"
        ],
        "operationId": "ApiServicesAppDevicesGetdeviceserialGet",
        "parameters": [
          {
            "name": "QRCode",
            "in": "query",
            "required": true,
            "schema": {
              "maxLength": 50,
              "minLength": 1,
              "type": "string"
            }
          },
          {
            "name": "Password",
            "in": "query",
            "required": true,
            "schema": {
              "maxLength": 128,
              "minLength": 1,
              "type": "string"
            }
          },
          {
            "name": "ManagerMobileNumber",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/GetDeviceSerialDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetDeviceSerialDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetDeviceSerialDto"
                }
              }
            }
          }
        }
      }
    },
    "/api/services/app/Devices/GetDeviceForRegistration": {
      "get": {
        "tags": [
          "Devices"
        ],
        "operationId": "ApiServicesAppDevicesGetdeviceforregistrationGet",
        "parameters": [
          {
            "name": "deviceEncryptedSerial",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/GetDeviceDetailForRegistrationDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetDeviceDetailForRegistrationDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetDeviceDetailForRegistrationDto"
                }
              }
            }
          }
        }
      }
    },
    "/api/services/app/Devices/GetDeviceForEdit": {
      "get": {
        "tags": [
          "Devices"
        ],
        "operationId": "ApiServicesAppDevicesGetdeviceforeditGet",
        "parameters": [
          {
            "name": "Id",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/GetDeviceForEditOutput"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetDeviceForEditOutput"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetDeviceForEditOutput"
                }
              }
            }
          }
        }
      }
    },
    "/api/services/app/Devices/CreateOrEdit": {
      "post": {
        "tags": [
          "Devices"
        ],
        "operationId": "ApiServicesAppDevicesCreateoreditPost",
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/CreateOrEditDeviceDto"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateOrEditDeviceDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateOrEditDeviceDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/CreateOrEditDeviceDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/services/app/Devices/UpdateMyDevice": {
      "put": {
        "tags": [
          "Devices"
        ],
        "operationId": "ApiServicesAppDevicesUpdatemydevicePut",
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/EditMyDeviceDto"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EditMyDeviceDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/EditMyDeviceDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/EditMyDeviceDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/services/app/Devices/Delete": {
      "delete": {
        "tags": [
          "Devices"
        ],
        "operationId": "ApiServicesAppDevicesDeleteDelete",
        "parameters": [
          {
            "name": "Id",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/services/app/Devices/GetDevicesToExcel": {
      "get": {
        "tags": [
          "Devices"
        ],
        "operationId": "ApiServicesAppDevicesGetdevicestoexcelGet",
        "parameters": [
          {
            "name": "Filter",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "SerialNumberFilter",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "QRCodeFilter",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "BssIdFilter",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "SsIdFilter",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "UuIdFilter",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "MajorFilter",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "MinorFilter",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "NameFilter",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "DeviceTypeTitleFilter",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "DeviceStatusIdFilter",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32",
              "nullable": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/FileDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FileDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/FileDto"
                }
              }
            }
          }
        }
      }
    },
    "/api/services/app/Devices/GetAllDeviceTypeForLookupTable": {
      "get": {
        "tags": [
          "Devices"
        ],
        "operationId": "ApiServicesAppDevicesGetalldevicetypeforlookuptableGet",
        "parameters": [
          {
            "name": "Filter",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "Sorting",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "SkipCount",
            "in": "query",
            "schema": {
              "maximum": 2147483647,
              "minimum": 0,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "MaxResultCount",
            "in": "query",
            "schema": {
              "maximum": 2147483647,
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/PagedResultDtoOfDeviceDeviceTypeLookupTableDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PagedResultDtoOfDeviceDeviceTypeLookupTableDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/PagedResultDtoOfDeviceDeviceTypeLookupTableDto"
                }
              }
            }
          }
        }
      }
    },
    "/api/services/app/Devices/Available": {
      "post": {
        "tags": [
          "Devices"
        ],
        "operationId": "ApiServicesAppDevicesAvailablePost",
        "parameters": [
          {
            "name": "deviceId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/services/app/Devices/Assign": {
      "post": {
        "tags": [
          "Devices"
        ],
        "operationId": "ApiServicesAppDevicesAssignPost",
        "parameters": [
          {
            "name": "deviceId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/services/app/Devices/Active": {
      "post": {
        "tags": [
          "Devices"
        ],
        "operationId": "ApiServicesAppDevicesActivePost",
        "parameters": [
          {
            "name": "deviceId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/services/app/Devices/Suspend": {
      "post": {
        "tags": [
          "Devices"
        ],
        "operationId": "ApiServicesAppDevicesSuspendPost",
        "parameters": [
          {
            "name": "deviceId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/services/app/Devices/Deactive": {
      "post": {
        "tags": [
          "Devices"
        ],
        "operationId": "ApiServicesAppDevicesDeactivePost",
        "parameters": [
          {
            "name": "deviceId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/services/app/Devices/Reset": {
      "post": {
        "tags": [
          "Devices"
        ],
        "operationId": "ApiServicesAppDevicesResetPost",
        "parameters": [
          {
            "name": "deviceId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/services/app/DeviceTypes/GetAll": {
      "get": {
        "tags": [
          "DeviceTypes"
        ],
        "operationId": "ApiServicesAppDevicetypesGetallGet",
        "parameters": [
          {
            "name": "Filter",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "TitleFilter",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "Sorting",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "SkipCount",
            "in": "query",
            "schema": {
              "maximum": 2147483647,
              "minimum": 0,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "MaxResultCount",
            "in": "query",
            "schema": {
              "maximum": 2147483647,
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/PagedResultDtoOfGetDeviceTypeForViewDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PagedResultDtoOfGetDeviceTypeForViewDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/PagedResultDtoOfGetDeviceTypeForViewDto"
                }
              }
            }
          }
        }
      }
    },
    "/api/services/app/DeviceTypes/GetDeviceTypeForView": {
      "get": {
        "tags": [
          "DeviceTypes"
        ],
        "operationId": "ApiServicesAppDevicetypesGetdevicetypeforviewGet",
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/GetDeviceTypeForViewDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetDeviceTypeForViewDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetDeviceTypeForViewDto"
                }
              }
            }
          }
        }
      }
    },
    "/api/services/app/DeviceTypes/GetDeviceTypeForEdit": {
      "get": {
        "tags": [
          "DeviceTypes"
        ],
        "operationId": "ApiServicesAppDevicetypesGetdevicetypeforeditGet",
        "parameters": [
          {
            "name": "Id",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/GetDeviceTypeForEditOutput"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetDeviceTypeForEditOutput"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetDeviceTypeForEditOutput"
                }
              }
            }
          }
        }
      }
    },
    "/api/services/app/DeviceTypes/CreateOrEdit": {
      "post": {
        "tags": [
          "DeviceTypes"
        ],
        "operationId": "ApiServicesAppDevicetypesCreateoreditPost",
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/CreateOrEditDeviceTypeDto"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateOrEditDeviceTypeDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateOrEditDeviceTypeDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/CreateOrEditDeviceTypeDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/services/app/DeviceTypes/Delete": {
      "delete": {
        "tags": [
          "DeviceTypes"
        ],
        "operationId": "ApiServicesAppDevicetypesDeleteDelete",
        "parameters": [
          {
            "name": "Id",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/services/app/DeviceTypes/GetDeviceTypesToExcel": {
      "get": {
        "tags": [
          "DeviceTypes"
        ],
        "operationId": "ApiServicesAppDevicetypesGetdevicetypestoexcelGet",
        "parameters": [
          {
            "name": "Filter",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "TitleFilter",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/FileDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FileDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/FileDto"
                }
              }
            }
          }
        }
      }
    },
    "/api/services/app/DynamicEntityProperty/Get": {
      "get": {
        "tags": [
          "DynamicEntityProperty"
        ],
        "operationId": "ApiServicesAppDynamicentitypropertyGetGet",
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/DynamicEntityPropertyDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DynamicEntityPropertyDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/DynamicEntityPropertyDto"
                }
              }
            }
          }
        }
      }
    },
    "/api/services/app/DynamicEntityProperty/GetAllPropertiesOfAnEntity": {
      "get": {
        "tags": [
          "DynamicEntityProperty"
        ],
        "operationId": "ApiServicesAppDynamicentitypropertyGetallpropertiesofanentityGet",
        "parameters": [
          {
            "name": "EntityFullName",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ListResultDtoOfDynamicEntityPropertyDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ListResultDtoOfDynamicEntityPropertyDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ListResultDtoOfDynamicEntityPropertyDto"
                }
              }
            }
          }
        }
      }
    },
    "/api/services/app/DynamicEntityProperty/GetAll": {
      "get": {
        "tags": [
          "DynamicEntityProperty"
        ],
        "operationId": "ApiServicesAppDynamicentitypropertyGetallGet",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ListResultDtoOfDynamicEntityPropertyDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ListResultDtoOfDynamicEntityPropertyDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ListResultDtoOfDynamicEntityPropertyDto"
                }
              }
            }
          }
        }
      }
    },
    "/api/services/app/DynamicEntityProperty/Add": {
      "post": {
        "tags": [
          "DynamicEntityProperty"
        ],
        "operationId": "ApiServicesAppDynamicentitypropertyAddPost",
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/DynamicEntityPropertyDto"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DynamicEntityPropertyDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/DynamicEntityPropertyDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/DynamicEntityPropertyDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/services/app/DynamicEntityProperty/Update": {
      "put": {
        "tags": [
          "DynamicEntityProperty"
        ],
        "operationId": "ApiServicesAppDynamicentitypropertyUpdatePut",
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/DynamicEntityPropertyDto"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DynamicEntityPropertyDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/DynamicEntityPropertyDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/DynamicEntityPropertyDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/services/app/DynamicEntityProperty/Delete": {
      "delete": {
        "tags": [
          "DynamicEntityProperty"
        ],
        "operationId": "ApiServicesAppDynamicentitypropertyDeleteDelete",
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/services/app/DynamicEntityProperty/GetAllEntitiesHasDynamicProperty": {
      "get": {
        "tags": [
          "DynamicEntityProperty"
        ],
        "operationId": "ApiServicesAppDynamicentitypropertyGetallentitieshasdynamicpropertyGet",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ListResultDtoOfGetAllEntitiesHasDynamicPropertyOutput"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ListResultDtoOfGetAllEntitiesHasDynamicPropertyOutput"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ListResultDtoOfGetAllEntitiesHasDynamicPropertyOutput"
                }
              }
            }
          }
        }
      }
    },
    "/api/services/app/DynamicEntityPropertyDefinition/GetAllAllowedInputTypeNames": {
      "get": {
        "tags": [
          "DynamicEntityPropertyDefinition"
        ],
        "operationId": "ApiServicesAppDynamicentitypropertydefinitionGetallallowedinputtypenamesGet",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/services/app/DynamicEntityPropertyDefinition/GetAllEntities": {
      "get": {
        "tags": [
          "DynamicEntityPropertyDefinition"
        ],
        "operationId": "ApiServicesAppDynamicentitypropertydefinitionGetallentitiesGet",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/services/app/DynamicEntityPropertyValue/Get": {
      "get": {
        "tags": [
          "DynamicEntityPropertyValue"
        ],
        "operationId": "ApiServicesAppDynamicentitypropertyvalueGetGet",
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/DynamicEntityPropertyValueDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DynamicEntityPropertyValueDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/DynamicEntityPropertyValueDto"
                }
              }
            }
          }
        }
      }
    },
    "/api/services/app/DynamicEntityPropertyValue/GetAll": {
      "get": {
        "tags": [
          "DynamicEntityPropertyValue"
        ],
        "operationId": "ApiServicesAppDynamicentitypropertyvalueGetallGet",
        "parameters": [
          {
            "name": "EntityId",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "PropertyId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ListResultDtoOfDynamicEntityPropertyValueDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ListResultDtoOfDynamicEntityPropertyValueDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ListResultDtoOfDynamicEntityPropertyValueDto"
                }
              }
            }
          }
        }
      }
    },
    "/api/services/app/DynamicEntityPropertyValue/Add": {
      "post": {
        "tags": [
          "DynamicEntityPropertyValue"
        ],
        "operationId": "ApiServicesAppDynamicentitypropertyvalueAddPost",
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/DynamicEntityPropertyValueDto"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DynamicEntityPropertyValueDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/DynamicEntityPropertyValueDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/DynamicEntityPropertyValueDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/services/app/DynamicEntityPropertyValue/Update": {
      "put": {
        "tags": [
          "DynamicEntityPropertyValue"
        ],
        "operationId": "ApiServicesAppDynamicentitypropertyvalueUpdatePut",
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/DynamicEntityPropertyValueDto"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DynamicEntityPropertyValueDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/DynamicEntityPropertyValueDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/DynamicEntityPropertyValueDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/services/app/DynamicEntityPropertyValue/Delete": {
      "delete": {
        "tags": [
          "DynamicEntityPropertyValue"
        ],
        "operationId": "ApiServicesAppDynamicentitypropertyvalueDeleteDelete",
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/services/app/DynamicEntityPropertyValue/GetAllDynamicEntityPropertyValues": {
      "get": {
        "tags": [
          "DynamicEntityPropertyValue"
        ],
        "operationId": "ApiServicesAppDynamicentitypropertyvalueGetalldynamicentitypropertyvaluesGet",
        "parameters": [
          {
            "name": "EntityFullName",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "EntityId",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/GetAllDynamicEntityPropertyValuesOutput"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetAllDynamicEntityPropertyValuesOutput"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetAllDynamicEntityPropertyValuesOutput"
                }
              }
            }
          }
        }
      }
    },
    "/api/services/app/DynamicEntityPropertyValue/InsertOrUpdateAllValues": {
      "post": {
        "tags": [
          "DynamicEntityPropertyValue"
        ],
        "operationId": "ApiServicesAppDynamicentitypropertyvalueInsertorupdateallvaluesPost",
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/InsertOrUpdateAllValuesInput"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/InsertOrUpdateAllValuesInput"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/InsertOrUpdateAllValuesInput"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/InsertOrUpdateAllValuesInput"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/services/app/DynamicEntityPropertyValue/CleanValues": {
      "post": {
        "tags": [
          "DynamicEntityPropertyValue"
        ],
        "operationId": "ApiServicesAppDynamicentitypropertyvalueCleanvaluesPost",
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/CleanValuesInput"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CleanValuesInput"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/CleanValuesInput"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/CleanValuesInput"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/services/app/DynamicProperty/Get": {
      "get": {
        "tags": [
          "DynamicProperty"
        ],
        "operationId": "ApiServicesAppDynamicpropertyGetGet",
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/DynamicPropertyDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DynamicPropertyDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/DynamicPropertyDto"
                }
              }
            }
          }
        }
      }
    },
    "/api/services/app/DynamicProperty/GetAll": {
      "get": {
        "tags": [
          "DynamicProperty"
        ],
        "operationId": "ApiServicesAppDynamicpropertyGetallGet",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ListResultDtoOfDynamicPropertyDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ListResultDtoOfDynamicPropertyDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ListResultDtoOfDynamicPropertyDto"
                }
              }
            }
          }
        }
      }
    },
    "/api/services/app/DynamicProperty/Add": {
      "post": {
        "tags": [
          "DynamicProperty"
        ],
        "operationId": "ApiServicesAppDynamicpropertyAddPost",
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/DynamicPropertyDto"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DynamicPropertyDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/DynamicPropertyDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/DynamicPropertyDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/services/app/DynamicProperty/Update": {
      "put": {
        "tags": [
          "DynamicProperty"
        ],
        "operationId": "ApiServicesAppDynamicpropertyUpdatePut",
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/DynamicPropertyDto"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DynamicPropertyDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/DynamicPropertyDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/DynamicPropertyDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/services/app/DynamicProperty/Delete": {
      "delete": {
        "tags": [
          "DynamicProperty"
        ],
        "operationId": "ApiServicesAppDynamicpropertyDeleteDelete",
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/services/app/DynamicProperty/FindAllowedInputType": {
      "post": {
        "tags": [
          "DynamicProperty"
        ],
        "operationId": "ApiServicesAppDynamicpropertyFindallowedinputtypePost",
        "parameters": [
          {
            "name": "name",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/IInputType"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IInputType"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/IInputType"
                }
              }
            }
          }
        }
      }
    },
    "/api/services/app/DynamicPropertyValue/Get": {
      "get": {
        "tags": [
          "DynamicPropertyValue"
        ],
        "operationId": "ApiServicesAppDynamicpropertyvalueGetGet",
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/DynamicPropertyValueDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DynamicPropertyValueDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/DynamicPropertyValueDto"
                }
              }
            }
          }
        }
      }
    },
    "/api/services/app/DynamicPropertyValue/GetAllValuesOfDynamicProperty": {
      "get": {
        "tags": [
          "DynamicPropertyValue"
        ],
        "operationId": "ApiServicesAppDynamicpropertyvalueGetallvaluesofdynamicpropertyGet",
        "parameters": [
          {
            "name": "Id",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ListResultDtoOfDynamicPropertyValueDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ListResultDtoOfDynamicPropertyValueDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ListResultDtoOfDynamicPropertyValueDto"
                }
              }
            }
          }
        }
      }
    },
    "/api/services/app/DynamicPropertyValue/Add": {
      "post": {
        "tags": [
          "DynamicPropertyValue"
        ],
        "operationId": "ApiServicesAppDynamicpropertyvalueAddPost",
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/DynamicPropertyValueDto"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DynamicPropertyValueDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/DynamicPropertyValueDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/DynamicPropertyValueDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/services/app/DynamicPropertyValue/Update": {
      "put": {
        "tags": [
          "DynamicPropertyValue"
        ],
        "operationId": "ApiServicesAppDynamicpropertyvalueUpdatePut",
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/DynamicPropertyValueDto"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DynamicPropertyValueDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/DynamicPropertyValueDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/DynamicPropertyValueDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/services/app/DynamicPropertyValue/Delete": {
      "delete": {
        "tags": [
          "DynamicPropertyValue"
        ],
        "operationId": "ApiServicesAppDynamicpropertyvalueDeleteDelete",
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/services/app/Edition/GetEditions": {
      "get": {
        "tags": [
          "Edition"
        ],
        "operationId": "ApiServicesAppEditionGeteditionsGet",
        "parameters": [
          {
            "name": "Filter",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "EditionTypeFilter",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32",
              "nullable": true
            }
          },
          {
            "name": "IsActiveFilter",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32",
              "nullable": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ListResultDtoOfEditionListDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ListResultDtoOfEditionListDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ListResultDtoOfEditionListDto"
                }
              }
            }
          }
        }
      }
    },
    "/api/services/app/Edition/GetEditionForEdit": {
      "get": {
        "tags": [
          "Edition"
        ],
        "operationId": "ApiServicesAppEditionGeteditionforeditGet",
        "parameters": [
          {
            "name": "Id",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32",
              "nullable": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/GetEditionEditOutput"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetEditionEditOutput"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetEditionEditOutput"
                }
              }
            }
          }
        }
      }
    },
    "/api/services/app/Edition/CreateEdition": {
      "post": {
        "tags": [
          "Edition"
        ],
        "operationId": "ApiServicesAppEditionCreateeditionPost",
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/CreateEditionDto"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateEditionDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateEditionDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/CreateEditionDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/services/app/Edition/UpdateEdition": {
      "put": {
        "tags": [
          "Edition"
        ],
        "operationId": "ApiServicesAppEditionUpdateeditionPut",
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateEditionDto"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateEditionDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateEditionDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateEditionDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/services/app/Edition/DeleteEdition": {
      "delete": {
        "tags": [
          "Edition"
        ],
        "operationId": "ApiServicesAppEditionDeleteeditionDelete",
        "parameters": [
          {
            "name": "Id",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/services/app/Edition/MoveTenantsToAnotherEdition": {
      "post": {
        "tags": [
          "Edition"
        ],
        "operationId": "ApiServicesAppEditionMovetenantstoanothereditionPost",
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/MoveTenantsToAnotherEditionDto"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/MoveTenantsToAnotherEditionDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/MoveTenantsToAnotherEditionDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/MoveTenantsToAnotherEditionDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/services/app/Edition/GetEditionComboboxItems": {
      "get": {
        "tags": [
          "Edition"
        ],
        "operationId": "ApiServicesAppEditionGeteditioncomboboxitemsGet",
        "parameters": [
          {
            "name": "selectedEditionId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32",
              "nullable": true
            }
          },
          {
            "name": "addAllItem",
            "in": "query",
            "schema": {
              "type": "boolean",
              "default": false
            }
          },
          {
            "name": "onlyFreeItems",
            "in": "query",
            "schema": {
              "type": "boolean",
              "default": false
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/SubscribableEditionComboboxItemDto"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/SubscribableEditionComboboxItemDto"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/SubscribableEditionComboboxItemDto"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/services/app/Edition/GetTenantCount": {
      "get": {
        "tags": [
          "Edition"
        ],
        "operationId": "ApiServicesAppEditionGettenantcountGet",
        "parameters": [
          {
            "name": "editionId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              },
              "application/json": {
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              },
              "text/json": {
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              }
            }
          }
        }
      }
    },
    "/api/services/app/EditionDevices/GetAll": {
      "get": {
        "tags": [
          "EditionDevices"
        ],
        "operationId": "ApiServicesAppEditiondevicesGetallGet",
        "parameters": [
          {
            "name": "Filter",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "SubscribableEditionDisplayNameFilter",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "DeviceSerialNumberFilter",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "PurchasingResourceTitleFilter",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "Sorting",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "SkipCount",
            "in": "query",
            "schema": {
              "maximum": 2147483647,
              "minimum": 0,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "MaxResultCount",
            "in": "query",
            "schema": {
              "maximum": 2147483647,
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/PagedResultDtoOfGetEditionDeviceForViewDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PagedResultDtoOfGetEditionDeviceForViewDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/PagedResultDtoOfGetEditionDeviceForViewDto"
                }
              }
            }
          }
        }
      }
    },
    "/api/services/app/EditionDevices/GetEditionDeviceForView": {
      "get": {
        "tags": [
          "EditionDevices"
        ],
        "operationId": "ApiServicesAppEditiondevicesGeteditiondeviceforviewGet",
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/GetEditionDeviceForViewDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetEditionDeviceForViewDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetEditionDeviceForViewDto"
                }
              }
            }
          }
        }
      }
    },
    "/api/services/app/EditionDevices/GetEditionDeviceByDeviceId": {
      "get": {
        "tags": [
          "EditionDevices"
        ],
        "operationId": "ApiServicesAppEditiondevicesGeteditiondevicebydeviceidGet",
        "parameters": [
          {
            "name": "deviceId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/GetEditionDeviceForViewDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetEditionDeviceForViewDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetEditionDeviceForViewDto"
                }
              }
            }
          }
        }
      }
    },
    "/api/services/app/EditionDevices/Create": {
      "post": {
        "tags": [
          "EditionDevices"
        ],
        "operationId": "ApiServicesAppEditiondevicesCreatePost",
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/CreateEditionDeviceDto"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateEditionDeviceDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateEditionDeviceDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/CreateEditionDeviceDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/services/app/EditionDevices/GetEditionDeviceForEdit": {
      "get": {
        "tags": [
          "EditionDevices"
        ],
        "operationId": "ApiServicesAppEditiondevicesGeteditiondeviceforeditGet",
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/EditEditionDeviceFeaturesDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EditEditionDeviceFeaturesDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/EditEditionDeviceFeaturesDto"
                }
              }
            }
          }
        }
      }
    },
    "/api/services/app/EditionDevices/SaveFeatures": {
      "post": {
        "tags": [
          "EditionDevices"
        ],
        "operationId": "ApiServicesAppEditiondevicesSavefeaturesPost",
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/EditEditionDeviceFeaturesDto"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EditEditionDeviceFeaturesDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/EditEditionDeviceFeaturesDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/EditEditionDeviceFeaturesDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/services/app/EditionDevices/UpgradeFeatures": {
      "post": {
        "tags": [
          "EditionDevices"
        ],
        "operationId": "ApiServicesAppEditiondevicesUpgradefeaturesPost",
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/EditEditionDeviceFeaturesDto"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EditEditionDeviceFeaturesDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/EditEditionDeviceFeaturesDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/EditEditionDeviceFeaturesDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/services/app/EditionDevices/Delete": {
      "delete": {
        "tags": [
          "EditionDevices"
        ],
        "operationId": "ApiServicesAppEditiondevicesDeleteDelete",
        "parameters": [
          {
            "name": "Id",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/services/app/EditionDevices/RemoveAllEditionFromDevice": {
      "delete": {
        "tags": [
          "EditionDevices"
        ],
        "operationId": "ApiServicesAppEditiondevicesRemovealleditionfromdeviceDelete",
        "parameters": [
          {
            "name": "deviceId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/services/app/EditionDevices/GetEditionDevicesToExcel": {
      "get": {
        "tags": [
          "EditionDevices"
        ],
        "operationId": "ApiServicesAppEditiondevicesGeteditiondevicestoexcelGet",
        "parameters": [
          {
            "name": "Filter",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "SubscribableEditionDisplayNameFilter",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "DeviceSerialNumberFilter",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "PurchasingResourceTitleFilter",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/FileDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FileDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/FileDto"
                }
              }
            }
          }
        }
      }
    },
    "/api/services/app/EditionDevices/GetAllSubscribableEditionForLookupTable": {
      "get": {
        "tags": [
          "EditionDevices"
        ],
        "operationId": "ApiServicesAppEditiondevicesGetallsubscribableeditionforlookuptableGet",
        "parameters": [
          {
            "name": "Filter",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "Sorting",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "SkipCount",
            "in": "query",
            "schema": {
              "maximum": 2147483647,
              "minimum": 0,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "MaxResultCount",
            "in": "query",
            "schema": {
              "maximum": 2147483647,
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/PagedResultDtoOfEditionDeviceSubscribableEditionLookupTableDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PagedResultDtoOfEditionDeviceSubscribableEditionLookupTableDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/PagedResultDtoOfEditionDeviceSubscribableEditionLookupTableDto"
                }
              }
            }
          }
        }
      }
    },
    "/api/services/app/EditionDevices/GetAllAvailableDevices": {
      "get": {
        "tags": [
          "EditionDevices"
        ],
        "operationId": "ApiServicesAppEditiondevicesGetallavailabledevicesGet",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ListResultDtoOfAllAvailableDevicesDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ListResultDtoOfAllAvailableDevicesDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ListResultDtoOfAllAvailableDevicesDto"
                }
              }
            }
          }
        }
      }
    },
    "/api/services/app/EditionDevices/GetAllPurchasingResourceForLookupTable": {
      "get": {
        "tags": [
          "EditionDevices"
        ],
        "operationId": "ApiServicesAppEditiondevicesGetallpurchasingresourceforlookuptableGet",
        "parameters": [
          {
            "name": "Filter",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "Sorting",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "SkipCount",
            "in": "query",
            "schema": {
              "maximum": 2147483647,
              "minimum": 0,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "MaxResultCount",
            "in": "query",
            "schema": {
              "maximum": 2147483647,
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/PagedResultDtoOfEditionDevicePurchasingResourceLookupTableDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PagedResultDtoOfEditionDevicePurchasingResourceLookupTableDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/PagedResultDtoOfEditionDevicePurchasingResourceLookupTableDto"
                }
              }
            }
          }
        }
      }
    },
    "/api/services/app/EmployeeLeaveReports/GetAll": {
      "get": {
        "tags": [
          "EmployeeLeaveReports"
        ],
        "operationId": "ApiServicesAppEmployeeleavereportsGetallGet",
        "parameters": [
          {
            "name": "UserIdsFilter",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "integer",
                "format": "int64"
              },
              "nullable": true
            }
          },
          {
            "name": "OrganizationUnitId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int64",
              "nullable": true
            }
          },
          {
            "name": "UserIdFilter",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "UserNameFilter",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "ReportDateFrom",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "ReportDateTo",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "Sorting",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "SkipCount",
            "in": "query",
            "schema": {
              "maximum": 2147483647,
              "minimum": 0,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "MaxResultCount",
            "in": "query",
            "schema": {
              "maximum": 2147483647,
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/PagedResultDtoOfGetEmployeeLeaveReportForViewDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PagedResultDtoOfGetEmployeeLeaveReportForViewDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/PagedResultDtoOfGetEmployeeLeaveReportForViewDto"
                }
              }
            }
          }
        }
      }
    },
    "/api/services/app/EmployeeLeaveReports/GetEmployeeLeaveReportsToExcel": {
      "get": {
        "tags": [
          "EmployeeLeaveReports"
        ],
        "operationId": "ApiServicesAppEmployeeleavereportsGetemployeeleavereportstoexcelGet",
        "parameters": [
          {
            "name": "UserIdsFilter",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "integer",
                "format": "int64"
              },
              "nullable": true
            }
          },
          {
            "name": "OrganizationUnitId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int64",
              "nullable": true
            }
          },
          {
            "name": "UserNameFilter",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "ReportDateFrom",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "ReportDateTo",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/FileDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FileDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/FileDto"
                }
              }
            }
          }
        }
      }
    },
    "/api/services/app/EmployeeLeaveReports/GetDetailedReport": {
      "get": {
        "tags": [
          "EmployeeLeaveReports"
        ],
        "operationId": "ApiServicesAppEmployeeleavereportsGetdetailedreportGet",
        "parameters": [
          {
            "name": "UserIdsFilter",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "integer",
                "format": "int64"
              },
              "nullable": true
            }
          },
          {
            "name": "OrganizationUnitId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int64",
              "nullable": true
            }
          },
          {
            "name": "UserIdFilter",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "UserNameFilter",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "ReportDateFrom",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "ReportDateTo",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "Sorting",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "SkipCount",
            "in": "query",
            "schema": {
              "maximum": 2147483647,
              "minimum": 0,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "MaxResultCount",
            "in": "query",
            "schema": {
              "maximum": 2147483647,
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/GetDetailedEmployeeLeaveReportForViewDto"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/GetDetailedEmployeeLeaveReportForViewDto"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/GetDetailedEmployeeLeaveReportForViewDto"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/services/app/EmployeeMissionReports/GetAll": {
      "get": {
        "tags": [
          "EmployeeMissionReports"
        ],
        "operationId": "ApiServicesAppEmployeemissionreportsGetallGet",
        "parameters": [
          {
            "name": "UserIdsFilter",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "integer",
                "format": "int64"
              },
              "nullable": true
            }
          },
          {
            "name": "OrganizationUnitId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int64",
              "nullable": true
            }
          },
          {
            "name": "UserIdFilter",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "UserNameFilter",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "ReportDateFrom",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "ReportDateTo",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "Sorting",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "SkipCount",
            "in": "query",
            "schema": {
              "maximum": 2147483647,
              "minimum": 0,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "MaxResultCount",
            "in": "query",
            "schema": {
              "maximum": 2147483647,
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/PagedResultDtoOfGetEmployeeMissionReportForViewDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PagedResultDtoOfGetEmployeeMissionReportForViewDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/PagedResultDtoOfGetEmployeeMissionReportForViewDto"
                }
              }
            }
          }
        }
      }
    },
    "/api/services/app/EmployeeMissionReports/GetEmployeeMissionReportsToExcel": {
      "get": {
        "tags": [
          "EmployeeMissionReports"
        ],
        "operationId": "ApiServicesAppEmployeemissionreportsGetemployeemissionreportstoexcelGet",
        "parameters": [
          {
            "name": "UserIdsFilter",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "integer",
                "format": "int64"
              },
              "nullable": true
            }
          },
          {
            "name": "OrganizationUnitId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int64",
              "nullable": true
            }
          },
          {
            "name": "UserNameFilter",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "ReportDateFrom",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "ReportDateTo",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/FileDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FileDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/FileDto"
                }
              }
            }
          }
        }
      }
    },
    "/api/services/app/EmployeeMissionReports/GetDetailedReport": {
      "get": {
        "tags": [
          "EmployeeMissionReports"
        ],
        "operationId": "ApiServicesAppEmployeemissionreportsGetdetailedreportGet",
        "parameters": [
          {
            "name": "UserIdsFilter",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "integer",
                "format": "int64"
              },
              "nullable": true
            }
          },
          {
            "name": "OrganizationUnitId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int64",
              "nullable": true
            }
          },
          {
            "name": "UserIdFilter",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "UserNameFilter",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "ReportDateFrom",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "ReportDateTo",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "Sorting",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "SkipCount",
            "in": "query",
            "schema": {
              "maximum": 2147483647,
              "minimum": 0,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "MaxResultCount",
            "in": "query",
            "schema": {
              "maximum": 2147483647,
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/GetDetailedEmployeeMissionReportForViewDto"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/GetDetailedEmployeeMissionReportForViewDto"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/GetDetailedEmployeeMissionReportForViewDto"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/services/app/EnterLeaves/GetAll": {
      "get": {
        "tags": [
          "EnterLeaves"
        ],
        "operationId": "ApiServicesAppEnterleavesGetallGet",
        "parameters": [
          {
            "name": "Filter",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "EnterLeaveTypeFilter",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32",
              "nullable": true
            }
          },
          {
            "name": "MaxOccurDateFilter",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date-time",
              "nullable": true
            }
          },
          {
            "name": "MinOccurDateFilter",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date-time",
              "nullable": true
            }
          },
          {
            "name": "StatusFilter",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32",
              "nullable": true
            }
          },
          {
            "name": "Sorting",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "SkipCount",
            "in": "query",
            "schema": {
              "maximum": 2147483647,
              "minimum": 0,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "MaxResultCount",
            "in": "query",
            "schema": {
              "maximum": 2147483647,
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/PagedResultDtoOfGetEnterLeaveForViewDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PagedResultDtoOfGetEnterLeaveForViewDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/PagedResultDtoOfGetEnterLeaveForViewDto"
                }
              }
            }
          }
        }
      }
    },
    "/api/services/app/EnterLeaves/GetEnterLeaveForView": {
      "get": {
        "tags": [
          "EnterLeaves"
        ],
        "operationId": "ApiServicesAppEnterleavesGetenterleaveforviewGet",
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/GetEnterLeaveForViewDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetEnterLeaveForViewDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetEnterLeaveForViewDto"
                }
              }
            }
          }
        }
      }
    },
    "/api/services/app/EnterLeaves/GetEnterLeaveForEdit": {
      "get": {
        "tags": [
          "EnterLeaves"
        ],
        "operationId": "ApiServicesAppEnterleavesGetenterleaveforeditGet",
        "parameters": [
          {
            "name": "Id",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/GetEnterLeaveForEditOutput"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetEnterLeaveForEditOutput"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetEnterLeaveForEditOutput"
                }
              }
            }
          }
        }
      }
    },
    "/api/services/app/EnterLeaves/CreateOrEdit": {
      "post": {
        "tags": [
          "EnterLeaves"
        ],
        "operationId": "ApiServicesAppEnterleavesCreateoreditPost",
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/CreateOrEditEnterLeaveDto"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateOrEditEnterLeaveDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateOrEditEnterLeaveDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/CreateOrEditEnterLeaveDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/services/app/EnterLeaves/Delete": {
      "delete": {
        "tags": [
          "EnterLeaves"
        ],
        "operationId": "ApiServicesAppEnterleavesDeleteDelete",
        "parameters": [
          {
            "name": "Id",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/services/app/EnterLeaves/GetEnterLeavesToExcel": {
      "get": {
        "tags": [
          "EnterLeaves"
        ],
        "operationId": "ApiServicesAppEnterleavesGetenterleavestoexcelGet",
        "parameters": [
          {
            "name": "Filter",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "EnterLeaveTypeFilter",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32",
              "nullable": true
            }
          },
          {
            "name": "MaxOccurDateFilter",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date-time",
              "nullable": true
            }
          },
          {
            "name": "MinOccurDateFilter",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date-time",
              "nullable": true
            }
          },
          {
            "name": "StatusFilter",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32",
              "nullable": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/FileDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FileDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/FileDto"
                }
              }
            }
          }
        }
      }
    },
    "/api/services/app/EnterLeaves/ApproveRequests": {
      "post": {
        "tags": [
          "EnterLeaves"
        ],
        "operationId": "ApiServicesAppEnterleavesApproverequestsPost",
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/GetEnterLeaveForViewDto"
                },
                "nullable": true
              }
            },
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/GetEnterLeaveForViewDto"
                },
                "nullable": true
              }
            },
            "text/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/GetEnterLeaveForViewDto"
                },
                "nullable": true
              }
            },
            "application/*+json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/GetEnterLeaveForViewDto"
                },
                "nullable": true
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/services/app/EnterLeaves/RejectRequests": {
      "post": {
        "tags": [
          "EnterLeaves"
        ],
        "operationId": "ApiServicesAppEnterleavesRejectrequestsPost",
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/GetEnterLeaveForViewDto"
                },
                "nullable": true
              }
            },
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/GetEnterLeaveForViewDto"
                },
                "nullable": true
              }
            },
            "text/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/GetEnterLeaveForViewDto"
                },
                "nullable": true
              }
            },
            "application/*+json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/GetEnterLeaveForViewDto"
                },
                "nullable": true
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/services/app/Friendship/CreateFriendshipRequest": {
      "post": {
        "tags": [
          "Friendship"
        ],
        "operationId": "ApiServicesAppFriendshipCreatefriendshiprequestPost",
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/CreateFriendshipRequestInput"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateFriendshipRequestInput"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateFriendshipRequestInput"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/CreateFriendshipRequestInput"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/FriendDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FriendDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/FriendDto"
                }
              }
            }
          }
        }
      }
    },
    "/api/services/app/Friendship/CreateFriendshipRequestByUserName": {
      "post": {
        "tags": [
          "Friendship"
        ],
        "operationId": "ApiServicesAppFriendshipCreatefriendshiprequestbyusernamePost",
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/CreateFriendshipRequestByUserNameInput"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateFriendshipRequestByUserNameInput"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateFriendshipRequestByUserNameInput"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/CreateFriendshipRequestByUserNameInput"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/FriendDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FriendDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/FriendDto"
                }
              }
            }
          }
        }
      }
    },
    "/api/services/app/Friendship/BlockUser": {
      "post": {
        "tags": [
          "Friendship"
        ],
        "operationId": "ApiServicesAppFriendshipBlockuserPost",
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/BlockUserInput"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BlockUserInput"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/BlockUserInput"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/BlockUserInput"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/services/app/Friendship/UnblockUser": {
      "post": {
        "tags": [
          "Friendship"
        ],
        "operationId": "ApiServicesAppFriendshipUnblockuserPost",
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/UnblockUserInput"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UnblockUserInput"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/UnblockUserInput"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/UnblockUserInput"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/services/app/Friendship/AcceptFriendshipRequest": {
      "post": {
        "tags": [
          "Friendship"
        ],
        "operationId": "ApiServicesAppFriendshipAcceptfriendshiprequestPost",
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/AcceptFriendshipRequestInput"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AcceptFriendshipRequestInput"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/AcceptFriendshipRequestInput"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/AcceptFriendshipRequestInput"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/services/app/HostDashboard/GetTopStatsData": {
      "get": {
        "tags": [
          "HostDashboard"
        ],
        "operationId": "ApiServicesAppHostdashboardGettopstatsdataGet",
        "parameters": [
          {
            "name": "StartDate",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "EndDate",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/TopStatsData"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TopStatsData"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/TopStatsData"
                }
              }
            }
          }
        }
      }
    },
    "/api/services/app/HostDashboard/GetRecentTenantsData": {
      "get": {
        "tags": [
          "HostDashboard"
        ],
        "operationId": "ApiServicesAppHostdashboardGetrecenttenantsdataGet",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/GetRecentTenantsOutput"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetRecentTenantsOutput"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetRecentTenantsOutput"
                }
              }
            }
          }
        }
      }
    },
    "/api/services/app/HostDashboard/GetSubscriptionExpiringTenantsData": {
      "get": {
        "tags": [
          "HostDashboard"
        ],
        "operationId": "ApiServicesAppHostdashboardGetsubscriptionexpiringtenantsdataGet",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/GetExpiringTenantsOutput"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetExpiringTenantsOutput"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetExpiringTenantsOutput"
                }
              }
            }
          }
        }
      }
    },
    "/api/services/app/HostDashboard/GetIncomeStatistics": {
      "get": {
        "tags": [
          "HostDashboard"
        ],
        "operationId": "ApiServicesAppHostdashboardGetincomestatisticsGet",
        "parameters": [
          {
            "name": "IncomeStatisticsDateInterval",
            "in": "query",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/ChartDateInterval"
            }
          },
          {
            "name": "StartDate",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "EndDate",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/GetIncomeStatisticsDataOutput"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetIncomeStatisticsDataOutput"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetIncomeStatisticsDataOutput"
                }
              }
            }
          }
        }
      }
    },
    "/api/services/app/HostDashboard/GetEditionTenantStatistics": {
      "get": {
        "tags": [
          "HostDashboard"
        ],
        "operationId": "ApiServicesAppHostdashboardGeteditiontenantstatisticsGet",
        "parameters": [
          {
            "name": "StartDate",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "EndDate",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/GetEditionTenantStatisticsOutput"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetEditionTenantStatisticsOutput"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetEditionTenantStatisticsOutput"
                }
              }
            }
          }
        }
      }
    },
    "/api/services/app/HostSettings/GetAllSettings": {
      "get": {
        "tags": [
          "HostSettings"
        ],
        "operationId": "ApiServicesAppHostsettingsGetallsettingsGet",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/HostSettingsEditDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HostSettingsEditDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/HostSettingsEditDto"
                }
              }
            }
          }
        }
      }
    },
    "/api/services/app/HostSettings/UpdateAllSettings": {
      "put": {
        "tags": [
          "HostSettings"
        ],
        "operationId": "ApiServicesAppHostsettingsUpdateallsettingsPut",
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/HostSettingsEditDto"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/HostSettingsEditDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/HostSettingsEditDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/HostSettingsEditDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/services/app/HostSettings/SendTestEmail": {
      "post": {
        "tags": [
          "HostSettings"
        ],
        "operationId": "ApiServicesAppHostsettingsSendtestemailPost",
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/SendTestEmailInput"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SendTestEmailInput"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/SendTestEmailInput"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/SendTestEmailInput"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/services/app/HostSettings/GetEnabledSocialLoginSettings": {
      "get": {
        "tags": [
          "HostSettings"
        ],
        "operationId": "ApiServicesAppHostsettingsGetenabledsocialloginsettingsGet",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ExternalLoginSettingsDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ExternalLoginSettingsDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ExternalLoginSettingsDto"
                }
              }
            }
          }
        }
      }
    },
    "/api/services/app/Install/Setup": {
      "post": {
        "tags": [
          "Install"
        ],
        "operationId": "ApiServicesAppInstallSetupPost",
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/InstallDto"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/InstallDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/InstallDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/InstallDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/services/app/Install/GetAppSettingsJson": {
      "get": {
        "tags": [
          "Install"
        ],
        "operationId": "ApiServicesAppInstallGetappsettingsjsonGet",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AppSettingsJsonDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AppSettingsJsonDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AppSettingsJsonDto"
                }
              }
            }
          }
        }
      }
    },
    "/api/services/app/Install/CheckDatabase": {
      "post": {
        "tags": [
          "Install"
        ],
        "operationId": "ApiServicesAppInstallCheckdatabasePost",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/CheckDatabaseOutput"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CheckDatabaseOutput"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/CheckDatabaseOutput"
                }
              }
            }
          }
        }
      }
    },
    "/api/services/app/Invoice/GetInvoiceInfo": {
      "get": {
        "tags": [
          "Invoice"
        ],
        "operationId": "ApiServicesAppInvoiceGetinvoiceinfoGet",
        "parameters": [
          {
            "name": "Id",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/InvoiceDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InvoiceDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/InvoiceDto"
                }
              }
            }
          }
        }
      }
    },
    "/api/services/app/Invoice/CreateInvoice": {
      "post": {
        "tags": [
          "Invoice"
        ],
        "operationId": "ApiServicesAppInvoiceCreateinvoicePost",
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/CreateInvoiceDto"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateInvoiceDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateInvoiceDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/CreateInvoiceDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/services/app/Language/GetLanguages": {
      "get": {
        "tags": [
          "Language"
        ],
        "operationId": "ApiServicesAppLanguageGetlanguagesGet",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/GetLanguagesOutput"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetLanguagesOutput"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetLanguagesOutput"
                }
              }
            }
          }
        }
      }
    },
    "/api/services/app/Language/GetLanguageForEdit": {
      "get": {
        "tags": [
          "Language"
        ],
        "operationId": "ApiServicesAppLanguageGetlanguageforeditGet",
        "parameters": [
          {
            "name": "Id",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32",
              "nullable": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/GetLanguageForEditOutput"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetLanguageForEditOutput"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetLanguageForEditOutput"
                }
              }
            }
          }
        }
      }
    },
    "/api/services/app/Language/CreateOrUpdateLanguage": {
      "post": {
        "tags": [
          "Language"
        ],
        "operationId": "ApiServicesAppLanguageCreateorupdatelanguagePost",
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/CreateOrUpdateLanguageInput"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateOrUpdateLanguageInput"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateOrUpdateLanguageInput"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/CreateOrUpdateLanguageInput"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/services/app/Language/DeleteLanguage": {
      "delete": {
        "tags": [
          "Language"
        ],
        "operationId": "ApiServicesAppLanguageDeletelanguageDelete",
        "parameters": [
          {
            "name": "Id",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/services/app/Language/SetDefaultLanguage": {
      "post": {
        "tags": [
          "Language"
        ],
        "operationId": "ApiServicesAppLanguageSetdefaultlanguagePost",
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/SetDefaultLanguageInput"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SetDefaultLanguageInput"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/SetDefaultLanguageInput"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/SetDefaultLanguageInput"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/services/app/Language/GetLanguageTexts": {
      "get": {
        "tags": [
          "Language"
        ],
        "operationId": "ApiServicesAppLanguageGetlanguagetextsGet",
        "parameters": [
          {
            "name": "MaxResultCount",
            "in": "query",
            "schema": {
              "maximum": 2147483647,
              "minimum": 0,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "SkipCount",
            "in": "query",
            "schema": {
              "maximum": 2147483647,
              "minimum": 0,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "Sorting",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "SourceName",
            "in": "query",
            "required": true,
            "schema": {
              "maxLength": 128,
              "type": "string"
            }
          },
          {
            "name": "BaseLanguageName",
            "in": "query",
            "schema": {
              "maxLength": 128,
              "minLength": 0,
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "TargetLanguageName",
            "in": "query",
            "required": true,
            "schema": {
              "maxLength": 128,
              "minLength": 2,
              "type": "string"
            }
          },
          {
            "name": "TargetValueFilter",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "FilterText",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/PagedResultDtoOfLanguageTextListDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PagedResultDtoOfLanguageTextListDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/PagedResultDtoOfLanguageTextListDto"
                }
              }
            }
          }
        }
      }
    },
    "/api/services/app/Language/UpdateLanguageText": {
      "put": {
        "tags": [
          "Language"
        ],
        "operationId": "ApiServicesAppLanguageUpdatelanguagetextPut",
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateLanguageTextInput"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateLanguageTextInput"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateLanguageTextInput"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateLanguageTextInput"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/services/app/Notification/GetUserNotifications": {
      "get": {
        "tags": [
          "Notification"
        ],
        "operationId": "ApiServicesAppNotificationGetusernotificationsGet",
        "parameters": [
          {
            "name": "State",
            "in": "query",
            "schema": {
              "$ref": "#/components/schemas/UserNotificationState"
            }
          },
          {
            "name": "StartDate",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date-time",
              "nullable": true
            }
          },
          {
            "name": "EndDate",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date-time",
              "nullable": true
            }
          },
          {
            "name": "MaxResultCount",
            "in": "query",
            "schema": {
              "maximum": 1000,
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "SkipCount",
            "in": "query",
            "schema": {
              "maximum": 2147483647,
              "minimum": 0,
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/GetNotificationsOutput"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetNotificationsOutput"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetNotificationsOutput"
                }
              }
            }
          }
        }
      }
    },
    "/api/services/app/Notification/SetAllNotificationsAsRead": {
      "post": {
        "tags": [
          "Notification"
        ],
        "operationId": "ApiServicesAppNotificationSetallnotificationsasreadPost",
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/services/app/Notification/SetNotificationAsRead": {
      "post": {
        "tags": [
          "Notification"
        ],
        "operationId": "ApiServicesAppNotificationSetnotificationasreadPost",
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/EntityDtoOfGuid"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EntityDtoOfGuid"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/EntityDtoOfGuid"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/EntityDtoOfGuid"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/services/app/Notification/GetNotificationSettings": {
      "get": {
        "tags": [
          "Notification"
        ],
        "operationId": "ApiServicesAppNotificationGetnotificationsettingsGet",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/GetNotificationSettingsOutput"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetNotificationSettingsOutput"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetNotificationSettingsOutput"
                }
              }
            }
          }
        }
      }
    },
    "/api/services/app/Notification/UpdateNotificationSettings": {
      "put": {
        "tags": [
          "Notification"
        ],
        "operationId": "ApiServicesAppNotificationUpdatenotificationsettingsPut",
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateNotificationSettingsInput"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateNotificationSettingsInput"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateNotificationSettingsInput"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateNotificationSettingsInput"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/services/app/Notification/DeleteNotification": {
      "delete": {
        "tags": [
          "Notification"
        ],
        "operationId": "ApiServicesAppNotificationDeletenotificationDelete",
        "parameters": [
          {
            "name": "Id",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/services/app/Notification/DeleteAllUserNotifications": {
      "delete": {
        "tags": [
          "Notification"
        ],
        "operationId": "ApiServicesAppNotificationDeleteallusernotificationsDelete",
        "parameters": [
          {
            "name": "State",
            "in": "query",
            "schema": {
              "$ref": "#/components/schemas/UserNotificationState"
            }
          },
          {
            "name": "StartDate",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date-time",
              "nullable": true
            }
          },
          {
            "name": "EndDate",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date-time",
              "nullable": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/services/app/OrganizationUnit/GetOrganizationUnits": {
      "get": {
        "tags": [
          "OrganizationUnit"
        ],
        "operationId": "ApiServicesAppOrganizationunitGetorganizationunitsGet",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ListResultDtoOfOrganizationUnitDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ListResultDtoOfOrganizationUnitDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ListResultDtoOfOrganizationUnitDto"
                }
              }
            }
          }
        }
      }
    },
    "/api/services/app/OrganizationUnit/GetOrganizationUnitsForUser": {
      "get": {
        "tags": [
          "OrganizationUnit"
        ],
        "operationId": "ApiServicesAppOrganizationunitGetorganizationunitsforuserGet",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ListResultDtoOfOrganizationUnitDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ListResultDtoOfOrganizationUnitDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ListResultDtoOfOrganizationUnitDto"
                }
              }
            }
          }
        }
      }
    },
    "/api/services/app/OrganizationUnit/GetOrganizationUnitUsers": {
      "get": {
        "tags": [
          "OrganizationUnit"
        ],
        "operationId": "ApiServicesAppOrganizationunitGetorganizationunitusersGet",
        "parameters": [
          {
            "name": "Id",
            "in": "query",
            "schema": {
              "minimum": 1,
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "Sorting",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "MaxResultCount",
            "in": "query",
            "schema": {
              "maximum": 1000,
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "SkipCount",
            "in": "query",
            "schema": {
              "maximum": 2147483647,
              "minimum": 0,
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/PagedResultDtoOfOrganizationUnitUserListDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PagedResultDtoOfOrganizationUnitUserListDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/PagedResultDtoOfOrganizationUnitUserListDto"
                }
              }
            }
          }
        }
      }
    },
    "/api/services/app/OrganizationUnit/GetOrganizationUnitRoles": {
      "get": {
        "tags": [
          "OrganizationUnit"
        ],
        "operationId": "ApiServicesAppOrganizationunitGetorganizationunitrolesGet",
        "parameters": [
          {
            "name": "Id",
            "in": "query",
            "schema": {
              "minimum": 1,
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "Sorting",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "MaxResultCount",
            "in": "query",
            "schema": {
              "maximum": 1000,
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "SkipCount",
            "in": "query",
            "schema": {
              "maximum": 2147483647,
              "minimum": 0,
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/PagedResultDtoOfOrganizationUnitRoleListDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PagedResultDtoOfOrganizationUnitRoleListDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/PagedResultDtoOfOrganizationUnitRoleListDto"
                }
              }
            }
          }
        }
      }
    },
    "/api/services/app/OrganizationUnit/CreateOrganizationUnit": {
      "post": {
        "tags": [
          "OrganizationUnit"
        ],
        "operationId": "ApiServicesAppOrganizationunitCreateorganizationunitPost",
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/CreateOrganizationUnitInput"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateOrganizationUnitInput"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateOrganizationUnitInput"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/CreateOrganizationUnitInput"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/OrganizationUnitDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OrganizationUnitDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/OrganizationUnitDto"
                }
              }
            }
          }
        }
      }
    },
    "/api/services/app/OrganizationUnit/UpdateOrganizationUnit": {
      "put": {
        "tags": [
          "OrganizationUnit"
        ],
        "operationId": "ApiServicesAppOrganizationunitUpdateorganizationunitPut",
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateOrganizationUnitInput"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateOrganizationUnitInput"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateOrganizationUnitInput"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateOrganizationUnitInput"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/OrganizationUnitDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OrganizationUnitDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/OrganizationUnitDto"
                }
              }
            }
          }
        }
      }
    },
    "/api/services/app/OrganizationUnit/MoveOrganizationUnit": {
      "post": {
        "tags": [
          "OrganizationUnit"
        ],
        "operationId": "ApiServicesAppOrganizationunitMoveorganizationunitPost",
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/MoveOrganizationUnitInput"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/MoveOrganizationUnitInput"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/MoveOrganizationUnitInput"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/MoveOrganizationUnitInput"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/OrganizationUnitDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OrganizationUnitDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/OrganizationUnitDto"
                }
              }
            }
          }
        }
      }
    },
    "/api/services/app/OrganizationUnit/DeleteOrganizationUnit": {
      "delete": {
        "tags": [
          "OrganizationUnit"
        ],
        "operationId": "ApiServicesAppOrganizationunitDeleteorganizationunitDelete",
        "parameters": [
          {
            "name": "Id",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/services/app/OrganizationUnit/RemoveUserFromOrganizationUnit": {
      "delete": {
        "tags": [
          "OrganizationUnit"
        ],
        "operationId": "ApiServicesAppOrganizationunitRemoveuserfromorganizationunitDelete",
        "parameters": [
          {
            "name": "UserId",
            "in": "query",
            "schema": {
              "minimum": 1,
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "OrganizationUnitId",
            "in": "query",
            "schema": {
              "minimum": 1,
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/services/app/OrganizationUnit/RemoveRoleFromOrganizationUnit": {
      "delete": {
        "tags": [
          "OrganizationUnit"
        ],
        "operationId": "ApiServicesAppOrganizationunitRemoverolefromorganizationunitDelete",
        "parameters": [
          {
            "name": "RoleId",
            "in": "query",
            "schema": {
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "OrganizationUnitId",
            "in": "query",
            "schema": {
              "minimum": 1,
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/services/app/OrganizationUnit/AddUsersToOrganizationUnit": {
      "post": {
        "tags": [
          "OrganizationUnit"
        ],
        "operationId": "ApiServicesAppOrganizationunitAdduserstoorganizationunitPost",
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/UsersToOrganizationUnitInput"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UsersToOrganizationUnitInput"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/UsersToOrganizationUnitInput"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/UsersToOrganizationUnitInput"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/services/app/OrganizationUnit/AddRolesToOrganizationUnit": {
      "post": {
        "tags": [
          "OrganizationUnit"
        ],
        "operationId": "ApiServicesAppOrganizationunitAddrolestoorganizationunitPost",
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/RolesToOrganizationUnitInput"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RolesToOrganizationUnitInput"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/RolesToOrganizationUnitInput"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/RolesToOrganizationUnitInput"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/services/app/OrganizationUnit/FindUsers": {
      "post": {
        "tags": [
          "OrganizationUnit"
        ],
        "operationId": "ApiServicesAppOrganizationunitFindusersPost",
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/FindOrganizationUnitUsersInput"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/FindOrganizationUnitUsersInput"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/FindOrganizationUnitUsersInput"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/FindOrganizationUnitUsersInput"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/PagedResultDtoOfNameValueDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PagedResultDtoOfNameValueDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/PagedResultDtoOfNameValueDto"
                }
              }
            }
          }
        }
      }
    },
    "/api/services/app/OrganizationUnit/FindRoles": {
      "post": {
        "tags": [
          "OrganizationUnit"
        ],
        "operationId": "ApiServicesAppOrganizationunitFindrolesPost",
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/FindOrganizationUnitRolesInput"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/FindOrganizationUnitRolesInput"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/FindOrganizationUnitRolesInput"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/FindOrganizationUnitRolesInput"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/PagedResultDtoOfNameValueDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PagedResultDtoOfNameValueDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/PagedResultDtoOfNameValueDto"
                }
              }
            }
          }
        }
      }
    },
    "/api/services/app/Payment/CreatePayment": {
      "post": {
        "tags": [
          "Payment"
        ],
        "operationId": "ApiServicesAppPaymentCreatepaymentPost",
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/CreatePaymentDto"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreatePaymentDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/CreatePaymentDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/CreatePaymentDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "integer",
                  "format": "int64"
                }
              },
              "application/json": {
                "schema": {
                  "type": "integer",
                  "format": "int64"
                }
              },
              "text/json": {
                "schema": {
                  "type": "integer",
                  "format": "int64"
                }
              }
            }
          }
        }
      }
    },
    "/api/services/app/Payment/CancelPayment": {
      "post": {
        "tags": [
          "Payment"
        ],
        "operationId": "ApiServicesAppPaymentCancelpaymentPost",
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/CancelPaymentDto"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CancelPaymentDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/CancelPaymentDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/CancelPaymentDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/services/app/Payment/GetPaymentHistory": {
      "get": {
        "tags": [
          "Payment"
        ],
        "operationId": "ApiServicesAppPaymentGetpaymenthistoryGet",
        "parameters": [
          {
            "name": "Sorting",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "MaxResultCount",
            "in": "query",
            "schema": {
              "maximum": 1000,
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "SkipCount",
            "in": "query",
            "schema": {
              "maximum": 2147483647,
              "minimum": 0,
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/PagedResultDtoOfSubscriptionPaymentListDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PagedResultDtoOfSubscriptionPaymentListDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/PagedResultDtoOfSubscriptionPaymentListDto"
                }
              }
            }
          }
        }
      }
    },
    "/api/services/app/Payment/GetActiveGateways": {
      "get": {
        "tags": [
          "Payment"
        ],
        "operationId": "ApiServicesAppPaymentGetactivegatewaysGet",
        "parameters": [
          {
            "name": "RecurringPaymentsEnabled",
            "in": "query",
            "schema": {
              "type": "boolean",
              "nullable": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/PaymentGatewayModel"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/PaymentGatewayModel"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/PaymentGatewayModel"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/services/app/Payment/GetPayment": {
      "get": {
        "tags": [
          "Payment"
        ],
        "operationId": "ApiServicesAppPaymentGetpaymentGet",
        "parameters": [
          {
            "name": "paymentId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/SubscriptionPaymentDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SubscriptionPaymentDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/SubscriptionPaymentDto"
                }
              }
            }
          }
        }
      }
    },
    "/api/services/app/Payment/GetLastCompletedPayment": {
      "get": {
        "tags": [
          "Payment"
        ],
        "operationId": "ApiServicesAppPaymentGetlastcompletedpaymentGet",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/SubscriptionPaymentDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SubscriptionPaymentDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/SubscriptionPaymentDto"
                }
              }
            }
          }
        }
      }
    },
    "/api/services/app/Payment/BuyNowSucceed": {
      "post": {
        "tags": [
          "Payment"
        ],
        "operationId": "ApiServicesAppPaymentBuynowsucceedPost",
        "parameters": [
          {
            "name": "paymentId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/services/app/Payment/NewRegistrationSucceed": {
      "post": {
        "tags": [
          "Payment"
        ],
        "operationId": "ApiServicesAppPaymentNewregistrationsucceedPost",
        "parameters": [
          {
            "name": "paymentId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/services/app/Payment/UpgradeSucceed": {
      "post": {
        "tags": [
          "Payment"
        ],
        "operationId": "ApiServicesAppPaymentUpgradesucceedPost",
        "parameters": [
          {
            "name": "paymentId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/services/app/Payment/ExtendSucceed": {
      "post": {
        "tags": [
          "Payment"
        ],
        "operationId": "ApiServicesAppPaymentExtendsucceedPost",
        "parameters": [
          {
            "name": "paymentId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/services/app/Payment/PaymentFailed": {
      "post": {
        "tags": [
          "Payment"
        ],
        "operationId": "ApiServicesAppPaymentPaymentfailedPost",
        "parameters": [
          {
            "name": "paymentId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/services/app/Payment/HasAnyPayment": {
      "post": {
        "tags": [
          "Payment"
        ],
        "operationId": "ApiServicesAppPaymentHasanypaymentPost",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "boolean"
                }
              },
              "application/json": {
                "schema": {
                  "type": "boolean"
                }
              },
              "text/json": {
                "schema": {
                  "type": "boolean"
                }
              }
            }
          }
        }
      }
    },
    "/api/services/app/Payment/SendUpgradeRequest": {
      "post": {
        "tags": [
          "Payment"
        ],
        "operationId": "ApiServicesAppPaymentSendupgraderequestPost",
        "parameters": [
          {
            "name": "paymentId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/services/app/PayPalPayment/ConfirmPayment": {
      "post": {
        "tags": [
          "PayPalPayment"
        ],
        "operationId": "ApiServicesAppPaypalpaymentConfirmpaymentPost",
        "parameters": [
          {
            "name": "paymentId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "paypalOrderId",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/services/app/PayPalPayment/GetConfiguration": {
      "get": {
        "tags": [
          "PayPalPayment"
        ],
        "operationId": "ApiServicesAppPaypalpaymentGetconfigurationGet",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/PayPalConfigurationDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PayPalConfigurationDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/PayPalConfigurationDto"
                }
              }
            }
          }
        }
      }
    },
    "/api/services/app/Permission/GetAllPermissions": {
      "get": {
        "tags": [
          "Permission"
        ],
        "operationId": "ApiServicesAppPermissionGetallpermissionsGet",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ListResultDtoOfFlatPermissionWithLevelDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ListResultDtoOfFlatPermissionWithLevelDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ListResultDtoOfFlatPermissionWithLevelDto"
                }
              }
            }
          }
        }
      }
    },
    "/api/services/app/Profile/GetCurrentUserProfileForEdit": {
      "get": {
        "tags": [
          "Profile"
        ],
        "operationId": "ApiServicesAppProfileGetcurrentuserprofileforeditGet",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/CurrentUserProfileEditDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CurrentUserProfileEditDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/CurrentUserProfileEditDto"
                }
              }
            }
          }
        }
      }
    },
    "/api/services/app/Profile/DisableGoogleAuthenticator": {
      "post": {
        "tags": [
          "Profile"
        ],
        "operationId": "ApiServicesAppProfileDisablegoogleauthenticatorPost",
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/services/app/Profile/UpdateGoogleAuthenticatorKey": {
      "put": {
        "tags": [
          "Profile"
        ],
        "operationId": "ApiServicesAppProfileUpdategoogleauthenticatorkeyPut",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateGoogleAuthenticatorKeyOutput"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateGoogleAuthenticatorKeyOutput"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateGoogleAuthenticatorKeyOutput"
                }
              }
            }
          }
        }
      }
    },
    "/api/services/app/Profile/SendVerificationSms": {
      "post": {
        "tags": [
          "Profile"
        ],
        "operationId": "ApiServicesAppProfileSendverificationsmsPost",
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/SendVerificationSmsInputDto"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SendVerificationSmsInputDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/SendVerificationSmsInputDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/SendVerificationSmsInputDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/services/app/Profile/VerifySmsCode": {
      "post": {
        "tags": [
          "Profile"
        ],
        "operationId": "ApiServicesAppProfileVerifysmscodePost",
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/VerifySmsCodeInputDto"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/VerifySmsCodeInputDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/VerifySmsCodeInputDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/VerifySmsCodeInputDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/services/app/Profile/PrepareCollectedData": {
      "post": {
        "tags": [
          "Profile"
        ],
        "operationId": "ApiServicesAppProfilePreparecollecteddataPost",
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/services/app/Profile/UpdateCurrentUserProfile": {
      "put": {
        "tags": [
          "Profile"
        ],
        "operationId": "ApiServicesAppProfileUpdatecurrentuserprofilePut",
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/CurrentUserProfileEditDto"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CurrentUserProfileEditDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/CurrentUserProfileEditDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/CurrentUserProfileEditDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/services/app/Profile/ChangePassword": {
      "post": {
        "tags": [
          "Profile"
        ],
        "operationId": "ApiServicesAppProfileChangepasswordPost",
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/ChangePasswordInput"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ChangePasswordInput"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ChangePasswordInput"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ChangePasswordInput"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/services/app/Profile/UpdateProfilePicture": {
      "put": {
        "tags": [
          "Profile"
        ],
        "operationId": "ApiServicesAppProfileUpdateprofilepicturePut",
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateProfilePictureInput"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateProfilePictureInput"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateProfilePictureInput"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateProfilePictureInput"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/services/app/Profile/GetPasswordComplexitySetting": {
      "get": {
        "tags": [
          "Profile"
        ],
        "operationId": "ApiServicesAppProfileGetpasswordcomplexitysettingGet",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/GetPasswordComplexitySettingOutput"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetPasswordComplexitySettingOutput"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetPasswordComplexitySettingOutput"
                }
              }
            }
          }
        }
      }
    },
    "/api/services/app/Profile/GetProfilePicture": {
      "get": {
        "tags": [
          "Profile"
        ],
        "operationId": "ApiServicesAppProfileGetprofilepictureGet",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/GetProfilePictureOutput"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetProfilePictureOutput"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetProfilePictureOutput"
                }
              }
            }
          }
        }
      }
    },
    "/api/services/app/Profile/GetProfilePictureByUserName": {
      "get": {
        "tags": [
          "Profile"
        ],
        "operationId": "ApiServicesAppProfileGetprofilepicturebyusernameGet",
        "parameters": [
          {
            "name": "username",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/GetProfilePictureOutput"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetProfilePictureOutput"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetProfilePictureOutput"
                }
              }
            }
          }
        }
      }
    },
    "/api/services/app/Profile/GetFriendProfilePicture": {
      "get": {
        "tags": [
          "Profile"
        ],
        "operationId": "ApiServicesAppProfileGetfriendprofilepictureGet",
        "parameters": [
          {
            "name": "UserId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "TenantId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32",
              "nullable": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/GetProfilePictureOutput"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetProfilePictureOutput"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetProfilePictureOutput"
                }
              }
            }
          }
        }
      }
    },
    "/api/services/app/Profile/GetProfilePictureByUser": {
      "get": {
        "tags": [
          "Profile"
        ],
        "operationId": "ApiServicesAppProfileGetprofilepicturebyuserGet",
        "parameters": [
          {
            "name": "userId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/GetProfilePictureOutput"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetProfilePictureOutput"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetProfilePictureOutput"
                }
              }
            }
          }
        }
      }
    },
    "/api/services/app/Profile/ChangeLanguage": {
      "post": {
        "tags": [
          "Profile"
        ],
        "operationId": "ApiServicesAppProfileChangelanguagePost",
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/ChangeUserLanguageDto"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ChangeUserLanguageDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ChangeUserLanguageDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ChangeUserLanguageDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/services/app/Profile/GetProfilePictureById": {
      "get": {
        "tags": [
          "Profile"
        ],
        "operationId": "ApiServicesAppProfileGetprofilepicturebyidGet",
        "parameters": [
          {
            "name": "profilePictureId",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/GetProfilePictureOutput"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetProfilePictureOutput"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetProfilePictureOutput"
                }
              }
            }
          }
        }
      }
    },
    "/api/services/app/Profile/TransferAndUpdateProfilePicture": {
      "post": {
        "tags": [
          "Profile"
        ],
        "operationId": "ApiServicesAppProfileTransferandupdateprofilepicturePost",
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateProfilePictureByUserInput"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateProfilePictureByUserInput"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateProfilePictureByUserInput"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateProfilePictureByUserInput"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/services/app/PurchasingResources/GetAll": {
      "get": {
        "tags": [
          "PurchasingResources"
        ],
        "operationId": "ApiServicesAppPurchasingresourcesGetallGet",
        "parameters": [
          {
            "name": "Filter",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "TitleFilter",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "Sorting",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "SkipCount",
            "in": "query",
            "schema": {
              "maximum": 2147483647,
              "minimum": 0,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "MaxResultCount",
            "in": "query",
            "schema": {
              "maximum": 2147483647,
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/PagedResultDtoOfGetPurchasingResourceForViewDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PagedResultDtoOfGetPurchasingResourceForViewDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/PagedResultDtoOfGetPurchasingResourceForViewDto"
                }
              }
            }
          }
        }
      }
    },
    "/api/services/app/PurchasingResources/GetPurchasingResourceForView": {
      "get": {
        "tags": [
          "PurchasingResources"
        ],
        "operationId": "ApiServicesAppPurchasingresourcesGetpurchasingresourceforviewGet",
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/GetPurchasingResourceForViewDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetPurchasingResourceForViewDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetPurchasingResourceForViewDto"
                }
              }
            }
          }
        }
      }
    },
    "/api/services/app/PurchasingResources/GetPurchasingResourceForEdit": {
      "get": {
        "tags": [
          "PurchasingResources"
        ],
        "operationId": "ApiServicesAppPurchasingresourcesGetpurchasingresourceforeditGet",
        "parameters": [
          {
            "name": "Id",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/GetPurchasingResourceForEditOutput"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetPurchasingResourceForEditOutput"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetPurchasingResourceForEditOutput"
                }
              }
            }
          }
        }
      }
    },
    "/api/services/app/PurchasingResources/CreateOrEdit": {
      "post": {
        "tags": [
          "PurchasingResources"
        ],
        "operationId": "ApiServicesAppPurchasingresourcesCreateoreditPost",
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/CreateOrEditPurchasingResourceDto"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateOrEditPurchasingResourceDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateOrEditPurchasingResourceDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/CreateOrEditPurchasingResourceDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/services/app/PurchasingResources/Delete": {
      "delete": {
        "tags": [
          "PurchasingResources"
        ],
        "operationId": "ApiServicesAppPurchasingresourcesDeleteDelete",
        "parameters": [
          {
            "name": "Id",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/services/app/PurchasingResources/GetPurchasingResourcesToExcel": {
      "get": {
        "tags": [
          "PurchasingResources"
        ],
        "operationId": "ApiServicesAppPurchasingresourcesGetpurchasingresourcestoexcelGet",
        "parameters": [
          {
            "name": "Filter",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "TitleFilter",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/FileDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FileDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/FileDto"
                }
              }
            }
          }
        }
      }
    },
    "/api/services/app/ReportsDevices/GetAll": {
      "get": {
        "tags": [
          "ReportsDevices"
        ],
        "operationId": "ApiServicesAppReportsdevicesGetallGet",
        "parameters": [
          {
            "name": "Filter",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "SerialNumberFilter",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "QRCodeFilter",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "BssIdFilter",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "SsIdFilter",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "UuIdFilter",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "MajorFilter",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "MinorFilter",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "NameFilter",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "DeviceTypeTitleFilter",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "DeviceStatusIdFilter",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32",
              "nullable": true
            }
          },
          {
            "name": "Sorting",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "SkipCount",
            "in": "query",
            "schema": {
              "maximum": 2147483647,
              "minimum": 0,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "MaxResultCount",
            "in": "query",
            "schema": {
              "maximum": 2147483647,
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/PagedResultDtoOfGetDeviceForViewDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PagedResultDtoOfGetDeviceForViewDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/PagedResultDtoOfGetDeviceForViewDto"
                }
              }
            }
          }
        }
      }
    },
    "/api/services/app/ReportsDevices/GetDevicesToExcel": {
      "get": {
        "tags": [
          "ReportsDevices"
        ],
        "operationId": "ApiServicesAppReportsdevicesGetdevicestoexcelGet",
        "parameters": [
          {
            "name": "Filter",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "SerialNumberFilter",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "QRCodeFilter",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "BssIdFilter",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "SsIdFilter",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "UuIdFilter",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "MajorFilter",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "MinorFilter",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "NameFilter",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "DeviceTypeTitleFilter",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "DeviceStatusIdFilter",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32",
              "nullable": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/FileDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FileDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/FileDto"
                }
              }
            }
          }
        }
      }
    },
    "/api/services/app/ReportsManagers/GetAll": {
      "get": {
        "tags": [
          "ReportsManagers"
        ],
        "operationId": "ApiServicesAppReportsmanagersGetallGet",
        "parameters": [
          {
            "name": "Filter",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "SubscriptionEndDateStart",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date-time",
              "nullable": true
            }
          },
          {
            "name": "SubscriptionEndDateEnd",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date-time",
              "nullable": true
            }
          },
          {
            "name": "CreationDateStart",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date-time",
              "nullable": true
            }
          },
          {
            "name": "CreationDateEnd",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date-time",
              "nullable": true
            }
          },
          {
            "name": "SeniorManagerNameFilter",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "SeniorManagerSurnameFilter",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "SeniorManagerPhoneNumberFilter",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "AdminEmailAddressFilter",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "AddressFilter",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "TenancyNameFilter",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "NameFilter",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "IsActiveFilter",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32",
              "nullable": true
            }
          },
          {
            "name": "CountryNameFilter",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "StateNameFilter",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "CityNameFilter",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "Sorting",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "SkipCount",
            "in": "query",
            "schema": {
              "maximum": 2147483647,
              "minimum": 0,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "MaxResultCount",
            "in": "query",
            "schema": {
              "maximum": 2147483647,
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/PagedResultDtoOfGetReportsManagerForViewDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PagedResultDtoOfGetReportsManagerForViewDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/PagedResultDtoOfGetReportsManagerForViewDto"
                }
              }
            }
          }
        }
      }
    },
    "/api/services/app/ReportsManagers/GetReportsManagersToExcel": {
      "get": {
        "tags": [
          "ReportsManagers"
        ],
        "operationId": "ApiServicesAppReportsmanagersGetreportsmanagerstoexcelGet",
        "parameters": [
          {
            "name": "Filter",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "SubscriptionEndDateStart",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date-time",
              "nullable": true
            }
          },
          {
            "name": "SubscriptionEndDateEnd",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date-time",
              "nullable": true
            }
          },
          {
            "name": "CreationDateStart",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date-time",
              "nullable": true
            }
          },
          {
            "name": "CreationDateEnd",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date-time",
              "nullable": true
            }
          },
          {
            "name": "SeniorManagerNameFilter",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "SeniorManagerSurnameFilter",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "SeniorManagerPhoneNumberFilter",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "AdminEmailAddressFilter",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "AddressFilter",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "TenancyNameFilter",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "NameFilter",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "IsActiveFilter",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32",
              "nullable": true
            }
          },
          {
            "name": "CountryNameFilter",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "StateNameFilter",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "CityNameFilter",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/FileDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FileDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/FileDto"
                }
              }
            }
          }
        }
      }
    },
    "/api/services/app/ReportsTenants/GetAll": {
      "get": {
        "tags": [
          "ReportsTenants"
        ],
        "operationId": "ApiServicesAppReportstenantsGetallGet",
        "parameters": [
          {
            "name": "Filter",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "SubscriptionEndDateStart",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date-time",
              "nullable": true
            }
          },
          {
            "name": "SubscriptionEndDateEnd",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date-time",
              "nullable": true
            }
          },
          {
            "name": "CreationDateStart",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date-time",
              "nullable": true
            }
          },
          {
            "name": "CreationDateEnd",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date-time",
              "nullable": true
            }
          },
          {
            "name": "SeniorManagerNameFilter",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "SeniorManagerSurnameFilter",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "SeniorManagerPhoneNumberFilter",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "AdminEmailAddressFilter",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "AddressFilter",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "TenancyNameFilter",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "NameFilter",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "IsActiveFilter",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32",
              "nullable": true
            }
          },
          {
            "name": "CountryNameFilter",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "StateNameFilter",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "CityNameFilter",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "Sorting",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "SkipCount",
            "in": "query",
            "schema": {
              "maximum": 2147483647,
              "minimum": 0,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "MaxResultCount",
            "in": "query",
            "schema": {
              "maximum": 2147483647,
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/PagedResultDtoOfGetReportsTenantForViewDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PagedResultDtoOfGetReportsTenantForViewDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/PagedResultDtoOfGetReportsTenantForViewDto"
                }
              }
            }
          }
        }
      }
    },
    "/api/services/app/ReportsTenants/GetReportsTenantsToExcel": {
      "get": {
        "tags": [
          "ReportsTenants"
        ],
        "operationId": "ApiServicesAppReportstenantsGetreportstenantstoexcelGet",
        "parameters": [
          {
            "name": "Filter",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "SubscriptionEndDateStart",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date-time",
              "nullable": true
            }
          },
          {
            "name": "SubscriptionEndDateEnd",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date-time",
              "nullable": true
            }
          },
          {
            "name": "CreationDateStart",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date-time",
              "nullable": true
            }
          },
          {
            "name": "CreationDateEnd",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date-time",
              "nullable": true
            }
          },
          {
            "name": "SeniorManagerNameFilter",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "SeniorManagerSurnameFilter",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "SeniorManagerPhoneNumberFilter",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "AdminEmailAddressFilter",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "AddressFilter",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "TenancyNameFilter",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "NameFilter",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "IsActiveFilter",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32",
              "nullable": true
            }
          },
          {
            "name": "CountryNameFilter",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "StateNameFilter",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "CityNameFilter",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/FileDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FileDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/FileDto"
                }
              }
            }
          }
        }
      }
    },
    "/api/services/app/Requests/GetAll": {
      "get": {
        "tags": [
          "Requests"
        ],
        "operationId": "ApiServicesAppRequestsGetallGet",
        "parameters": [
          {
            "name": "Filter",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "RequestTypeFilter",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32",
              "nullable": true
            }
          },
          {
            "name": "FromFilter",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date-time",
              "nullable": true
            }
          },
          {
            "name": "ToFilter",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date-time",
              "nullable": true
            }
          },
          {
            "name": "CommentFilter",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "StatusFilter",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32",
              "nullable": true
            }
          },
          {
            "name": "UserNameFilter",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "Sorting",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "SkipCount",
            "in": "query",
            "schema": {
              "maximum": 2147483647,
              "minimum": 0,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "MaxResultCount",
            "in": "query",
            "schema": {
              "maximum": 2147483647,
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/PagedResultDtoOfGetRequestForViewDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PagedResultDtoOfGetRequestForViewDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/PagedResultDtoOfGetRequestForViewDto"
                }
              }
            }
          }
        }
      }
    },
    "/api/services/app/Requests/GetRequestForView": {
      "get": {
        "tags": [
          "Requests"
        ],
        "operationId": "ApiServicesAppRequestsGetrequestforviewGet",
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/GetRequestForViewDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetRequestForViewDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetRequestForViewDto"
                }
              }
            }
          }
        }
      }
    },
    "/api/services/app/Requests/GetRequestForEdit": {
      "get": {
        "tags": [
          "Requests"
        ],
        "operationId": "ApiServicesAppRequestsGetrequestforeditGet",
        "parameters": [
          {
            "name": "Id",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/GetRequestForEditOutput"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetRequestForEditOutput"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetRequestForEditOutput"
                }
              }
            }
          }
        }
      }
    },
    "/api/services/app/Requests/CreateOrEdit": {
      "post": {
        "tags": [
          "Requests"
        ],
        "operationId": "ApiServicesAppRequestsCreateoreditPost",
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/CreateOrEditRequestDto"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateOrEditRequestDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateOrEditRequestDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/CreateOrEditRequestDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/services/app/Requests/Delete": {
      "delete": {
        "tags": [
          "Requests"
        ],
        "operationId": "ApiServicesAppRequestsDeleteDelete",
        "parameters": [
          {
            "name": "Id",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/services/app/Requests/GetRequestsToExcel": {
      "get": {
        "tags": [
          "Requests"
        ],
        "operationId": "ApiServicesAppRequestsGetrequeststoexcelGet",
        "parameters": [
          {
            "name": "Filter",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "RequestTypeFilter",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32",
              "nullable": true
            }
          },
          {
            "name": "FromFilter",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date-time",
              "nullable": true
            }
          },
          {
            "name": "ToFilter",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date-time",
              "nullable": true
            }
          },
          {
            "name": "CommentFilter",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "StatusFilter",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32",
              "nullable": true
            }
          },
          {
            "name": "UserNameFilter",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/FileDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FileDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/FileDto"
                }
              }
            }
          }
        }
      }
    },
    "/api/services/app/Requests/GetAllUserForLookupTable": {
      "get": {
        "tags": [
          "Requests"
        ],
        "operationId": "ApiServicesAppRequestsGetalluserforlookuptableGet",
        "parameters": [
          {
            "name": "Filter",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "Sorting",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "SkipCount",
            "in": "query",
            "schema": {
              "maximum": 2147483647,
              "minimum": 0,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "MaxResultCount",
            "in": "query",
            "schema": {
              "maximum": 2147483647,
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/PagedResultDtoOfRequestUserLookupTableDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PagedResultDtoOfRequestUserLookupTableDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/PagedResultDtoOfRequestUserLookupTableDto"
                }
              }
            }
          }
        }
      }
    },
    "/api/services/app/Requests/GetUserRequestsByDate": {
      "get": {
        "tags": [
          "Requests"
        ],
        "operationId": "ApiServicesAppRequestsGetuserrequestsbydateGet",
        "parameters": [
          {
            "name": "userId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "dateFrom",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "dateTo",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/GetRequestForViewDto"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/GetRequestForViewDto"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/GetRequestForViewDto"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/services/app/Requests/ApproveRequests": {
      "post": {
        "tags": [
          "Requests"
        ],
        "operationId": "ApiServicesAppRequestsApproverequestsPost",
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/GetRequestForViewDto"
                },
                "nullable": true
              }
            },
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/GetRequestForViewDto"
                },
                "nullable": true
              }
            },
            "text/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/GetRequestForViewDto"
                },
                "nullable": true
              }
            },
            "application/*+json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/GetRequestForViewDto"
                },
                "nullable": true
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/services/app/Requests/RejectRequests": {
      "post": {
        "tags": [
          "Requests"
        ],
        "operationId": "ApiServicesAppRequestsRejectrequestsPost",
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/GetRequestForViewDto"
                },
                "nullable": true
              }
            },
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/GetRequestForViewDto"
                },
                "nullable": true
              }
            },
            "text/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/GetRequestForViewDto"
                },
                "nullable": true
              }
            },
            "application/*+json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/GetRequestForViewDto"
                },
                "nullable": true
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/services/app/Role/GetRoles": {
      "get": {
        "tags": [
          "Role"
        ],
        "operationId": "ApiServicesAppRoleGetrolesGet",
        "parameters": [
          {
            "name": "Permissions",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "nullable": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ListResultDtoOfRoleListDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ListResultDtoOfRoleListDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ListResultDtoOfRoleListDto"
                }
              }
            }
          }
        }
      }
    },
    "/api/services/app/Role/GetRoleForEdit": {
      "get": {
        "tags": [
          "Role"
        ],
        "operationId": "ApiServicesAppRoleGetroleforeditGet",
        "parameters": [
          {
            "name": "Id",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32",
              "nullable": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/GetRoleForEditOutput"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetRoleForEditOutput"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetRoleForEditOutput"
                }
              }
            }
          }
        }
      }
    },
    "/api/services/app/Role/CreateOrUpdateRole": {
      "post": {
        "tags": [
          "Role"
        ],
        "operationId": "ApiServicesAppRoleCreateorupdaterolePost",
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/CreateOrUpdateRoleInput"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateOrUpdateRoleInput"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateOrUpdateRoleInput"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/CreateOrUpdateRoleInput"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/services/app/Role/DeleteRole": {
      "delete": {
        "tags": [
          "Role"
        ],
        "operationId": "ApiServicesAppRoleDeleteroleDelete",
        "parameters": [
          {
            "name": "Id",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/services/app/Session/GetCurrentLoginInformations": {
      "get": {
        "tags": [
          "Session"
        ],
        "operationId": "ApiServicesAppSessionGetcurrentlogininformationsGet",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/GetCurrentLoginInformationsOutput"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetCurrentLoginInformationsOutput"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetCurrentLoginInformationsOutput"
                }
              }
            }
          }
        }
      }
    },
    "/api/services/app/Session/UpdateUserSignInToken": {
      "put": {
        "tags": [
          "Session"
        ],
        "operationId": "ApiServicesAppSessionUpdateusersignintokenPut",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateUserSignInTokenOutput"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateUserSignInTokenOutput"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateUserSignInTokenOutput"
                }
              }
            }
          }
        }
      }
    },
    "/api/services/app/States/GetAll": {
      "get": {
        "tags": [
          "States"
        ],
        "operationId": "ApiServicesAppStatesGetallGet",
        "parameters": [
          {
            "name": "Filter",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "NameFilter",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "CountryCodeFilter",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "StateCodeFilter",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "CountryNameFilter",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "Sorting",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "SkipCount",
            "in": "query",
            "schema": {
              "maximum": 2147483647,
              "minimum": 0,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "MaxResultCount",
            "in": "query",
            "schema": {
              "maximum": 2147483647,
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/PagedResultDtoOfGetStateForViewDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PagedResultDtoOfGetStateForViewDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/PagedResultDtoOfGetStateForViewDto"
                }
              }
            }
          }
        }
      }
    },
    "/api/services/app/States/WholeByCountry": {
      "post": {
        "tags": [
          "States"
        ],
        "operationId": "ApiServicesAppStatesWholebycountryPost",
        "parameters": [
          {
            "name": "countryId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ListResultDtoOfGetStateForViewDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ListResultDtoOfGetStateForViewDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ListResultDtoOfGetStateForViewDto"
                }
              }
            }
          }
        }
      }
    },
    "/api/services/app/States/GetStateForView": {
      "get": {
        "tags": [
          "States"
        ],
        "operationId": "ApiServicesAppStatesGetstateforviewGet",
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/GetStateForViewDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetStateForViewDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetStateForViewDto"
                }
              }
            }
          }
        }
      }
    },
    "/api/services/app/States/GetStateForEdit": {
      "get": {
        "tags": [
          "States"
        ],
        "operationId": "ApiServicesAppStatesGetstateforeditGet",
        "parameters": [
          {
            "name": "Id",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/GetStateForEditOutput"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetStateForEditOutput"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetStateForEditOutput"
                }
              }
            }
          }
        }
      }
    },
    "/api/services/app/States/CreateOrEdit": {
      "post": {
        "tags": [
          "States"
        ],
        "operationId": "ApiServicesAppStatesCreateoreditPost",
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/CreateOrEditStateDto"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateOrEditStateDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateOrEditStateDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/CreateOrEditStateDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/services/app/States/Delete": {
      "delete": {
        "tags": [
          "States"
        ],
        "operationId": "ApiServicesAppStatesDeleteDelete",
        "parameters": [
          {
            "name": "Id",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/services/app/States/GetStatesToExcel": {
      "get": {
        "tags": [
          "States"
        ],
        "operationId": "ApiServicesAppStatesGetstatestoexcelGet",
        "parameters": [
          {
            "name": "Filter",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "NameFilter",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "CountryCodeFilter",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "StateCodeFilter",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "CountryNameFilter",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/FileDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FileDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/FileDto"
                }
              }
            }
          }
        }
      }
    },
    "/api/services/app/States/GetAllCountryForLookupTable": {
      "get": {
        "tags": [
          "States"
        ],
        "operationId": "ApiServicesAppStatesGetallcountryforlookuptableGet",
        "parameters": [
          {
            "name": "Filter",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "Sorting",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "SkipCount",
            "in": "query",
            "schema": {
              "maximum": 2147483647,
              "minimum": 0,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "MaxResultCount",
            "in": "query",
            "schema": {
              "maximum": 2147483647,
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/PagedResultDtoOfStateCountryLookupTableDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PagedResultDtoOfStateCountryLookupTableDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/PagedResultDtoOfStateCountryLookupTableDto"
                }
              }
            }
          }
        }
      }
    },
    "/api/services/app/StripePayment/GetConfiguration": {
      "get": {
        "tags": [
          "StripePayment"
        ],
        "operationId": "ApiServicesAppStripepaymentGetconfigurationGet",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/StripeConfigurationDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StripeConfigurationDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/StripeConfigurationDto"
                }
              }
            }
          }
        }
      }
    },
    "/api/services/app/StripePayment/GetPayment": {
      "get": {
        "tags": [
          "StripePayment"
        ],
        "operationId": "ApiServicesAppStripepaymentGetpaymentGet",
        "parameters": [
          {
            "name": "StripeSessionId",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/SubscriptionPaymentDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SubscriptionPaymentDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/SubscriptionPaymentDto"
                }
              }
            }
          }
        }
      }
    },
    "/api/services/app/StripePayment/CreatePaymentSession": {
      "post": {
        "tags": [
          "StripePayment"
        ],
        "operationId": "ApiServicesAppStripepaymentCreatepaymentsessionPost",
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/StripeCreatePaymentSessionInput"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/StripeCreatePaymentSessionInput"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/StripeCreatePaymentSessionInput"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/StripeCreatePaymentSessionInput"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                }
              },
              "application/json": {
                "schema": {
                  "type": "string"
                }
              },
              "text/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/api/services/app/StripePayment/GetPaymentResult": {
      "get": {
        "tags": [
          "StripePayment"
        ],
        "operationId": "ApiServicesAppStripepaymentGetpaymentresultGet",
        "parameters": [
          {
            "name": "PaymentId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/StripePaymentResultOutput"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StripePaymentResultOutput"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/StripePaymentResultOutput"
                }
              }
            }
          }
        }
      }
    },
    "/api/services/app/Subscription/DisableRecurringPayments": {
      "post": {
        "tags": [
          "Subscription"
        ],
        "operationId": "ApiServicesAppSubscriptionDisablerecurringpaymentsPost",
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/services/app/Subscription/EnableRecurringPayments": {
      "post": {
        "tags": [
          "Subscription"
        ],
        "operationId": "ApiServicesAppSubscriptionEnablerecurringpaymentsPost",
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/services/app/Subscription/SubscribeDeviceEdition": {
      "post": {
        "tags": [
          "Subscription"
        ],
        "operationId": "ApiServicesAppSubscriptionSubscribedeviceeditionPost",
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/SubscriptionDeviceEditionDto"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SubscriptionDeviceEditionDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/SubscriptionDeviceEditionDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/SubscriptionDeviceEditionDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/services/app/SummaryEmployeeReports/GetAll": {
      "get": {
        "tags": [
          "SummaryEmployeeReports"
        ],
        "operationId": "ApiServicesAppSummaryemployeereportsGetallGet",
        "parameters": [
          {
            "name": "UserIdsFilter",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "integer",
                "format": "int64"
              },
              "nullable": true
            }
          },
          {
            "name": "OrganizationUnitId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int64",
              "nullable": true
            }
          },
          {
            "name": "UserNameFilter",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "WorkScheduleNameFilter",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "ReportDateFrom",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "ReportDateTo",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "Sorting",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "SkipCount",
            "in": "query",
            "schema": {
              "maximum": 2147483647,
              "minimum": 0,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "MaxResultCount",
            "in": "query",
            "schema": {
              "maximum": 2147483647,
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/PagedResultDtoOfGetSummaryEmployeeReportForViewDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PagedResultDtoOfGetSummaryEmployeeReportForViewDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/PagedResultDtoOfGetSummaryEmployeeReportForViewDto"
                }
              }
            }
          }
        }
      }
    },
    "/api/services/app/SummaryEmployeeReports/GetSummaryEmployeeReportsToExcel": {
      "get": {
        "tags": [
          "SummaryEmployeeReports"
        ],
        "operationId": "ApiServicesAppSummaryemployeereportsGetsummaryemployeereportstoexcelGet",
        "parameters": [
          {
            "name": "UserIdsFilter",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "integer",
                "format": "int64"
              },
              "nullable": true
            }
          },
          {
            "name": "OrganizationUnitId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int64",
              "nullable": true
            }
          },
          {
            "name": "UserNameFilter",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "WorkScheduleNameFilter",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "ReportDateFrom",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "ReportDateTo",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/FileDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FileDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/FileDto"
                }
              }
            }
          }
        }
      }
    },
    "/api/services/app/Supports/GetAll": {
      "get": {
        "tags": [
          "Supports"
        ],
        "operationId": "ApiServicesAppSupportsGetallGet",
        "parameters": [
          {
            "name": "Filter",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "TenantIdFilter",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32",
              "nullable": true
            }
          },
          {
            "name": "SupportParentId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int64",
              "nullable": true
            }
          },
          {
            "name": "RequestSubjectFilter",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "RequestDescriptionFilter",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "RequestTypeFilter",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32",
              "nullable": true
            }
          },
          {
            "name": "RequestStatusFilter",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32",
              "nullable": true
            }
          },
          {
            "name": "AdditionalDescriptionFilter",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "DeviceNameFilter",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "UserNameFilter",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "SupportRequestSubjectFilter",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "CreationDateStart",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date-time",
              "nullable": true
            }
          },
          {
            "name": "CreationDateEnd",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date-time",
              "nullable": true
            }
          },
          {
            "name": "Sorting",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "SkipCount",
            "in": "query",
            "schema": {
              "maximum": 2147483647,
              "minimum": 0,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "MaxResultCount",
            "in": "query",
            "schema": {
              "maximum": 2147483647,
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/PagedResultDtoOfGetSupportForViewDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PagedResultDtoOfGetSupportForViewDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/PagedResultDtoOfGetSupportForViewDto"
                }
              }
            }
          }
        }
      }
    },
    "/api/services/app/Supports/GetSupportForView": {
      "get": {
        "tags": [
          "Supports"
        ],
        "operationId": "ApiServicesAppSupportsGetsupportforviewGet",
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/GetSupportForViewDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetSupportForViewDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetSupportForViewDto"
                }
              }
            }
          }
        }
      }
    },
    "/api/services/app/Supports/CreateOrEdit": {
      "post": {
        "tags": [
          "Supports"
        ],
        "operationId": "ApiServicesAppSupportsCreateoreditPost",
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/CreateOrEditSupportDto"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateOrEditSupportDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateOrEditSupportDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/CreateOrEditSupportDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/services/app/Supports/Reply": {
      "post": {
        "tags": [
          "Supports"
        ],
        "operationId": "ApiServicesAppSupportsReplyPost",
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/CreateOrEditSupportDto"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateOrEditSupportDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateOrEditSupportDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/CreateOrEditSupportDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/services/app/Supports/Reject": {
      "post": {
        "tags": [
          "Supports"
        ],
        "operationId": "ApiServicesAppSupportsRejectPost",
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/services/app/Supports/GetSupportsToExcel": {
      "get": {
        "tags": [
          "Supports"
        ],
        "operationId": "ApiServicesAppSupportsGetsupportstoexcelGet",
        "parameters": [
          {
            "name": "Filter",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "RequestSubjectFilter",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "RequestDescriptionFilter",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "RequestTypeFilter",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32",
              "nullable": true
            }
          },
          {
            "name": "RequestStatusFilter",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32",
              "nullable": true
            }
          },
          {
            "name": "AdditionalDescriptionFilter",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "DeviceNameFilter",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "UserNameFilter",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "SupportRequestSubjectFilter",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "CreationDateStart",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date-time",
              "nullable": true
            }
          },
          {
            "name": "CreationDateEnd",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date-time",
              "nullable": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/FileDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FileDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/FileDto"
                }
              }
            }
          }
        }
      }
    },
    "/api/services/app/Supports/ConfirmPayment": {
      "post": {
        "tags": [
          "Supports"
        ],
        "operationId": "ApiServicesAppSupportsConfirmpaymentPost",
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/services/app/Supports/GetAllDeviceForLookupTable": {
      "get": {
        "tags": [
          "Supports"
        ],
        "operationId": "ApiServicesAppSupportsGetalldeviceforlookuptableGet",
        "parameters": [
          {
            "name": "Filter",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "Sorting",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "SkipCount",
            "in": "query",
            "schema": {
              "maximum": 2147483647,
              "minimum": 0,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "MaxResultCount",
            "in": "query",
            "schema": {
              "maximum": 2147483647,
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/PagedResultDtoOfSupportDeviceLookupTableDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PagedResultDtoOfSupportDeviceLookupTableDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/PagedResultDtoOfSupportDeviceLookupTableDto"
                }
              }
            }
          }
        }
      }
    },
    "/api/services/app/Supports/GetAllUserForLookupTable": {
      "get": {
        "tags": [
          "Supports"
        ],
        "operationId": "ApiServicesAppSupportsGetalluserforlookuptableGet",
        "parameters": [
          {
            "name": "Filter",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "Sorting",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "SkipCount",
            "in": "query",
            "schema": {
              "maximum": 2147483647,
              "minimum": 0,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "MaxResultCount",
            "in": "query",
            "schema": {
              "maximum": 2147483647,
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/PagedResultDtoOfSupportUserLookupTableDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PagedResultDtoOfSupportUserLookupTableDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/PagedResultDtoOfSupportUserLookupTableDto"
                }
              }
            }
          }
        }
      }
    },
    "/api/services/app/Supports/GetAllSupportForLookupTable": {
      "get": {
        "tags": [
          "Supports"
        ],
        "operationId": "ApiServicesAppSupportsGetallsupportforlookuptableGet",
        "parameters": [
          {
            "name": "Filter",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "Sorting",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "SkipCount",
            "in": "query",
            "schema": {
              "maximum": 2147483647,
              "minimum": 0,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "MaxResultCount",
            "in": "query",
            "schema": {
              "maximum": 2147483647,
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/PagedResultDtoOfSupportSupportLookupTableDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PagedResultDtoOfSupportSupportLookupTableDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/PagedResultDtoOfSupportSupportLookupTableDto"
                }
              }
            }
          }
        }
      }
    },
    "/api/services/app/Tenant/GetTenants": {
      "get": {
        "tags": [
          "Tenant"
        ],
        "operationId": "ApiServicesAppTenantGettenantsGet",
        "parameters": [
          {
            "name": "Filter",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "SubscriptionEndDateStart",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date-time",
              "nullable": true
            }
          },
          {
            "name": "SubscriptionEndDateEnd",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date-time",
              "nullable": true
            }
          },
          {
            "name": "CreationDateStart",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date-time",
              "nullable": true
            }
          },
          {
            "name": "CreationDateEnd",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date-time",
              "nullable": true
            }
          },
          {
            "name": "EditionId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32",
              "nullable": true
            }
          },
          {
            "name": "EditionIdSpecified",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "Sorting",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "MaxResultCount",
            "in": "query",
            "schema": {
              "maximum": 1000,
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "SkipCount",
            "in": "query",
            "schema": {
              "maximum": 2147483647,
              "minimum": 0,
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/PagedResultDtoOfTenantListDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PagedResultDtoOfTenantListDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/PagedResultDtoOfTenantListDto"
                }
              }
            }
          }
        }
      }
    },
    "/api/services/app/Tenant/CreateTenant": {
      "post": {
        "tags": [
          "Tenant"
        ],
        "operationId": "ApiServicesAppTenantCreatetenantPost",
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/CreateTenantInput"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateTenantInput"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateTenantInput"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/CreateTenantInput"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/services/app/Tenant/GetTenantForEdit": {
      "get": {
        "tags": [
          "Tenant"
        ],
        "operationId": "ApiServicesAppTenantGettenantforeditGet",
        "parameters": [
          {
            "name": "Id",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/TenantEditDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TenantEditDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/TenantEditDto"
                }
              }
            }
          }
        }
      }
    },
    "/api/services/app/Tenant/UpdateTenant": {
      "put": {
        "tags": [
          "Tenant"
        ],
        "operationId": "ApiServicesAppTenantUpdatetenantPut",
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/TenantEditDto"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TenantEditDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/TenantEditDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/TenantEditDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/services/app/Tenant/DeleteTenant": {
      "delete": {
        "tags": [
          "Tenant"
        ],
        "operationId": "ApiServicesAppTenantDeletetenantDelete",
        "parameters": [
          {
            "name": "Id",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/services/app/Tenant/GetTenantFeaturesForEdit": {
      "get": {
        "tags": [
          "Tenant"
        ],
        "operationId": "ApiServicesAppTenantGettenantfeaturesforeditGet",
        "parameters": [
          {
            "name": "Id",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/GetTenantFeaturesEditOutput"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetTenantFeaturesEditOutput"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetTenantFeaturesEditOutput"
                }
              }
            }
          }
        }
      }
    },
    "/api/services/app/Tenant/UpdateTenantFeatures": {
      "put": {
        "tags": [
          "Tenant"
        ],
        "operationId": "ApiServicesAppTenantUpdatetenantfeaturesPut",
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateTenantFeaturesInput"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateTenantFeaturesInput"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateTenantFeaturesInput"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateTenantFeaturesInput"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/services/app/Tenant/ResetTenantSpecificFeatures": {
      "post": {
        "tags": [
          "Tenant"
        ],
        "operationId": "ApiServicesAppTenantResettenantspecificfeaturesPost",
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/EntityDto"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EntityDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/EntityDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/EntityDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/services/app/Tenant/UnlockTenantAdmin": {
      "post": {
        "tags": [
          "Tenant"
        ],
        "operationId": "ApiServicesAppTenantUnlocktenantadminPost",
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/EntityDto"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EntityDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/EntityDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/EntityDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/services/app/Tenant/ChangeTenantAdmin": {
      "post": {
        "tags": [
          "Tenant"
        ],
        "operationId": "ApiServicesAppTenantChangetenantadminPost",
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/ChangeTenantAdminInput"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ChangeTenantAdminInput"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ChangeTenantAdminInput"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ChangeTenantAdminInput"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/services/app/TenantDashboard/GetMemberActivity": {
      "get": {
        "tags": [
          "TenantDashboard"
        ],
        "operationId": "ApiServicesAppTenantdashboardGetmemberactivityGet",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/GetMemberActivityOutput"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetMemberActivityOutput"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetMemberActivityOutput"
                }
              }
            }
          }
        }
      }
    },
    "/api/services/app/TenantDashboard/GetDashboardData": {
      "get": {
        "tags": [
          "TenantDashboard"
        ],
        "operationId": "ApiServicesAppTenantdashboardGetdashboarddataGet",
        "parameters": [
          {
            "name": "SalesSummaryDatePeriod",
            "in": "query",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/SalesSummaryDatePeriod"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/GetDashboardDataOutput"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetDashboardDataOutput"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetDashboardDataOutput"
                }
              }
            }
          }
        }
      }
    },
    "/api/services/app/TenantDashboard/GetTopStats": {
      "get": {
        "tags": [
          "TenantDashboard"
        ],
        "operationId": "ApiServicesAppTenantdashboardGettopstatsGet",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/GetTopStatsOutput"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetTopStatsOutput"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetTopStatsOutput"
                }
              }
            }
          }
        }
      }
    },
    "/api/services/app/TenantDashboard/GetProfitShare": {
      "get": {
        "tags": [
          "TenantDashboard"
        ],
        "operationId": "ApiServicesAppTenantdashboardGetprofitshareGet",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/GetProfitShareOutput"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetProfitShareOutput"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetProfitShareOutput"
                }
              }
            }
          }
        }
      }
    },
    "/api/services/app/TenantDashboard/GetDailySales": {
      "get": {
        "tags": [
          "TenantDashboard"
        ],
        "operationId": "ApiServicesAppTenantdashboardGetdailysalesGet",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/GetDailySalesOutput"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetDailySalesOutput"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetDailySalesOutput"
                }
              }
            }
          }
        }
      }
    },
    "/api/services/app/TenantDashboard/GetSalesSummary": {
      "get": {
        "tags": [
          "TenantDashboard"
        ],
        "operationId": "ApiServicesAppTenantdashboardGetsalessummaryGet",
        "parameters": [
          {
            "name": "SalesSummaryDatePeriod",
            "in": "query",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/SalesSummaryDatePeriod"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/GetSalesSummaryOutput"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetSalesSummaryOutput"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetSalesSummaryOutput"
                }
              }
            }
          }
        }
      }
    },
    "/api/services/app/TenantDashboard/GetRegionalStats": {
      "get": {
        "tags": [
          "TenantDashboard"
        ],
        "operationId": "ApiServicesAppTenantdashboardGetregionalstatsGet",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/GetRegionalStatsOutput"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetRegionalStatsOutput"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetRegionalStatsOutput"
                }
              }
            }
          }
        }
      }
    },
    "/api/services/app/TenantDashboard/GetGeneralStats": {
      "get": {
        "tags": [
          "TenantDashboard"
        ],
        "operationId": "ApiServicesAppTenantdashboardGetgeneralstatsGet",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/GetGeneralStatsOutput"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetGeneralStatsOutput"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetGeneralStatsOutput"
                }
              }
            }
          }
        }
      }
    },
    "/api/services/app/TenantDevices/GetAll": {
      "get": {
        "tags": [
          "TenantDevices"
        ],
        "operationId": "ApiServicesAppTenantdevicesGetallGet",
        "parameters": [
          {
            "name": "Filter",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "DeviceSerialNumberFilter",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "TenantNameFilter",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "Sorting",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "SkipCount",
            "in": "query",
            "schema": {
              "maximum": 2147483647,
              "minimum": 0,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "MaxResultCount",
            "in": "query",
            "schema": {
              "maximum": 2147483647,
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/PagedResultDtoOfGetTenantDeviceForViewDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PagedResultDtoOfGetTenantDeviceForViewDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/PagedResultDtoOfGetTenantDeviceForViewDto"
                }
              }
            }
          }
        }
      }
    },
    "/api/services/app/TenantDevices/GetAllTenantDevices": {
      "get": {
        "tags": [
          "TenantDevices"
        ],
        "operationId": "ApiServicesAppTenantdevicesGetalltenantdevicesGet",
        "parameters": [
          {
            "name": "Filter",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "DeviceSerialNumberFilter",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "TenantNameFilter",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "Sorting",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "SkipCount",
            "in": "query",
            "schema": {
              "maximum": 2147483647,
              "minimum": 0,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "MaxResultCount",
            "in": "query",
            "schema": {
              "maximum": 2147483647,
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/PagedResultDtoOfGetTenantDeviceForViewDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PagedResultDtoOfGetTenantDeviceForViewDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/PagedResultDtoOfGetTenantDeviceForViewDto"
                }
              }
            }
          }
        }
      }
    },
    "/api/services/app/TenantDevices/GetTenantDeviceForView": {
      "get": {
        "tags": [
          "TenantDevices"
        ],
        "operationId": "ApiServicesAppTenantdevicesGettenantdeviceforviewGet",
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/GetTenantDeviceForViewDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetTenantDeviceForViewDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetTenantDeviceForViewDto"
                }
              }
            }
          }
        }
      }
    },
    "/api/services/app/TenantDevices/CreateOrEdit": {
      "post": {
        "tags": [
          "TenantDevices"
        ],
        "operationId": "ApiServicesAppTenantdevicesCreateoreditPost",
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/CreateOrEditTenantDeviceDto"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateOrEditTenantDeviceDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateOrEditTenantDeviceDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/CreateOrEditTenantDeviceDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/services/app/TenantDevices/Delete": {
      "delete": {
        "tags": [
          "TenantDevices"
        ],
        "operationId": "ApiServicesAppTenantdevicesDeleteDelete",
        "parameters": [
          {
            "name": "Id",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/services/app/TenantDevices/RemoveAllTenantDevices": {
      "delete": {
        "tags": [
          "TenantDevices"
        ],
        "operationId": "ApiServicesAppTenantdevicesRemovealltenantdevicesDelete",
        "parameters": [
          {
            "name": "deviceId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/services/app/TenantDevices/GetTenantDevicesToExcel": {
      "get": {
        "tags": [
          "TenantDevices"
        ],
        "operationId": "ApiServicesAppTenantdevicesGettenantdevicestoexcelGet",
        "parameters": [
          {
            "name": "Filter",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "DeviceSerialNumberFilter",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "TenantNameFilter",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/FileDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FileDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/FileDto"
                }
              }
            }
          }
        }
      }
    },
    "/api/services/app/TenantDevices/AssignNewTenantToDevice": {
      "post": {
        "tags": [
          "TenantDevices"
        ],
        "operationId": "ApiServicesAppTenantdevicesAssignnewtenanttodevicePost",
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/CreateOrEditTenantDeviceDto"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateOrEditTenantDeviceDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateOrEditTenantDeviceDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/CreateOrEditTenantDeviceDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/services/app/TenantDevices/GetAllDeviceForLookupTable": {
      "get": {
        "tags": [
          "TenantDevices"
        ],
        "operationId": "ApiServicesAppTenantdevicesGetalldeviceforlookuptableGet",
        "parameters": [
          {
            "name": "Filter",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "Sorting",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "SkipCount",
            "in": "query",
            "schema": {
              "maximum": 2147483647,
              "minimum": 0,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "MaxResultCount",
            "in": "query",
            "schema": {
              "maximum": 2147483647,
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/PagedResultDtoOfTenantDeviceDeviceLookupTableDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PagedResultDtoOfTenantDeviceDeviceLookupTableDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/PagedResultDtoOfTenantDeviceDeviceLookupTableDto"
                }
              }
            }
          }
        }
      }
    },
    "/api/services/app/TenantDevices/GetAllTenantForLookupTable": {
      "get": {
        "tags": [
          "TenantDevices"
        ],
        "operationId": "ApiServicesAppTenantdevicesGetalltenantforlookuptableGet",
        "parameters": [
          {
            "name": "Filter",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "Sorting",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "SkipCount",
            "in": "query",
            "schema": {
              "maximum": 2147483647,
              "minimum": 0,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "MaxResultCount",
            "in": "query",
            "schema": {
              "maximum": 2147483647,
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/PagedResultDtoOfTenantDeviceTenantLookupTableDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PagedResultDtoOfTenantDeviceTenantLookupTableDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/PagedResultDtoOfTenantDeviceTenantLookupTableDto"
                }
              }
            }
          }
        }
      }
    },
    "/api/services/app/TenantRegistration/RegisterTenant": {
      "post": {
        "tags": [
          "TenantRegistration"
        ],
        "operationId": "ApiServicesAppTenantregistrationRegistertenantPost",
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/RegisterTenantInput"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RegisterTenantInput"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/RegisterTenantInput"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/RegisterTenantInput"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/RegisterTenantOutput"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RegisterTenantOutput"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/RegisterTenantOutput"
                }
              }
            }
          }
        }
      }
    },
    "/api/services/app/TenantRegistration/GetEditionsForSelect": {
      "get": {
        "tags": [
          "TenantRegistration"
        ],
        "operationId": "ApiServicesAppTenantregistrationGeteditionsforselectGet",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/EditionsSelectOutput"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EditionsSelectOutput"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/EditionsSelectOutput"
                }
              }
            }
          }
        }
      }
    },
    "/api/services/app/TenantRegistration/GetEdition": {
      "get": {
        "tags": [
          "TenantRegistration"
        ],
        "operationId": "ApiServicesAppTenantregistrationGeteditionGet",
        "parameters": [
          {
            "name": "editionId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/EditionSelectDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EditionSelectDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/EditionSelectDto"
                }
              }
            }
          }
        }
      }
    },
    "/api/services/app/TenantSettings/GetAllSettings": {
      "get": {
        "tags": [
          "TenantSettings"
        ],
        "operationId": "ApiServicesAppTenantsettingsGetallsettingsGet",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/TenantSettingsEditDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TenantSettingsEditDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/TenantSettingsEditDto"
                }
              }
            }
          }
        }
      }
    },
    "/api/services/app/TenantSettings/UpdateAllSettings": {
      "put": {
        "tags": [
          "TenantSettings"
        ],
        "operationId": "ApiServicesAppTenantsettingsUpdateallsettingsPut",
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/TenantSettingsEditDto"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TenantSettingsEditDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/TenantSettingsEditDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/TenantSettingsEditDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/services/app/TenantSettings/ClearLogo": {
      "post": {
        "tags": [
          "TenantSettings"
        ],
        "operationId": "ApiServicesAppTenantsettingsClearlogoPost",
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/services/app/TenantSettings/ClearCustomCss": {
      "post": {
        "tags": [
          "TenantSettings"
        ],
        "operationId": "ApiServicesAppTenantsettingsClearcustomcssPost",
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/services/app/TenantSettings/SendTestEmail": {
      "post": {
        "tags": [
          "TenantSettings"
        ],
        "operationId": "ApiServicesAppTenantsettingsSendtestemailPost",
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/SendTestEmailInput"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SendTestEmailInput"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/SendTestEmailInput"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/SendTestEmailInput"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/services/app/TenantSettings/GetEnabledSocialLoginSettings": {
      "get": {
        "tags": [
          "TenantSettings"
        ],
        "operationId": "ApiServicesAppTenantsettingsGetenabledsocialloginsettingsGet",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ExternalLoginSettingsDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ExternalLoginSettingsDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ExternalLoginSettingsDto"
                }
              }
            }
          }
        }
      }
    },
    "/api/services/app/Timing/GetTimezones": {
      "get": {
        "tags": [
          "Timing"
        ],
        "operationId": "ApiServicesAppTimingGettimezonesGet",
        "parameters": [
          {
            "name": "DefaultTimezoneScope",
            "in": "query",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/SettingScopes"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ListResultDtoOfNameValueDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ListResultDtoOfNameValueDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ListResultDtoOfNameValueDto"
                }
              }
            }
          }
        }
      }
    },
    "/api/services/app/Timing/GetTimezoneComboboxItems": {
      "get": {
        "tags": [
          "Timing"
        ],
        "operationId": "ApiServicesAppTimingGettimezonecomboboxitemsGet",
        "parameters": [
          {
            "name": "SelectedTimezoneId",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ComboboxItemDto"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ComboboxItemDto"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ComboboxItemDto"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/TokenAuth/AuthenticateByTenant": {
      "post": {
        "tags": [
          "TokenAuth"
        ],
        "operationId": "ApiTokenauthAuthenticatebytenantPost",
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/AuthenticateByTenantModel"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AuthenticateByTenantModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/AuthenticateByTenantModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/AuthenticateByTenantModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AuthenticateResultModel"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AuthenticateResultModel"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AuthenticateResultModel"
                }
              }
            }
          }
        }
      }
    },
    "/api/TokenAuth/Authenticate": {
      "post": {
        "tags": [
          "TokenAuth"
        ],
        "operationId": "ApiTokenauthAuthenticatePost",
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/AuthenticateModel"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AuthenticateModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/AuthenticateModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/AuthenticateModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AuthenticateResultModel"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AuthenticateResultModel"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AuthenticateResultModel"
                }
              }
            }
          }
        }
      }
    },
    "/api/TokenAuth/RefreshToken": {
      "post": {
        "tags": [
          "TokenAuth"
        ],
        "operationId": "ApiTokenauthRefreshtokenPost",
        "parameters": [
          {
            "name": "refreshToken",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/RefreshTokenResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RefreshTokenResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/RefreshTokenResult"
                }
              }
            }
          }
        }
      }
    },
    "/api/TokenAuth/LogOut": {
      "get": {
        "tags": [
          "TokenAuth"
        ],
        "operationId": "ApiTokenauthLogoutGet",
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/TokenAuth/SendTwoFactorAuthCode": {
      "post": {
        "tags": [
          "TokenAuth"
        ],
        "operationId": "ApiTokenauthSendtwofactorauthcodePost",
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/SendTwoFactorAuthCodeModel"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SendTwoFactorAuthCodeModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/SendTwoFactorAuthCodeModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/SendTwoFactorAuthCodeModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/TokenAuth/ImpersonatedAuthenticate": {
      "post": {
        "tags": [
          "TokenAuth"
        ],
        "operationId": "ApiTokenauthImpersonatedauthenticatePost",
        "parameters": [
          {
            "name": "impersonationToken",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ImpersonatedAuthenticateResultModel"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ImpersonatedAuthenticateResultModel"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ImpersonatedAuthenticateResultModel"
                }
              }
            }
          }
        }
      }
    },
    "/api/TokenAuth/DelegatedImpersonatedAuthenticate": {
      "post": {
        "tags": [
          "TokenAuth"
        ],
        "operationId": "ApiTokenauthDelegatedimpersonatedauthenticatePost",
        "parameters": [
          {
            "name": "userDelegationId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "impersonationToken",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ImpersonatedAuthenticateResultModel"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ImpersonatedAuthenticateResultModel"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ImpersonatedAuthenticateResultModel"
                }
              }
            }
          }
        }
      }
    },
    "/api/TokenAuth/LinkedAccountAuthenticate": {
      "post": {
        "tags": [
          "TokenAuth"
        ],
        "operationId": "ApiTokenauthLinkedaccountauthenticatePost",
        "parameters": [
          {
            "name": "switchAccountToken",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/SwitchedAccountAuthenticateResultModel"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SwitchedAccountAuthenticateResultModel"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/SwitchedAccountAuthenticateResultModel"
                }
              }
            }
          }
        }
      }
    },
    "/api/TokenAuth/GetExternalAuthenticationProviders": {
      "get": {
        "tags": [
          "TokenAuth"
        ],
        "operationId": "ApiTokenauthGetexternalauthenticationprovidersGet",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ExternalLoginProviderInfoModel"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ExternalLoginProviderInfoModel"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ExternalLoginProviderInfoModel"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/TokenAuth/ExternalAuthenticate": {
      "post": {
        "tags": [
          "TokenAuth"
        ],
        "operationId": "ApiTokenauthExternalauthenticatePost",
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/ExternalAuthenticateModel"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ExternalAuthenticateModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ExternalAuthenticateModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ExternalAuthenticateModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ExternalAuthenticateResultModel"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ExternalAuthenticateResultModel"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ExternalAuthenticateResultModel"
                }
              }
            }
          }
        }
      }
    },
    "/api/TokenAuth/TestNotification": {
      "get": {
        "tags": [
          "TokenAuth"
        ],
        "operationId": "ApiTokenauthTestnotificationGet",
        "parameters": [
          {
            "name": "message",
            "in": "query",
            "schema": {
              "type": "string",
              "default": "",
              "nullable": true
            }
          },
          {
            "name": "severity",
            "in": "query",
            "schema": {
              "type": "string",
              "default": "info",
              "nullable": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/Twitter/GetRequestToken": {
      "post": {
        "tags": [
          "Twitter"
        ],
        "operationId": "ApiTwitterGetrequesttokenPost",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/TwitterGetRequestTokenResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TwitterGetRequestTokenResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/TwitterGetRequestTokenResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/Twitter/GetAccessToken": {
      "post": {
        "tags": [
          "Twitter"
        ],
        "operationId": "ApiTwitterGetaccesstokenPost",
        "parameters": [
          {
            "name": "token",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "verifier",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/TwitterGetAccessTokenResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TwitterGetAccessTokenResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/TwitterGetAccessTokenResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/services/app/UiCustomizationSettings/GetUiManagementSettings": {
      "get": {
        "tags": [
          "UiCustomizationSettings"
        ],
        "operationId": "ApiServicesAppUicustomizationsettingsGetuimanagementsettingsGet",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ThemeSettingsDto"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ThemeSettingsDto"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ThemeSettingsDto"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/services/app/UiCustomizationSettings/ChangeThemeWithDefaultValues": {
      "post": {
        "tags": [
          "UiCustomizationSettings"
        ],
        "operationId": "ApiServicesAppUicustomizationsettingsChangethemewithdefaultvaluesPost",
        "parameters": [
          {
            "name": "themeName",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/services/app/UiCustomizationSettings/UpdateUiManagementSettings": {
      "put": {
        "tags": [
          "UiCustomizationSettings"
        ],
        "operationId": "ApiServicesAppUicustomizationsettingsUpdateuimanagementsettingsPut",
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/ThemeSettingsDto"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ThemeSettingsDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ThemeSettingsDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ThemeSettingsDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/services/app/UiCustomizationSettings/UpdateDefaultUiManagementSettings": {
      "put": {
        "tags": [
          "UiCustomizationSettings"
        ],
        "operationId": "ApiServicesAppUicustomizationsettingsUpdatedefaultuimanagementsettingsPut",
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/ThemeSettingsDto"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ThemeSettingsDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ThemeSettingsDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ThemeSettingsDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/services/app/UiCustomizationSettings/UseSystemDefaultSettings": {
      "post": {
        "tags": [
          "UiCustomizationSettings"
        ],
        "operationId": "ApiServicesAppUicustomizationsettingsUsesystemdefaultsettingsPost",
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/services/app/User/GetUsers": {
      "get": {
        "tags": [
          "User"
        ],
        "operationId": "ApiServicesAppUserGetusersGet",
        "parameters": [
          {
            "name": "Filter",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "Permissions",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "nullable": true
            }
          },
          {
            "name": "Role",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32",
              "nullable": true
            }
          },
          {
            "name": "OnlyLockedUsers",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "GenderType",
            "in": "query",
            "schema": {
              "$ref": "#/components/schemas/GenderType"
            }
          },
          {
            "name": "Birthdate",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date-time",
              "nullable": true
            }
          },
          {
            "name": "BankAccount",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "Address",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "HomePhoneNumber",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "WorkPhoneNumber",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "PostalCode",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "BirthCertificateNumber",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "NationalCode",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "DegreeType",
            "in": "query",
            "schema": {
              "$ref": "#/components/schemas/DegreeType"
            }
          },
          {
            "name": "Occupation",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "JobTitle",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "IntroduceType",
            "in": "query",
            "schema": {
              "$ref": "#/components/schemas/IntroduceType"
            }
          },
          {
            "name": "Sorting",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "MaxResultCount",
            "in": "query",
            "schema": {
              "maximum": 1000,
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "SkipCount",
            "in": "query",
            "schema": {
              "maximum": 2147483647,
              "minimum": 0,
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/PagedResultDtoOfUserListDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PagedResultDtoOfUserListDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/PagedResultDtoOfUserListDto"
                }
              }
            }
          }
        }
      }
    },
    "/api/services/app/User/GetUsersToExcel": {
      "get": {
        "tags": [
          "User"
        ],
        "operationId": "ApiServicesAppUserGetuserstoexcelGet",
        "parameters": [
          {
            "name": "Filter",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "Permissions",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "nullable": true
            }
          },
          {
            "name": "Role",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32",
              "nullable": true
            }
          },
          {
            "name": "OnlyLockedUsers",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "Sorting",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "GenderType",
            "in": "query",
            "schema": {
              "$ref": "#/components/schemas/GenderType"
            }
          },
          {
            "name": "Birthdate",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date-time",
              "nullable": true
            }
          },
          {
            "name": "BankAccount",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "Address",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "HomePhoneNumber",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "WorkPhoneNumber",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "PostalCode",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "BirthCertificateNumber",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "NationalCode",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "DegreeType",
            "in": "query",
            "schema": {
              "$ref": "#/components/schemas/DegreeType"
            }
          },
          {
            "name": "Occupation",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "JobTitle",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "IntroduceType",
            "in": "query",
            "schema": {
              "$ref": "#/components/schemas/IntroduceType"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/FileDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FileDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/FileDto"
                }
              }
            }
          }
        }
      }
    },
    "/api/services/app/User/GetUserForEdit": {
      "get": {
        "tags": [
          "User"
        ],
        "operationId": "ApiServicesAppUserGetuserforeditGet",
        "parameters": [
          {
            "name": "Id",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int64",
              "nullable": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/GetUserForEditOutput"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetUserForEditOutput"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetUserForEditOutput"
                }
              }
            }
          }
        }
      }
    },
    "/api/services/app/User/GetUserFromAllTenants": {
      "get": {
        "tags": [
          "User"
        ],
        "operationId": "ApiServicesAppUserGetuserfromalltenantsGet",
        "parameters": [
          {
            "name": "Id",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int64",
              "nullable": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/GetUserForEditOutput"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetUserForEditOutput"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetUserForEditOutput"
                }
              }
            }
          }
        }
      }
    },
    "/api/services/app/User/GetUserPermissionsForEdit": {
      "get": {
        "tags": [
          "User"
        ],
        "operationId": "ApiServicesAppUserGetuserpermissionsforeditGet",
        "parameters": [
          {
            "name": "Id",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/GetUserPermissionsForEditOutput"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetUserPermissionsForEditOutput"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetUserPermissionsForEditOutput"
                }
              }
            }
          }
        }
      }
    },
    "/api/services/app/User/ResetUserSpecificPermissions": {
      "post": {
        "tags": [
          "User"
        ],
        "operationId": "ApiServicesAppUserResetuserspecificpermissionsPost",
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/EntityDtoOfInt64"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EntityDtoOfInt64"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/EntityDtoOfInt64"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/EntityDtoOfInt64"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/services/app/User/UpdateUserPermissions": {
      "put": {
        "tags": [
          "User"
        ],
        "operationId": "ApiServicesAppUserUpdateuserpermissionsPut",
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateUserPermissionsInput"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateUserPermissionsInput"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateUserPermissionsInput"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateUserPermissionsInput"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/services/app/User/CreateOrUpdateUser": {
      "post": {
        "tags": [
          "User"
        ],
        "operationId": "ApiServicesAppUserCreateorupdateuserPost",
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/CreateOrUpdateUserInput"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateOrUpdateUserInput"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateOrUpdateUserInput"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/CreateOrUpdateUserInput"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "integer",
                  "format": "int64"
                }
              },
              "application/json": {
                "schema": {
                  "type": "integer",
                  "format": "int64"
                }
              },
              "text/json": {
                "schema": {
                  "type": "integer",
                  "format": "int64"
                }
              }
            }
          }
        }
      }
    },
    "/api/services/app/User/DeleteUser": {
      "delete": {
        "tags": [
          "User"
        ],
        "operationId": "ApiServicesAppUserDeleteuserDelete",
        "parameters": [
          {
            "name": "Id",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/services/app/User/UnlockUser": {
      "post": {
        "tags": [
          "User"
        ],
        "operationId": "ApiServicesAppUserUnlockuserPost",
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/EntityDtoOfInt64"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EntityDtoOfInt64"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/EntityDtoOfInt64"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/EntityDtoOfInt64"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/services/app/User/CreateUserOnTenant": {
      "post": {
        "tags": [
          "User"
        ],
        "operationId": "ApiServicesAppUserCreateuserontenantPost",
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/CreateUserOnTenantInput"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateUserOnTenantInput"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateUserOnTenantInput"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/CreateUserOnTenantInput"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "integer",
                  "format": "int64"
                }
              },
              "application/json": {
                "schema": {
                  "type": "integer",
                  "format": "int64"
                }
              },
              "text/json": {
                "schema": {
                  "type": "integer",
                  "format": "int64"
                }
              }
            }
          }
        }
      }
    },
    "/api/services/app/User/FindUsers": {
      "post": {
        "tags": [
          "User"
        ],
        "operationId": "ApiServicesAppUserFindusersPost",
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/GetAllForLookupTableInput"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/GetAllForLookupTableInput"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/GetAllForLookupTableInput"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/GetAllForLookupTableInput"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/PagedResultDtoOfNameValueDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PagedResultDtoOfNameValueDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/PagedResultDtoOfNameValueDto"
                }
              }
            }
          }
        }
      }
    },
    "/api/services/app/UserClockInOuts/GetAll": {
      "get": {
        "tags": [
          "UserClockInOuts"
        ],
        "operationId": "ApiServicesAppUserclockinoutsGetallGet",
        "parameters": [
          {
            "name": "Filter",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "MaxClockFilter",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date-time",
              "nullable": true
            }
          },
          {
            "name": "MinClockFilter",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date-time",
              "nullable": true
            }
          },
          {
            "name": "ClockInOutTypeFilter",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32",
              "nullable": true
            }
          },
          {
            "name": "AbnormalityTypeFilter",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32",
              "nullable": true
            }
          },
          {
            "name": "MaxWeekNumberFilter",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32",
              "nullable": true
            }
          },
          {
            "name": "MinWeekNumberFilter",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32",
              "nullable": true
            }
          },
          {
            "name": "UserNameFilter",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "WorkScheduleNameFilter",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "WorkHourDayNameFilter",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "OrganizationUnitDisplayNameFilter",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "Sorting",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "SkipCount",
            "in": "query",
            "schema": {
              "maximum": 2147483647,
              "minimum": 0,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "MaxResultCount",
            "in": "query",
            "schema": {
              "maximum": 2147483647,
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/PagedResultDtoOfGetUserClockInOutForViewDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PagedResultDtoOfGetUserClockInOutForViewDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/PagedResultDtoOfGetUserClockInOutForViewDto"
                }
              }
            }
          }
        }
      }
    },
    "/api/services/app/UserClockInOuts/GetUserClocksStatus": {
      "get": {
        "tags": [
          "UserClockInOuts"
        ],
        "operationId": "ApiServicesAppUserclockinoutsGetuserclocksstatusGet",
        "parameters": [
          {
            "name": "MaxClockFilter",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date-time",
              "nullable": true
            }
          },
          {
            "name": "MinClockFilter",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date-time",
              "nullable": true
            }
          },
          {
            "name": "Sorting",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "SkipCount",
            "in": "query",
            "schema": {
              "maximum": 2147483647,
              "minimum": 0,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "MaxResultCount",
            "in": "query",
            "schema": {
              "maximum": 2147483647,
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/PagedResultDtoOfGetUserClockInOutForViewDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PagedResultDtoOfGetUserClockInOutForViewDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/PagedResultDtoOfGetUserClockInOutForViewDto"
                }
              }
            }
          }
        }
      }
    },
    "/api/services/app/UserClockInOuts/GetUserClockInOutForView": {
      "get": {
        "tags": [
          "UserClockInOuts"
        ],
        "operationId": "ApiServicesAppUserclockinoutsGetuserclockinoutforviewGet",
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/GetUserClockInOutForViewDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetUserClockInOutForViewDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetUserClockInOutForViewDto"
                }
              }
            }
          }
        }
      }
    },
    "/api/services/app/UserClockInOuts/GetUserClockInOutForEdit": {
      "get": {
        "tags": [
          "UserClockInOuts"
        ],
        "operationId": "ApiServicesAppUserclockinoutsGetuserclockinoutforeditGet",
        "parameters": [
          {
            "name": "Id",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/GetUserClockInOutForEditOutput"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetUserClockInOutForEditOutput"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetUserClockInOutForEditOutput"
                }
              }
            }
          }
        }
      }
    },
    "/api/services/app/UserClockInOuts/CreateOrEdit": {
      "post": {
        "tags": [
          "UserClockInOuts"
        ],
        "operationId": "ApiServicesAppUserclockinoutsCreateoreditPost",
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/CreateOrEditUserClockInOutDto"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateOrEditUserClockInOutDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateOrEditUserClockInOutDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/CreateOrEditUserClockInOutDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/services/app/UserClockInOuts/ClockInOutByRequestApproval": {
      "post": {
        "tags": [
          "UserClockInOuts"
        ],
        "operationId": "ApiServicesAppUserclockinoutsClockinoutbyrequestapprovalPost",
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/CreateOrEditUserClockInOutDto"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateOrEditUserClockInOutDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateOrEditUserClockInOutDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/CreateOrEditUserClockInOutDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/services/app/UserClockInOuts/Delete": {
      "delete": {
        "tags": [
          "UserClockInOuts"
        ],
        "operationId": "ApiServicesAppUserclockinoutsDeleteDelete",
        "parameters": [
          {
            "name": "Id",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/services/app/UserClockInOuts/GetAllUserForTableDropdown": {
      "get": {
        "tags": [
          "UserClockInOuts"
        ],
        "operationId": "ApiServicesAppUserclockinoutsGetalluserfortabledropdownGet",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/UserClockInOutUserLookupTableDto"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/UserClockInOutUserLookupTableDto"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/UserClockInOutUserLookupTableDto"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/services/app/UserClockInOuts/GetAllWorkScheduleForTableDropdown": {
      "get": {
        "tags": [
          "UserClockInOuts"
        ],
        "operationId": "ApiServicesAppUserclockinoutsGetallworkschedulefortabledropdownGet",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/UserClockInOutWorkScheduleLookupTableDto"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/UserClockInOutWorkScheduleLookupTableDto"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/UserClockInOutWorkScheduleLookupTableDto"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/services/app/UserClockInOuts/GetAllWorkHourForTableDropdown": {
      "get": {
        "tags": [
          "UserClockInOuts"
        ],
        "operationId": "ApiServicesAppUserclockinoutsGetallworkhourfortabledropdownGet",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/UserClockInOutWorkHourLookupTableDto"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/UserClockInOutWorkHourLookupTableDto"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/UserClockInOutWorkHourLookupTableDto"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/services/app/UserClockInOuts/GetAllOrganizationUnitForTableDropdown": {
      "get": {
        "tags": [
          "UserClockInOuts"
        ],
        "operationId": "ApiServicesAppUserclockinoutsGetallorganizationunitfortabledropdownGet",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/UserClockInOutOrganizationUnitLookupTableDto"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/UserClockInOutOrganizationUnitLookupTableDto"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/UserClockInOutOrganizationUnitLookupTableDto"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/services/app/UserDelegation/GetDelegatedUsers": {
      "get": {
        "tags": [
          "UserDelegation"
        ],
        "operationId": "ApiServicesAppUserdelegationGetdelegatedusersGet",
        "parameters": [
          {
            "name": "MaxResultCount",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "SkipCount",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "Sorting",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/PagedResultDtoOfUserDelegationDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PagedResultDtoOfUserDelegationDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/PagedResultDtoOfUserDelegationDto"
                }
              }
            }
          }
        }
      }
    },
    "/api/services/app/UserDelegation/DelegateNewUser": {
      "post": {
        "tags": [
          "UserDelegation"
        ],
        "operationId": "ApiServicesAppUserdelegationDelegatenewuserPost",
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/CreateUserDelegationDto"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateUserDelegationDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateUserDelegationDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/CreateUserDelegationDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/services/app/UserDelegation/RemoveDelegation": {
      "delete": {
        "tags": [
          "UserDelegation"
        ],
        "operationId": "ApiServicesAppUserdelegationRemovedelegationDelete",
        "parameters": [
          {
            "name": "Id",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/services/app/UserDelegation/GetActiveUserDelegations": {
      "get": {
        "tags": [
          "UserDelegation"
        ],
        "operationId": "ApiServicesAppUserdelegationGetactiveuserdelegationsGet",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/UserDelegationDto"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/UserDelegationDto"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/UserDelegationDto"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/services/app/UserDevices/GetAll": {
      "get": {
        "tags": [
          "UserDevices"
        ],
        "operationId": "ApiServicesAppUserdevicesGetallGet",
        "parameters": [
          {
            "name": "Filter",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "UserNameFilter",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "DeviceNameFilter",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "Sorting",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "SkipCount",
            "in": "query",
            "schema": {
              "maximum": 2147483647,
              "minimum": 0,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "MaxResultCount",
            "in": "query",
            "schema": {
              "maximum": 2147483647,
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/PagedResultDtoOfGetUserDeviceForViewDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PagedResultDtoOfGetUserDeviceForViewDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/PagedResultDtoOfGetUserDeviceForViewDto"
                }
              }
            }
          }
        }
      }
    },
    "/api/services/app/UserDevices/Create": {
      "post": {
        "tags": [
          "UserDevices"
        ],
        "operationId": "ApiServicesAppUserdevicesCreatePost",
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/CreateUserDeviceDto"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateUserDeviceDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateUserDeviceDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/CreateUserDeviceDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/services/app/UserDevices/Delete": {
      "delete": {
        "tags": [
          "UserDevices"
        ],
        "operationId": "ApiServicesAppUserdevicesDeleteDelete",
        "parameters": [
          {
            "name": "Id",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/services/app/UserDevices/GetUserDevicesToExcel": {
      "get": {
        "tags": [
          "UserDevices"
        ],
        "operationId": "ApiServicesAppUserdevicesGetuserdevicestoexcelGet",
        "parameters": [
          {
            "name": "Filter",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "UserNameFilter",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "DeviceNameFilter",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/FileDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FileDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/FileDto"
                }
              }
            }
          }
        }
      }
    },
    "/api/services/app/UserDevices/GetAllUserForLookupTable": {
      "get": {
        "tags": [
          "UserDevices"
        ],
        "operationId": "ApiServicesAppUserdevicesGetalluserforlookuptableGet",
        "parameters": [
          {
            "name": "Filter",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "Sorting",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "SkipCount",
            "in": "query",
            "schema": {
              "maximum": 2147483647,
              "minimum": 0,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "MaxResultCount",
            "in": "query",
            "schema": {
              "maximum": 2147483647,
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/PagedResultDtoOfUserDeviceUserLookupTableDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PagedResultDtoOfUserDeviceUserLookupTableDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/PagedResultDtoOfUserDeviceUserLookupTableDto"
                }
              }
            }
          }
        }
      }
    },
    "/api/services/app/UserDevices/GetAllDeviceForLookupTable": {
      "get": {
        "tags": [
          "UserDevices"
        ],
        "operationId": "ApiServicesAppUserdevicesGetalldeviceforlookuptableGet",
        "parameters": [
          {
            "name": "Filter",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "Sorting",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "SkipCount",
            "in": "query",
            "schema": {
              "maximum": 2147483647,
              "minimum": 0,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "MaxResultCount",
            "in": "query",
            "schema": {
              "maximum": 2147483647,
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/PagedResultDtoOfUserDeviceDeviceLookupTableDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PagedResultDtoOfUserDeviceDeviceLookupTableDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/PagedResultDtoOfUserDeviceDeviceLookupTableDto"
                }
              }
            }
          }
        }
      }
    },
    "/api/services/app/UserDevices/RemoveAllUserDevices": {
      "delete": {
        "tags": [
          "UserDevices"
        ],
        "operationId": "ApiServicesAppUserdevicesRemovealluserdevicesDelete",
        "parameters": [
          {
            "name": "deviceId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/services/app/UserDevices/SaveUserDevices": {
      "post": {
        "tags": [
          "UserDevices"
        ],
        "operationId": "ApiServicesAppUserdevicesSaveuserdevicesPost",
        "parameters": [
          {
            "name": "userId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "type": "array",
                "items": {
                  "type": "string"
                },
                "nullable": true
              }
            },
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "type": "string"
                },
                "nullable": true
              }
            },
            "text/json": {
              "schema": {
                "type": "array",
                "items": {
                  "type": "string"
                },
                "nullable": true
              }
            },
            "application/*+json": {
              "schema": {
                "type": "array",
                "items": {
                  "type": "string"
                },
                "nullable": true
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/services/app/UserDevices/UsersInDeviceCount": {
      "post": {
        "tags": [
          "UserDevices"
        ],
        "operationId": "ApiServicesAppUserdevicesUsersindevicecountPost",
        "parameters": [
          {
            "name": "deviceId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              },
              "application/json": {
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              },
              "text/json": {
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              }
            }
          }
        }
      }
    },
    "/api/services/app/UserDevices/IsInDevice": {
      "post": {
        "tags": [
          "UserDevices"
        ],
        "operationId": "ApiServicesAppUserdevicesIsindevicePost",
        "parameters": [
          {
            "name": "userId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "deviceId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "boolean"
                }
              },
              "application/json": {
                "schema": {
                  "type": "boolean"
                }
              },
              "text/json": {
                "schema": {
                  "type": "boolean"
                }
              }
            }
          }
        }
      }
    },
    "/api/services/app/UserLink/LinkToUser": {
      "post": {
        "tags": [
          "UserLink"
        ],
        "operationId": "ApiServicesAppUserlinkLinktouserPost",
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/LinkToUserInput"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/LinkToUserInput"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/LinkToUserInput"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/LinkToUserInput"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/services/app/UserLink/GetLinkedUsers": {
      "get": {
        "tags": [
          "UserLink"
        ],
        "operationId": "ApiServicesAppUserlinkGetlinkedusersGet",
        "parameters": [
          {
            "name": "MaxResultCount",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "SkipCount",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "Sorting",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/PagedResultDtoOfLinkedUserDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PagedResultDtoOfLinkedUserDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/PagedResultDtoOfLinkedUserDto"
                }
              }
            }
          }
        }
      }
    },
    "/api/services/app/UserLink/GetRecentlyUsedLinkedUsers": {
      "get": {
        "tags": [
          "UserLink"
        ],
        "operationId": "ApiServicesAppUserlinkGetrecentlyusedlinkedusersGet",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ListResultDtoOfLinkedUserDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ListResultDtoOfLinkedUserDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ListResultDtoOfLinkedUserDto"
                }
              }
            }
          }
        }
      }
    },
    "/api/services/app/UserLink/UnlinkUser": {
      "post": {
        "tags": [
          "UserLink"
        ],
        "operationId": "ApiServicesAppUserlinkUnlinkuserPost",
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/UnlinkUserInput"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UnlinkUserInput"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/UnlinkUserInput"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/UnlinkUserInput"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/services/app/UserLogin/GetRecentUserLoginAttempts": {
      "get": {
        "tags": [
          "UserLogin"
        ],
        "operationId": "ApiServicesAppUserloginGetrecentuserloginattemptsGet",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ListResultDtoOfUserLoginAttemptDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ListResultDtoOfUserLoginAttemptDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ListResultDtoOfUserLoginAttemptDto"
                }
              }
            }
          }
        }
      }
    },
    "/api/services/app/UserWorkSchedules/GetAll": {
      "get": {
        "tags": [
          "UserWorkSchedules"
        ],
        "operationId": "ApiServicesAppUserworkschedulesGetallGet",
        "parameters": [
          {
            "name": "Filter",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "UserNameFilter",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "WorkScheduleNameFilter",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "Sorting",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "SkipCount",
            "in": "query",
            "schema": {
              "maximum": 2147483647,
              "minimum": 0,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "MaxResultCount",
            "in": "query",
            "schema": {
              "maximum": 2147483647,
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/PagedResultDtoOfGetUserWorkScheduleForViewDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PagedResultDtoOfGetUserWorkScheduleForViewDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/PagedResultDtoOfGetUserWorkScheduleForViewDto"
                }
              }
            }
          }
        }
      }
    },
    "/api/services/app/UserWorkSchedules/GetUserWorkScheduleForView": {
      "get": {
        "tags": [
          "UserWorkSchedules"
        ],
        "operationId": "ApiServicesAppUserworkschedulesGetuserworkscheduleforviewGet",
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/GetUserWorkScheduleForViewDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetUserWorkScheduleForViewDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetUserWorkScheduleForViewDto"
                }
              }
            }
          }
        }
      }
    },
    "/api/services/app/UserWorkSchedules/GetUserWorkScheduleForEdit": {
      "get": {
        "tags": [
          "UserWorkSchedules"
        ],
        "operationId": "ApiServicesAppUserworkschedulesGetuserworkscheduleforeditGet",
        "parameters": [
          {
            "name": "Id",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/GetUserWorkScheduleForEditOutput"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetUserWorkScheduleForEditOutput"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetUserWorkScheduleForEditOutput"
                }
              }
            }
          }
        }
      }
    },
    "/api/services/app/UserWorkSchedules/CreateOrEdit": {
      "post": {
        "tags": [
          "UserWorkSchedules"
        ],
        "operationId": "ApiServicesAppUserworkschedulesCreateoreditPost",
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/CreateOrEditUserWorkScheduleDto"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateOrEditUserWorkScheduleDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateOrEditUserWorkScheduleDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/CreateOrEditUserWorkScheduleDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/services/app/UserWorkSchedules/SaveUserWorkSchedule": {
      "post": {
        "tags": [
          "UserWorkSchedules"
        ],
        "operationId": "ApiServicesAppUserworkschedulesSaveuserworkschedulePost",
        "parameters": [
          {
            "name": "userId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "type": "array",
                "items": {
                  "type": "string"
                },
                "nullable": true
              }
            },
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "type": "string"
                },
                "nullable": true
              }
            },
            "text/json": {
              "schema": {
                "type": "array",
                "items": {
                  "type": "string"
                },
                "nullable": true
              }
            },
            "application/*+json": {
              "schema": {
                "type": "array",
                "items": {
                  "type": "string"
                },
                "nullable": true
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/services/app/UserWorkSchedules/Delete": {
      "delete": {
        "tags": [
          "UserWorkSchedules"
        ],
        "operationId": "ApiServicesAppUserworkschedulesDeleteDelete",
        "parameters": [
          {
            "name": "Id",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/services/app/UserWorkSchedules/GetUserWorkSchedulesToExcel": {
      "get": {
        "tags": [
          "UserWorkSchedules"
        ],
        "operationId": "ApiServicesAppUserworkschedulesGetuserworkschedulestoexcelGet",
        "parameters": [
          {
            "name": "Filter",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "UserNameFilter",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "WorkScheduleNameFilter",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/FileDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FileDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/FileDto"
                }
              }
            }
          }
        }
      }
    },
    "/api/services/app/UserWorkSchedules/IsInWorkSchedule": {
      "post": {
        "tags": [
          "UserWorkSchedules"
        ],
        "operationId": "ApiServicesAppUserworkschedulesIsinworkschedulePost",
        "parameters": [
          {
            "name": "userId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "workScheduleId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "boolean"
                }
              },
              "application/json": {
                "schema": {
                  "type": "boolean"
                }
              },
              "text/json": {
                "schema": {
                  "type": "boolean"
                }
              }
            }
          }
        }
      }
    },
    "/api/services/app/UserWorkSchedules/GetAllUserForLookupTable": {
      "get": {
        "tags": [
          "UserWorkSchedules"
        ],
        "operationId": "ApiServicesAppUserworkschedulesGetalluserforlookuptableGet",
        "parameters": [
          {
            "name": "Filter",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "Sorting",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "SkipCount",
            "in": "query",
            "schema": {
              "maximum": 2147483647,
              "minimum": 0,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "MaxResultCount",
            "in": "query",
            "schema": {
              "maximum": 2147483647,
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/PagedResultDtoOfUserWorkScheduleUserLookupTableDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PagedResultDtoOfUserWorkScheduleUserLookupTableDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/PagedResultDtoOfUserWorkScheduleUserLookupTableDto"
                }
              }
            }
          }
        }
      }
    },
    "/api/services/app/UserWorkSchedules/GetAllWorkScheduleForLookupTable": {
      "get": {
        "tags": [
          "UserWorkSchedules"
        ],
        "operationId": "ApiServicesAppUserworkschedulesGetallworkscheduleforlookuptableGet",
        "parameters": [
          {
            "name": "Filter",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "Sorting",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "SkipCount",
            "in": "query",
            "schema": {
              "maximum": 2147483647,
              "minimum": 0,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "MaxResultCount",
            "in": "query",
            "schema": {
              "maximum": 2147483647,
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/PagedResultDtoOfUserWorkScheduleWorkScheduleLookupTableDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PagedResultDtoOfUserWorkScheduleWorkScheduleLookupTableDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/PagedResultDtoOfUserWorkScheduleWorkScheduleLookupTableDto"
                }
              }
            }
          }
        }
      }
    },
    "/api/services/app/UserWorkSchedules/GetUserWorkHourByDate": {
      "get": {
        "tags": [
          "UserWorkSchedules"
        ],
        "operationId": "ApiServicesAppUserworkschedulesGetuserworkhourbydateGet",
        "parameters": [
          {
            "name": "userId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "requestDay",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WorkHourDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WorkHourDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WorkHourDto"
                }
              }
            }
          }
        }
      }
    },
    "/api/services/app/VacationTypes/GetAll": {
      "get": {
        "tags": [
          "VacationTypes"
        ],
        "operationId": "ApiServicesAppVacationtypesGetallGet",
        "parameters": [
          {
            "name": "Filter",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "TitleFilter",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "MaxTotalVacationHoursFilter",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32",
              "nullable": true
            }
          },
          {
            "name": "MinTotalVacationHoursFilter",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32",
              "nullable": true
            }
          },
          {
            "name": "MaxVacationHoursPerMonthFilter",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32",
              "nullable": true
            }
          },
          {
            "name": "MinVacationHoursPerMonthFilter",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32",
              "nullable": true
            }
          },
          {
            "name": "MaxVacationHoursPerDayFilter",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32",
              "nullable": true
            }
          },
          {
            "name": "MinVacationHoursPerDayFilter",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32",
              "nullable": true
            }
          },
          {
            "name": "HasLimitationVacationPerDayFilter",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32",
              "nullable": true
            }
          },
          {
            "name": "DescriptionFilter",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "Sorting",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "SkipCount",
            "in": "query",
            "schema": {
              "maximum": 2147483647,
              "minimum": 0,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "MaxResultCount",
            "in": "query",
            "schema": {
              "maximum": 2147483647,
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/PagedResultDtoOfGetVacationTypeForViewDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PagedResultDtoOfGetVacationTypeForViewDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/PagedResultDtoOfGetVacationTypeForViewDto"
                }
              }
            }
          }
        }
      }
    },
    "/api/services/app/VacationTypes/GetVacationTypeForView": {
      "get": {
        "tags": [
          "VacationTypes"
        ],
        "operationId": "ApiServicesAppVacationtypesGetvacationtypeforviewGet",
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/GetVacationTypeForViewDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetVacationTypeForViewDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetVacationTypeForViewDto"
                }
              }
            }
          }
        }
      }
    },
    "/api/services/app/VacationTypes/GetVacationTypeForEdit": {
      "get": {
        "tags": [
          "VacationTypes"
        ],
        "operationId": "ApiServicesAppVacationtypesGetvacationtypeforeditGet",
        "parameters": [
          {
            "name": "Id",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/GetVacationTypeForEditOutput"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetVacationTypeForEditOutput"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetVacationTypeForEditOutput"
                }
              }
            }
          }
        }
      }
    },
    "/api/services/app/VacationTypes/CreateOrEdit": {
      "post": {
        "tags": [
          "VacationTypes"
        ],
        "operationId": "ApiServicesAppVacationtypesCreateoreditPost",
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/CreateOrEditVacationTypeDto"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateOrEditVacationTypeDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateOrEditVacationTypeDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/CreateOrEditVacationTypeDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/services/app/VacationTypes/Delete": {
      "delete": {
        "tags": [
          "VacationTypes"
        ],
        "operationId": "ApiServicesAppVacationtypesDeleteDelete",
        "parameters": [
          {
            "name": "Id",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/services/app/VacationTypes/GetVacationTypesToExcel": {
      "get": {
        "tags": [
          "VacationTypes"
        ],
        "operationId": "ApiServicesAppVacationtypesGetvacationtypestoexcelGet",
        "parameters": [
          {
            "name": "Filter",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "TitleFilter",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "MaxTotalVacationHoursFilter",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32",
              "nullable": true
            }
          },
          {
            "name": "MinTotalVacationHoursFilter",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32",
              "nullable": true
            }
          },
          {
            "name": "MaxVacationHoursPerMonthFilter",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32",
              "nullable": true
            }
          },
          {
            "name": "MinVacationHoursPerMonthFilter",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32",
              "nullable": true
            }
          },
          {
            "name": "MaxVacationHoursPerDayFilter",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32",
              "nullable": true
            }
          },
          {
            "name": "MinVacationHoursPerDayFilter",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32",
              "nullable": true
            }
          },
          {
            "name": "HasLimitationVacationPerDayFilter",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32",
              "nullable": true
            }
          },
          {
            "name": "DescriptionFilter",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/FileDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FileDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/FileDto"
                }
              }
            }
          }
        }
      }
    },
    "/api/services/app/VacationTypes/GetAllTenantVacationTypes": {
      "get": {
        "tags": [
          "VacationTypes"
        ],
        "operationId": "ApiServicesAppVacationtypesGetalltenantvacationtypesGet",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/VacationTypeDto"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/VacationTypeDto"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/VacationTypeDto"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/services/app/WebhookEvent/Get": {
      "get": {
        "tags": [
          "WebhookEvent"
        ],
        "operationId": "ApiServicesAppWebhookeventGetGet",
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebhookEvent"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebhookEvent"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebhookEvent"
                }
              }
            }
          }
        }
      }
    },
    "/api/services/app/WebhookSendAttempt/GetAllSendAttempts": {
      "get": {
        "tags": [
          "WebhookSendAttempt"
        ],
        "operationId": "ApiServicesAppWebhooksendattemptGetallsendattemptsGet",
        "parameters": [
          {
            "name": "SubscriptionId",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "MaxResultCount",
            "in": "query",
            "schema": {
              "maximum": 1000,
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "SkipCount",
            "in": "query",
            "schema": {
              "maximum": 2147483647,
              "minimum": 0,
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/PagedResultDtoOfGetAllSendAttemptsOutput"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PagedResultDtoOfGetAllSendAttemptsOutput"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/PagedResultDtoOfGetAllSendAttemptsOutput"
                }
              }
            }
          }
        }
      }
    },
    "/api/services/app/WebhookSendAttempt/GetAllSendAttemptsOfWebhookEvent": {
      "get": {
        "tags": [
          "WebhookSendAttempt"
        ],
        "operationId": "ApiServicesAppWebhooksendattemptGetallsendattemptsofwebhookeventGet",
        "parameters": [
          {
            "name": "Id",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ListResultDtoOfGetAllSendAttemptsOfWebhookEventOutput"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ListResultDtoOfGetAllSendAttemptsOfWebhookEventOutput"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ListResultDtoOfGetAllSendAttemptsOfWebhookEventOutput"
                }
              }
            }
          }
        }
      }
    },
    "/api/services/app/WebhookSendAttempt/Resend": {
      "post": {
        "tags": [
          "WebhookSendAttempt"
        ],
        "operationId": "ApiServicesAppWebhooksendattemptResendPost",
        "parameters": [
          {
            "name": "sendAttemptId",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/services/app/WebhookSubscription/PublishTestWebhook": {
      "post": {
        "tags": [
          "WebhookSubscription"
        ],
        "operationId": "ApiServicesAppWebhooksubscriptionPublishtestwebhookPost",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                }
              },
              "application/json": {
                "schema": {
                  "type": "string"
                }
              },
              "text/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/api/services/app/WebhookSubscription/GetAllSubscriptions": {
      "get": {
        "tags": [
          "WebhookSubscription"
        ],
        "operationId": "ApiServicesAppWebhooksubscriptionGetallsubscriptionsGet",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ListResultDtoOfGetAllSubscriptionsOutput"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ListResultDtoOfGetAllSubscriptionsOutput"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ListResultDtoOfGetAllSubscriptionsOutput"
                }
              }
            }
          }
        }
      }
    },
    "/api/services/app/WebhookSubscription/GetSubscription": {
      "get": {
        "tags": [
          "WebhookSubscription"
        ],
        "operationId": "ApiServicesAppWebhooksubscriptionGetsubscriptionGet",
        "parameters": [
          {
            "name": "subscriptionId",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WebhookSubscription"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebhookSubscription"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebhookSubscription"
                }
              }
            }
          }
        }
      }
    },
    "/api/services/app/WebhookSubscription/AddSubscription": {
      "post": {
        "tags": [
          "WebhookSubscription"
        ],
        "operationId": "ApiServicesAppWebhooksubscriptionAddsubscriptionPost",
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/WebhookSubscription"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/WebhookSubscription"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/WebhookSubscription"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/WebhookSubscription"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/services/app/WebhookSubscription/UpdateSubscription": {
      "put": {
        "tags": [
          "WebhookSubscription"
        ],
        "operationId": "ApiServicesAppWebhooksubscriptionUpdatesubscriptionPut",
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/WebhookSubscription"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/WebhookSubscription"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/WebhookSubscription"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/WebhookSubscription"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/services/app/WebhookSubscription/ActivateWebhookSubscription": {
      "post": {
        "tags": [
          "WebhookSubscription"
        ],
        "operationId": "ApiServicesAppWebhooksubscriptionActivatewebhooksubscriptionPost",
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/ActivateWebhookSubscriptionInput"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ActivateWebhookSubscriptionInput"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ActivateWebhookSubscriptionInput"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ActivateWebhookSubscriptionInput"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/services/app/WebhookSubscription/IsSubscribed": {
      "post": {
        "tags": [
          "WebhookSubscription"
        ],
        "operationId": "ApiServicesAppWebhooksubscriptionIssubscribedPost",
        "parameters": [
          {
            "name": "webhookName",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "boolean"
                }
              },
              "application/json": {
                "schema": {
                  "type": "boolean"
                }
              },
              "text/json": {
                "schema": {
                  "type": "boolean"
                }
              }
            }
          }
        }
      }
    },
    "/api/services/app/WebhookSubscription/GetAllSubscriptionsIfFeaturesGranted": {
      "get": {
        "tags": [
          "WebhookSubscription"
        ],
        "operationId": "ApiServicesAppWebhooksubscriptionGetallsubscriptionsiffeaturesgrantedGet",
        "parameters": [
          {
            "name": "webhookName",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ListResultDtoOfGetAllSubscriptionsOutput"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ListResultDtoOfGetAllSubscriptionsOutput"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ListResultDtoOfGetAllSubscriptionsOutput"
                }
              }
            }
          }
        }
      }
    },
    "/api/services/app/WebhookSubscription/GetAllAvailableWebhooks": {
      "get": {
        "tags": [
          "WebhookSubscription"
        ],
        "operationId": "ApiServicesAppWebhooksubscriptionGetallavailablewebhooksGet",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ListResultDtoOfGetAllAvailableWebhooksOutput"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ListResultDtoOfGetAllAvailableWebhooksOutput"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ListResultDtoOfGetAllAvailableWebhooksOutput"
                }
              }
            }
          }
        }
      }
    },
    "/api/services/app/WebLog/GetLatestWebLogs": {
      "get": {
        "tags": [
          "WebLog"
        ],
        "operationId": "ApiServicesAppWeblogGetlatestweblogsGet",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/GetLatestWebLogsOutput"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetLatestWebLogsOutput"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetLatestWebLogsOutput"
                }
              }
            }
          }
        }
      }
    },
    "/api/services/app/WebLog/DownloadWebLogs": {
      "post": {
        "tags": [
          "WebLog"
        ],
        "operationId": "ApiServicesAppWeblogDownloadweblogsPost",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/FileDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FileDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/FileDto"
                }
              }
            }
          }
        }
      }
    },
    "/api/services/app/WorkSchedules/GetAll": {
      "get": {
        "tags": [
          "WorkSchedules"
        ],
        "operationId": "ApiServicesAppWorkschedulesGetallGet",
        "parameters": [
          {
            "name": "Filter",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "NameFilter",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "WorkModelTypeFilter",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32",
              "nullable": true
            }
          },
          {
            "name": "Sorting",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "SkipCount",
            "in": "query",
            "schema": {
              "maximum": 2147483647,
              "minimum": 0,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "MaxResultCount",
            "in": "query",
            "schema": {
              "maximum": 2147483647,
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/PagedResultDtoOfWorkScheduleDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PagedResultDtoOfWorkScheduleDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/PagedResultDtoOfWorkScheduleDto"
                }
              }
            }
          }
        }
      }
    },
    "/api/services/app/WorkSchedules/GetAllTenantWorkSchedules": {
      "get": {
        "tags": [
          "WorkSchedules"
        ],
        "operationId": "ApiServicesAppWorkschedulesGetalltenantworkschedulesGet",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/WorkScheduleDto"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/WorkScheduleDto"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/WorkScheduleDto"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/services/app/WorkSchedules/GetWorkHours": {
      "get": {
        "tags": [
          "WorkSchedules"
        ],
        "operationId": "ApiServicesAppWorkschedulesGetworkhoursGet",
        "parameters": [
          {
            "name": "workScheduleId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/WorkHourDto"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/WorkHourDto"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/WorkHourDto"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/services/app/WorkSchedules/CalculateTotalWorkHouts": {
      "post": {
        "tags": [
          "WorkSchedules"
        ],
        "operationId": "ApiServicesAppWorkschedulesCalculatetotalworkhoutsPost",
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/WorkModelType"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/WorkModelType"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/WorkModelType"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/WorkModelType"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "number",
                  "format": "double"
                }
              },
              "application/json": {
                "schema": {
                  "type": "number",
                  "format": "double"
                }
              },
              "text/json": {
                "schema": {
                  "type": "number",
                  "format": "double"
                }
              }
            }
          }
        }
      }
    },
    "/api/services/app/WorkSchedules/GetWorkScheduleForEdit": {
      "get": {
        "tags": [
          "WorkSchedules"
        ],
        "operationId": "ApiServicesAppWorkschedulesGetworkscheduleforeditGet",
        "parameters": [
          {
            "name": "Id",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/GetWorkScheduleForEditOutput"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetWorkScheduleForEditOutput"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetWorkScheduleForEditOutput"
                }
              }
            }
          }
        }
      }
    },
    "/api/services/app/WorkSchedules/CreateOrEdit": {
      "post": {
        "tags": [
          "WorkSchedules"
        ],
        "operationId": "ApiServicesAppWorkschedulesCreateoreditPost",
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/CreateOrEditWorkScheduleDto"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateOrEditWorkScheduleDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateOrEditWorkScheduleDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/CreateOrEditWorkScheduleDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "integer",
                  "format": "int64"
                }
              },
              "application/json": {
                "schema": {
                  "type": "integer",
                  "format": "int64"
                }
              },
              "text/json": {
                "schema": {
                  "type": "integer",
                  "format": "int64"
                }
              }
            }
          }
        }
      }
    },
    "/api/services/app/WorkSchedules/Delete": {
      "delete": {
        "tags": [
          "WorkSchedules"
        ],
        "operationId": "ApiServicesAppWorkschedulesDeleteDelete",
        "parameters": [
          {
            "name": "Id",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/services/app/WorkSchedules/GetCurrentUserWorkHours": {
      "get": {
        "tags": [
          "WorkSchedules"
        ],
        "operationId": "ApiServicesAppWorkschedulesGetcurrentuserworkhoursGet",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/GetUserWorkScheduleForViewDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetUserWorkScheduleForViewDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetUserWorkScheduleForViewDto"
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "IsTenantAvailableInput": {
        "required": [
          "tenancyName"
        ],
        "type": "object",
        "properties": {
          "tenancyName": {
            "maxLength": 64,
            "type": "string"
          }
        },
        "additionalProperties": false
      },
      "TenantAvailabilityState": {
        "enum": [
          1,
          2,
          3
        ],
        "type": "integer",
        "format": "int32",
        "x-enumNames": [
          "Available",
          "InActive",
          "NotFound"
        ]
      },
      "IsTenantAvailableOutput": {
        "type": "object",
        "properties": {
          "state": {
            "$ref": "#/components/schemas/TenantAvailabilityState"
          },
          "tenantId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "serverRootAddress": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ResolveTenantIdInput": {
        "type": "object",
        "properties": {
          "c": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "GenderType": {
        "enum": [
          0,
          1
        ],
        "type": "integer",
        "format": "int32",
        "x-enumNames": [
          "Female",
          "Male"
        ]
      },
      "DegreeType": {
        "enum": [
          0,
          1,
          2,
          3,
          4,
          5,
          6,
          7,
          8
        ],
        "type": "integer",
        "format": "int32",
        "x-enumNames": [
          "Uknown",
          "Unlettered",
          "UnderDiploma",
          "Diploma",
          "AfterDiploma",
          "Bachelor",
          "Master",
          "PhD",
          "PostPhD"
        ]
      },
      "IntroduceType": {
        "enum": [
          1,
          2,
          3,
          4,
          5
        ],
        "type": "integer",
        "format": "int32",
        "x-enumNames": [
          "Ding",
          "SearchEngines",
          "Websites",
          "Friends",
          "Others"
        ]
      },
      "RegisterInput": {
        "required": [
          "emailAddress",
          "name",
          "nationalCode",
          "password",
          "surname",
          "userName"
        ],
        "type": "object",
        "properties": {
          "name": {
            "maxLength": 64,
            "minLength": 0,
            "type": "string"
          },
          "surname": {
            "maxLength": 64,
            "minLength": 0,
            "type": "string"
          },
          "userName": {
            "maxLength": 256,
            "minLength": 0,
            "type": "string"
          },
          "emailAddress": {
            "maxLength": 256,
            "minLength": 0,
            "type": "string",
            "format": "email"
          },
          "phoneNumber": {
            "maxLength": 50,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "password": {
            "maxLength": 32,
            "minLength": 0,
            "type": "string"
          },
          "captchaResponse": {
            "type": "string",
            "nullable": true
          },
          "smsVerification": {
            "type": "string",
            "nullable": true
          },
          "code": {
            "type": "string",
            "nullable": true
          },
          "genderType": {
            "$ref": "#/components/schemas/GenderType"
          },
          "nickName": {
            "type": "string",
            "nullable": true
          },
          "birthdate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "bankAccount": {
            "type": "string",
            "nullable": true
          },
          "regionId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "address": {
            "type": "string",
            "nullable": true
          },
          "homePhoneNumber": {
            "type": "string",
            "nullable": true
          },
          "workPhoneNumber": {
            "type": "string",
            "nullable": true
          },
          "postalCode": {
            "type": "string",
            "nullable": true
          },
          "birthCertificateNumber": {
            "type": "string",
            "nullable": true
          },
          "nationalCode": {
            "type": "string"
          },
          "degreeType": {
            "$ref": "#/components/schemas/DegreeType"
          },
          "occupation": {
            "type": "string",
            "nullable": true
          },
          "jobTitle": {
            "type": "string",
            "nullable": true
          },
          "introduceType": {
            "$ref": "#/components/schemas/IntroduceType"
          },
          "credit": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "balance": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "fundRange": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "remainQuestionCount": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "accessDaysCount": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "RegisterOutput": {
        "type": "object",
        "properties": {
          "canLogin": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "SendPasswordResetCodeInput": {
        "required": [
          "emailAddress"
        ],
        "type": "object",
        "properties": {
          "emailAddress": {
            "maxLength": 256,
            "type": "string"
          }
        },
        "additionalProperties": false
      },
      "ResetPasswordInput": {
        "type": "object",
        "properties": {
          "userId": {
            "type": "integer",
            "format": "int64"
          },
          "resetCode": {
            "type": "string",
            "nullable": true
          },
          "password": {
            "type": "string",
            "nullable": true
          },
          "returnUrl": {
            "type": "string",
            "nullable": true
          },
          "singleSignIn": {
            "type": "string",
            "nullable": true
          },
          "c": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ResetPasswordOutput": {
        "type": "object",
        "properties": {
          "canLogin": {
            "type": "boolean"
          },
          "userName": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "SendEmailActivationLinkInput": {
        "required": [
          "emailAddress"
        ],
        "type": "object",
        "properties": {
          "emailAddress": {
            "type": "string"
          }
        },
        "additionalProperties": false
      },
      "ActivateEmailInput": {
        "type": "object",
        "properties": {
          "userId": {
            "type": "integer",
            "format": "int64"
          },
          "confirmationCode": {
            "type": "string",
            "nullable": true
          },
          "c": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ImpersonateInput": {
        "type": "object",
        "properties": {
          "tenantId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "userId": {
            "minimum": 1,
            "type": "integer",
            "format": "int64"
          }
        },
        "additionalProperties": false
      },
      "ImpersonateOutput": {
        "type": "object",
        "properties": {
          "impersonationToken": {
            "type": "string",
            "nullable": true
          },
          "tenancyName": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "DelegatedImpersonateInput": {
        "type": "object",
        "properties": {
          "userDelegationId": {
            "type": "integer",
            "format": "int64"
          }
        },
        "additionalProperties": false
      },
      "SwitchToLinkedAccountInput": {
        "type": "object",
        "properties": {
          "targetTenantId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "targetUserId": {
            "minimum": 1,
            "type": "integer",
            "format": "int64"
          }
        },
        "additionalProperties": false
      },
      "SwitchToLinkedAccountOutput": {
        "type": "object",
        "properties": {
          "switchAccountToken": {
            "type": "string",
            "nullable": true
          },
          "tenancyName": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "SendVerificationSmsInputDto": {
        "type": "object",
        "properties": {
          "phoneNumber": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "VerifySmsCodeInputDto": {
        "type": "object",
        "properties": {
          "code": {
            "type": "string",
            "nullable": true
          },
          "phoneNumber": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "UserEditDto": {
        "required": [
          "emailAddress",
          "name",
          "surname",
          "userName"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "name": {
            "maxLength": 64,
            "minLength": 0,
            "type": "string"
          },
          "surname": {
            "maxLength": 64,
            "minLength": 0,
            "type": "string"
          },
          "userName": {
            "maxLength": 256,
            "minLength": 0,
            "type": "string"
          },
          "emailAddress": {
            "maxLength": 256,
            "minLength": 0,
            "type": "string",
            "format": "email"
          },
          "phoneNumber": {
            "maxLength": 50,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "password": {
            "maxLength": 32,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "isActive": {
            "type": "boolean"
          },
          "shouldChangePasswordOnNextLogin": {
            "type": "boolean"
          },
          "isTwoFactorEnabled": {
            "type": "boolean"
          },
          "isLockoutEnabled": {
            "type": "boolean"
          },
          "genderType": {
            "$ref": "#/components/schemas/GenderType"
          },
          "birthdate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "bankAccount": {
            "type": "string",
            "nullable": true
          },
          "countryId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "stateId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "cityId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "address": {
            "type": "string",
            "nullable": true
          },
          "homePhoneNumber": {
            "type": "string",
            "nullable": true
          },
          "workPhoneNumber": {
            "type": "string",
            "nullable": true
          },
          "postalCode": {
            "type": "string",
            "nullable": true
          },
          "birthCertificateNumber": {
            "type": "string",
            "nullable": true
          },
          "nationalCode": {
            "type": "string",
            "nullable": true
          },
          "degreeType": {
            "$ref": "#/components/schemas/DegreeType"
          },
          "occupation": {
            "type": "string",
            "nullable": true
          },
          "jobTitle": {
            "type": "string",
            "nullable": true
          },
          "introduceType": {
            "$ref": "#/components/schemas/IntroduceType"
          },
          "vacationTypeId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "AuditLogListDto": {
        "type": "object",
        "properties": {
          "userId": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "userName": {
            "type": "string",
            "nullable": true
          },
          "impersonatorTenantId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "impersonatorUserId": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "serviceName": {
            "type": "string",
            "nullable": true
          },
          "methodName": {
            "type": "string",
            "nullable": true
          },
          "parameters": {
            "type": "string",
            "nullable": true
          },
          "executionTime": {
            "type": "string",
            "format": "date-time"
          },
          "executionDuration": {
            "type": "integer",
            "format": "int32"
          },
          "clientIpAddress": {
            "type": "string",
            "nullable": true
          },
          "clientName": {
            "type": "string",
            "nullable": true
          },
          "browserInfo": {
            "type": "string",
            "nullable": true
          },
          "exception": {
            "type": "string",
            "nullable": true
          },
          "customData": {
            "type": "string",
            "nullable": true
          },
          "id": {
            "type": "integer",
            "format": "int64"
          }
        },
        "additionalProperties": false
      },
      "PagedResultDtoOfAuditLogListDto": {
        "type": "object",
        "properties": {
          "totalCount": {
            "type": "integer",
            "format": "int32"
          },
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AuditLogListDto"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "FileDto": {
        "required": [
          "fileName",
          "fileToken"
        ],
        "type": "object",
        "properties": {
          "fileName": {
            "type": "string"
          },
          "fileType": {
            "type": "string",
            "nullable": true
          },
          "fileToken": {
            "type": "string"
          }
        },
        "additionalProperties": false
      },
      "NameValueDto": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "nullable": true
          },
          "value": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "EntityChangeType": {
        "enum": [
          0,
          1,
          2
        ],
        "type": "integer",
        "format": "int32",
        "x-enumNames": [
          "Created",
          "Updated",
          "Deleted"
        ]
      },
      "EntityChangeListDto": {
        "type": "object",
        "properties": {
          "userId": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "userName": {
            "type": "string",
            "nullable": true
          },
          "changeTime": {
            "type": "string",
            "format": "date-time"
          },
          "entityTypeFullName": {
            "type": "string",
            "nullable": true
          },
          "changeType": {
            "$ref": "#/components/schemas/EntityChangeType"
          },
          "changeTypeName": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "entityChangeSetId": {
            "type": "integer",
            "format": "int64"
          },
          "id": {
            "type": "integer",
            "format": "int64"
          }
        },
        "additionalProperties": false
      },
      "PagedResultDtoOfEntityChangeListDto": {
        "type": "object",
        "properties": {
          "totalCount": {
            "type": "integer",
            "format": "int32"
          },
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/EntityChangeListDto"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "EntityPropertyChangeDto": {
        "type": "object",
        "properties": {
          "entityChangeId": {
            "type": "integer",
            "format": "int64"
          },
          "newValue": {
            "type": "string",
            "nullable": true
          },
          "originalValue": {
            "type": "string",
            "nullable": true
          },
          "propertyName": {
            "type": "string",
            "nullable": true
          },
          "propertyTypeFullName": {
            "type": "string",
            "nullable": true
          },
          "tenantId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "id": {
            "type": "integer",
            "format": "int64"
          }
        },
        "additionalProperties": false
      },
      "CacheDto": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ListResultDtoOfCacheDto": {
        "type": "object",
        "properties": {
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CacheDto"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "EntityDtoOfString": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "EventType": {
        "enum": [
          1,
          2
        ],
        "type": "integer",
        "format": "int32",
        "x-enumNames": [
          "Holiday",
          "Event"
        ]
      },
      "CalendarDto": {
        "type": "object",
        "properties": {
          "year": {
            "type": "integer",
            "format": "int32"
          },
          "month": {
            "type": "string",
            "nullable": true
          },
          "day": {
            "type": "string",
            "nullable": true
          },
          "culture": {
            "type": "string",
            "nullable": true
          },
          "eventName": {
            "type": "string",
            "nullable": true
          },
          "eventDate": {
            "type": "string",
            "format": "date-time"
          },
          "eventType": {
            "$ref": "#/components/schemas/EventType"
          },
          "id": {
            "type": "integer",
            "format": "int64"
          }
        },
        "additionalProperties": false
      },
      "GetCalendarForViewDto": {
        "type": "object",
        "properties": {
          "calendar": {
            "$ref": "#/components/schemas/CalendarDto"
          }
        },
        "additionalProperties": false
      },
      "ListResultDtoOfGetCalendarForViewDto": {
        "type": "object",
        "properties": {
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/GetCalendarForViewDto"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "CreateOrEditCalendarDto": {
        "required": [
          "eventName"
        ],
        "type": "object",
        "properties": {
          "year": {
            "maximum": 2500,
            "minimum": 1300,
            "type": "integer",
            "format": "int32"
          },
          "month": {
            "maximum": 1,
            "minimum": 12,
            "type": "string",
            "nullable": true
          },
          "day": {
            "maximum": 1,
            "minimum": 31,
            "type": "string",
            "nullable": true
          },
          "culture": {
            "type": "string",
            "nullable": true
          },
          "eventName": {
            "type": "string"
          },
          "eventDate": {
            "type": "string",
            "format": "date-time"
          },
          "eventType": {
            "$ref": "#/components/schemas/EventType"
          },
          "id": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "GetCalendarForEditOutput": {
        "type": "object",
        "properties": {
          "calendar": {
            "$ref": "#/components/schemas/CreateOrEditCalendarDto"
          }
        },
        "additionalProperties": false
      },
      "CategoryType": {
        "enum": [
          1
        ],
        "type": "integer",
        "format": "int32",
        "x-enumNames": [
          "BusinessType"
        ]
      },
      "CategoryDto": {
        "type": "object",
        "properties": {
          "categoryType": {
            "$ref": "#/components/schemas/CategoryType"
          },
          "parentId": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "code": {
            "type": "string",
            "nullable": true
          },
          "displayName": {
            "type": "string",
            "nullable": true
          },
          "memberCount": {
            "type": "integer",
            "format": "int32"
          },
          "roleCount": {
            "type": "integer",
            "format": "int32"
          },
          "lastModificationTime": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "lastModifierUserId": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "creationTime": {
            "type": "string",
            "format": "date-time"
          },
          "creatorUserId": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "id": {
            "type": "integer",
            "format": "int64"
          }
        },
        "additionalProperties": false
      },
      "ListResultDtoOfCategoryDto": {
        "type": "object",
        "properties": {
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CategoryDto"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "#/definitions/CategoryType": {
        "$ref": "#/components/schemas/CategoryType"
      },
      "CategoryUserListDto": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "nullable": true
          },
          "surname": {
            "type": "string",
            "nullable": true
          },
          "userName": {
            "type": "string",
            "nullable": true
          },
          "emailAddress": {
            "type": "string",
            "nullable": true
          },
          "profilePictureId": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "addedTime": {
            "type": "string",
            "format": "date-time"
          },
          "id": {
            "type": "integer",
            "format": "int64"
          }
        },
        "additionalProperties": false
      },
      "PagedResultDtoOfCategoryUserListDto": {
        "type": "object",
        "properties": {
          "totalCount": {
            "type": "integer",
            "format": "int32"
          },
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CategoryUserListDto"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "CategoryRoleListDto": {
        "type": "object",
        "properties": {
          "displayName": {
            "type": "string",
            "nullable": true
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "addedTime": {
            "type": "string",
            "format": "date-time"
          },
          "id": {
            "type": "integer",
            "format": "int64"
          }
        },
        "additionalProperties": false
      },
      "PagedResultDtoOfCategoryRoleListDto": {
        "type": "object",
        "properties": {
          "totalCount": {
            "type": "integer",
            "format": "int32"
          },
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CategoryRoleListDto"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "CreateOrEditCategoryDto": {
        "required": [
          "categoryType",
          "displayName"
        ],
        "type": "object",
        "properties": {
          "categoryType": {
            "$ref": "#/components/schemas/CategoryType"
          },
          "parentId": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "displayName": {
            "maxLength": 128,
            "minLength": 0,
            "type": "string"
          },
          "id": {
            "type": "integer",
            "format": "int64"
          }
        },
        "additionalProperties": false
      },
      "MoveCategoryInput": {
        "type": "object",
        "properties": {
          "id": {
            "minimum": 1,
            "type": "integer",
            "format": "int64"
          },
          "categoryType": {
            "$ref": "#/components/schemas/CategoryType"
          },
          "newParentId": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "UsersToCategoryInput": {
        "type": "object",
        "properties": {
          "userIds": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int64"
            },
            "nullable": true
          },
          "categoryId": {
            "minimum": 1,
            "type": "integer",
            "format": "int64"
          }
        },
        "additionalProperties": false
      },
      "RolesToCategoryInput": {
        "type": "object",
        "properties": {
          "roleIds": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int32"
            },
            "nullable": true
          },
          "categoryId": {
            "minimum": 1,
            "type": "integer",
            "format": "int64"
          }
        },
        "additionalProperties": false
      },
      "FindCategoryUsersInput": {
        "type": "object",
        "properties": {
          "categoryId": {
            "type": "integer",
            "format": "int64"
          },
          "maxResultCount": {
            "maximum": 1000,
            "minimum": 1,
            "type": "integer",
            "format": "int32"
          },
          "skipCount": {
            "maximum": 2147483647,
            "minimum": 0,
            "type": "integer",
            "format": "int32"
          },
          "filter": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "PagedResultDtoOfNameValueDto": {
        "type": "object",
        "properties": {
          "totalCount": {
            "type": "integer",
            "format": "int32"
          },
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/NameValueDto"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "FindCategoryRolesInput": {
        "type": "object",
        "properties": {
          "categoryId": {
            "type": "integer",
            "format": "int64"
          },
          "maxResultCount": {
            "maximum": 1000,
            "minimum": 1,
            "type": "integer",
            "format": "int32"
          },
          "skipCount": {
            "maximum": 2147483647,
            "minimum": 0,
            "type": "integer",
            "format": "int32"
          },
          "filter": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "FriendshipState": {
        "enum": [
          1,
          2
        ],
        "type": "integer",
        "format": "int32",
        "x-enumNames": [
          "Accepted",
          "Blocked"
        ]
      },
      "FriendDto": {
        "type": "object",
        "properties": {
          "friendUserId": {
            "type": "integer",
            "format": "int64"
          },
          "friendTenantId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "friendUserName": {
            "type": "string",
            "nullable": true
          },
          "friendTenancyName": {
            "type": "string",
            "nullable": true
          },
          "friendProfilePictureId": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "unreadMessageCount": {
            "type": "integer",
            "format": "int32"
          },
          "isOnline": {
            "type": "boolean"
          },
          "state": {
            "$ref": "#/components/schemas/FriendshipState"
          }
        },
        "additionalProperties": false
      },
      "GetUserChatFriendsWithSettingsOutput": {
        "type": "object",
        "properties": {
          "serverTime": {
            "type": "string",
            "format": "date-time"
          },
          "friends": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/FriendDto"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ChatSide": {
        "enum": [
          1,
          2
        ],
        "type": "integer",
        "format": "int32",
        "x-enumNames": [
          "Sender",
          "Receiver"
        ]
      },
      "ChatMessageReadState": {
        "enum": [
          1,
          2
        ],
        "type": "integer",
        "format": "int32",
        "x-enumNames": [
          "Unread",
          "Read"
        ]
      },
      "ChatMessageDto": {
        "type": "object",
        "properties": {
          "userId": {
            "type": "integer",
            "format": "int64"
          },
          "tenantId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "targetUserId": {
            "type": "integer",
            "format": "int64"
          },
          "targetTenantId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "side": {
            "$ref": "#/components/schemas/ChatSide"
          },
          "readState": {
            "$ref": "#/components/schemas/ChatMessageReadState"
          },
          "receiverReadState": {
            "$ref": "#/components/schemas/ChatMessageReadState"
          },
          "message": {
            "type": "string",
            "nullable": true
          },
          "creationTime": {
            "type": "string",
            "format": "date-time"
          },
          "sharedMessageId": {
            "type": "string",
            "nullable": true
          },
          "id": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "ListResultDtoOfChatMessageDto": {
        "type": "object",
        "properties": {
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ChatMessageDto"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "MarkAllUnreadMessagesOfUserAsReadInput": {
        "type": "object",
        "properties": {
          "tenantId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "userId": {
            "type": "integer",
            "format": "int64"
          }
        },
        "additionalProperties": false
      },
      "CityDto": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "nullable": true
          },
          "stateCode": {
            "type": "string",
            "nullable": true
          },
          "countryCode": {
            "type": "string",
            "nullable": true
          },
          "latitude": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "longitude": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "stateId": {
            "type": "integer",
            "format": "int32"
          },
          "countryId": {
            "type": "integer",
            "format": "int32"
          },
          "id": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "GetCityForViewDto": {
        "type": "object",
        "properties": {
          "city": {
            "$ref": "#/components/schemas/CityDto"
          },
          "stateName": {
            "type": "string",
            "nullable": true
          },
          "countryName": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "PagedResultDtoOfGetCityForViewDto": {
        "type": "object",
        "properties": {
          "totalCount": {
            "type": "integer",
            "format": "int32"
          },
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/GetCityForViewDto"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ListResultDtoOfGetCityForViewDto": {
        "type": "object",
        "properties": {
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/GetCityForViewDto"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "CreateOrEditCityDto": {
        "required": [
          "name"
        ],
        "type": "object",
        "properties": {
          "name": {
            "maxLength": 256,
            "minLength": 1,
            "type": "string"
          },
          "stateCode": {
            "maxLength": 50,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "countryCode": {
            "maxLength": 50,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "latitude": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "longitude": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "stateId": {
            "type": "integer",
            "format": "int32"
          },
          "countryId": {
            "type": "integer",
            "format": "int32"
          },
          "id": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "GetCityForEditOutput": {
        "type": "object",
        "properties": {
          "city": {
            "$ref": "#/components/schemas/CreateOrEditCityDto"
          },
          "stateName": {
            "type": "string",
            "nullable": true
          },
          "countryName": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "CityStateLookupTableDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "displayName": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "PagedResultDtoOfCityStateLookupTableDto": {
        "type": "object",
        "properties": {
          "totalCount": {
            "type": "integer",
            "format": "int32"
          },
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CityStateLookupTableDto"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "CityCountryLookupTableDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "displayName": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "PagedResultDtoOfCityCountryLookupTableDto": {
        "type": "object",
        "properties": {
          "totalCount": {
            "type": "integer",
            "format": "int32"
          },
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CityCountryLookupTableDto"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "SubscribableEditionComboboxItemDto": {
        "type": "object",
        "properties": {
          "value": {
            "type": "string",
            "nullable": true
          },
          "displayText": {
            "type": "string",
            "nullable": true
          },
          "isSelected": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "ListResultDtoOfSubscribableEditionComboboxItemDto": {
        "type": "object",
        "properties": {
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SubscribableEditionComboboxItemDto"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "FindUsersInput": {
        "type": "object",
        "properties": {
          "tenantId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "excludeCurrentUser": {
            "type": "boolean"
          },
          "maxResultCount": {
            "maximum": 1000,
            "minimum": 1,
            "type": "integer",
            "format": "int32"
          },
          "skipCount": {
            "maximum": 2147483647,
            "minimum": 0,
            "type": "integer",
            "format": "int32"
          },
          "filter": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "GetDefaultEditionNameOutput": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "CountryDto": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "nullable": true
          },
          "isO3": {
            "type": "string",
            "nullable": true
          },
          "capital": {
            "type": "string",
            "nullable": true
          },
          "currency": {
            "type": "string",
            "nullable": true
          },
          "region": {
            "type": "string",
            "nullable": true
          },
          "id": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "GetCountryForViewDto": {
        "type": "object",
        "properties": {
          "country": {
            "$ref": "#/components/schemas/CountryDto"
          }
        },
        "additionalProperties": false
      },
      "PagedResultDtoOfGetCountryForViewDto": {
        "type": "object",
        "properties": {
          "totalCount": {
            "type": "integer",
            "format": "int32"
          },
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/GetCountryForViewDto"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ListResultDtoOfGetCountryForViewDto": {
        "type": "object",
        "properties": {
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/GetCountryForViewDto"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "CreateOrEditCountryDto": {
        "required": [
          "name"
        ],
        "type": "object",
        "properties": {
          "name": {
            "maxLength": 128,
            "minLength": 1,
            "type": "string"
          },
          "isO3": {
            "maxLength": 5,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "isO2": {
            "maxLength": 5,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "phoneCode": {
            "maxLength": 16,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "capital": {
            "maxLength": 50,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "currency": {
            "maxLength": 5,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "nativeName": {
            "maxLength": 100,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "region": {
            "maxLength": 50,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "subregion": {
            "maxLength": 50,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "timezones": {
            "type": "string",
            "nullable": true
          },
          "emoji": {
            "maxLength": 50,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "emojiUnicode": {
            "maxLength": 50,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "id": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "GetCountryForEditOutput": {
        "type": "object",
        "properties": {
          "country": {
            "$ref": "#/components/schemas/CreateOrEditCountryDto"
          }
        },
        "additionalProperties": false
      },
      "Widget": {
        "type": "object",
        "properties": {
          "widgetId": {
            "type": "string",
            "nullable": true
          },
          "height": {
            "type": "integer",
            "format": "int32"
          },
          "width": {
            "type": "integer",
            "format": "int32"
          },
          "positionX": {
            "type": "integer",
            "format": "int32"
          },
          "positionY": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "Page": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "nullable": true
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "widgets": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Widget"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Dashboard": {
        "type": "object",
        "properties": {
          "dashboardName": {
            "type": "string",
            "nullable": true
          },
          "pages": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Page"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "SavePageInput": {
        "type": "object",
        "properties": {
          "dashboardName": {
            "type": "string",
            "nullable": true
          },
          "application": {
            "type": "string",
            "nullable": true
          },
          "pages": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Page"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "RenamePageInput": {
        "type": "object",
        "properties": {
          "dashboardName": {
            "type": "string",
            "nullable": true
          },
          "id": {
            "type": "string",
            "nullable": true
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "application": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "AddNewPageInput": {
        "type": "object",
        "properties": {
          "dashboardName": {
            "type": "string",
            "nullable": true
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "application": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "AddNewPageOutput": {
        "type": "object",
        "properties": {
          "pageId": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "AddWidgetInput": {
        "type": "object",
        "properties": {
          "widgetId": {
            "type": "string",
            "nullable": true
          },
          "pageId": {
            "type": "string",
            "nullable": true
          },
          "dashboardName": {
            "type": "string",
            "nullable": true
          },
          "width": {
            "type": "integer",
            "format": "int32"
          },
          "height": {
            "type": "integer",
            "format": "int32"
          },
          "application": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "WidgetFilterOutput": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "nullable": true
          },
          "name": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "WidgetOutput": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "nullable": true
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "filters": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/WidgetFilterOutput"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "DashboardOutput": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "nullable": true
          },
          "widgets": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/WidgetOutput"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "DateToStringOutput": {
        "type": "object",
        "properties": {
          "dateString": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "NameValueOfString": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "nullable": true
          },
          "value": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "StringOutput": {
        "type": "object",
        "properties": {
          "output": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "UserClockInOutType": {
        "enum": [
          1,
          2,
          3,
          4
        ],
        "type": "integer",
        "format": "int32",
        "x-enumNames": [
          "In",
          "Out",
          "BreakStart",
          "BreakEnd"
        ]
      },
      "DetailedUserClockInOutDto": {
        "type": "object",
        "properties": {
          "clock": {
            "type": "string",
            "format": "date-time"
          },
          "clockString": {
            "type": "string",
            "nullable": true
          },
          "clockInOutType": {
            "$ref": "#/components/schemas/UserClockInOutType"
          }
        },
        "additionalProperties": false
      },
      "SummaryEmployeeReportDto": {
        "type": "object",
        "properties": {
          "shiftLength": {
            "type": "string",
            "nullable": true
          },
          "totalAttendance": {
            "type": "string",
            "nullable": true
          },
          "totalOvertime": {
            "type": "string",
            "nullable": true
          },
          "totalHolidayWorks": {
            "type": "string",
            "nullable": true
          },
          "totalDelay": {
            "type": "string",
            "nullable": true
          },
          "totalHurry": {
            "type": "string",
            "nullable": true
          },
          "totalLeave": {
            "type": "string",
            "nullable": true
          },
          "totalAbsence": {
            "type": "string",
            "nullable": true
          },
          "totalMission": {
            "type": "string",
            "nullable": true
          },
          "daysOfLeave": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "daysOfMission": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "daysOfAttendance": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "userId": {
            "type": "integer",
            "format": "int64"
          },
          "workScheduleId": {
            "type": "integer",
            "format": "int64"
          }
        },
        "additionalProperties": false
      },
      "GetDetailedEmployeeReportForViewDto": {
        "type": "object",
        "properties": {
          "reportDate": {
            "type": "string",
            "nullable": true
          },
          "reportWeekDay": {
            "type": "string",
            "nullable": true
          },
          "userClockInOutList": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DetailedUserClockInOutDto"
            },
            "nullable": true
          },
          "employeeReport": {
            "$ref": "#/components/schemas/SummaryEmployeeReportDto"
          }
        },
        "additionalProperties": false
      },
      "DeviceStatus": {
        "enum": [
          1,
          2,
          3,
          4,
          5
        ],
        "type": "integer",
        "format": "int32",
        "x-enumNames": [
          "Available",
          "Assigned",
          "Active",
          "Suspended",
          "Deacvtived"
        ]
      },
      "DeviceDto": {
        "type": "object",
        "properties": {
          "serialNumber": {
            "type": "string",
            "nullable": true
          },
          "qrCode": {
            "type": "string",
            "nullable": true
          },
          "deviceType": {
            "type": "integer",
            "format": "int32"
          },
          "deviceStatus": {
            "$ref": "#/components/schemas/DeviceStatus"
          },
          "id": {
            "type": "integer",
            "format": "int64"
          }
        },
        "additionalProperties": false
      },
      "GetDeviceForViewDto": {
        "type": "object",
        "properties": {
          "device": {
            "$ref": "#/components/schemas/DeviceDto"
          },
          "deviceName": {
            "type": "string",
            "nullable": true
          },
          "deviceTypeTitle": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "PagedResultDtoOfGetDeviceForViewDto": {
        "type": "object",
        "properties": {
          "totalCount": {
            "type": "integer",
            "format": "int32"
          },
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/GetDeviceForViewDto"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "GetDeviceSerialDto": {
        "type": "object",
        "properties": {
          "encryptedSerialNumber": {
            "type": "string",
            "nullable": true
          },
          "encryptedManagerMobileNumber": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "GetDeviceDetailForRegistrationDto": {
        "type": "object",
        "properties": {
          "device": {
            "$ref": "#/components/schemas/DeviceDto"
          },
          "deviceName": {
            "type": "string",
            "nullable": true
          },
          "deviceQRCode": {
            "type": "string",
            "nullable": true
          },
          "deviceTypeName": {
            "type": "string",
            "nullable": true
          },
          "editionId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "editionDisplayName": {
            "type": "string",
            "nullable": true
          },
          "price": {
            "type": "number",
            "format": "double"
          },
          "dayCount": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "CreateOrEditDeviceDto": {
        "required": [
          "bssId",
          "qrCode",
          "serialNumber",
          "uuId"
        ],
        "type": "object",
        "properties": {
          "serialNumber": {
            "maxLength": 50,
            "minLength": 1,
            "type": "string"
          },
          "qrCode": {
            "maxLength": 50,
            "minLength": 1,
            "type": "string"
          },
          "password": {
            "maxLength": 128,
            "minLength": 1,
            "type": "string",
            "nullable": true
          },
          "bssId": {
            "maxLength": 50,
            "minLength": 1,
            "type": "string"
          },
          "ssId": {
            "maxLength": 50,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "uuId": {
            "maxLength": 128,
            "minLength": 1,
            "type": "string"
          },
          "major": {
            "maxLength": 50,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "minor": {
            "maxLength": 50,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "name": {
            "maxLength": 50,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "deviceType": {
            "type": "integer",
            "format": "int32"
          },
          "deviceStatus": {
            "$ref": "#/components/schemas/DeviceStatus"
          },
          "id": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "GetDeviceForEditOutput": {
        "type": "object",
        "properties": {
          "device": {
            "$ref": "#/components/schemas/CreateOrEditDeviceDto"
          },
          "deviceTypeTitle": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "EditMyDeviceDto": {
        "type": "object",
        "properties": {
          "name": {
            "maxLength": 50,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "id": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "DeviceDeviceTypeLookupTableDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "displayName": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "PagedResultDtoOfDeviceDeviceTypeLookupTableDto": {
        "type": "object",
        "properties": {
          "totalCount": {
            "type": "integer",
            "format": "int32"
          },
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DeviceDeviceTypeLookupTableDto"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "DeviceTypeDto": {
        "type": "object",
        "properties": {
          "title": {
            "type": "string",
            "nullable": true
          },
          "id": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "GetDeviceTypeForViewDto": {
        "type": "object",
        "properties": {
          "deviceType": {
            "$ref": "#/components/schemas/DeviceTypeDto"
          }
        },
        "additionalProperties": false
      },
      "PagedResultDtoOfGetDeviceTypeForViewDto": {
        "type": "object",
        "properties": {
          "totalCount": {
            "type": "integer",
            "format": "int32"
          },
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/GetDeviceTypeForViewDto"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "CreateOrEditDeviceTypeDto": {
        "required": [
          "title"
        ],
        "type": "object",
        "properties": {
          "title": {
            "maxLength": 1024,
            "minLength": 1,
            "type": "string"
          },
          "id": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "GetDeviceTypeForEditOutput": {
        "type": "object",
        "properties": {
          "deviceType": {
            "$ref": "#/components/schemas/CreateOrEditDeviceTypeDto"
          }
        },
        "additionalProperties": false
      },
      "DynamicEntityPropertyDto": {
        "type": "object",
        "properties": {
          "entityFullName": {
            "type": "string",
            "nullable": true
          },
          "dynamicPropertyName": {
            "type": "string",
            "nullable": true
          },
          "dynamicPropertyId": {
            "type": "integer",
            "format": "int32"
          },
          "tenantId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "id": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "ListResultDtoOfDynamicEntityPropertyDto": {
        "type": "object",
        "properties": {
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DynamicEntityPropertyDto"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "GetAllEntitiesHasDynamicPropertyOutput": {
        "type": "object",
        "properties": {
          "entityFullName": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ListResultDtoOfGetAllEntitiesHasDynamicPropertyOutput": {
        "type": "object",
        "properties": {
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/GetAllEntitiesHasDynamicPropertyOutput"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "DynamicEntityPropertyValueDto": {
        "type": "object",
        "properties": {
          "value": {
            "type": "string",
            "nullable": true
          },
          "entityId": {
            "type": "string",
            "nullable": true
          },
          "dynamicEntityPropertyId": {
            "type": "integer",
            "format": "int32"
          },
          "id": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "ListResultDtoOfDynamicEntityPropertyValueDto": {
        "type": "object",
        "properties": {
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DynamicEntityPropertyValueDto"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "IValueValidator": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "attributes": {
            "type": "object",
            "additionalProperties": { },
            "nullable": true,
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "IInputType": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "attributes": {
            "type": "object",
            "additionalProperties": { },
            "nullable": true,
            "readOnly": true
          },
          "validator": {
            "$ref": "#/components/schemas/IValueValidator"
          }
        },
        "additionalProperties": false
      },
      "GetAllDynamicEntityPropertyValuesOutputItem": {
        "type": "object",
        "properties": {
          "dynamicEntityPropertyId": {
            "type": "integer",
            "format": "int32"
          },
          "propertyName": {
            "type": "string",
            "nullable": true
          },
          "inputType": {
            "$ref": "#/components/schemas/IInputType"
          },
          "selectedValues": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          },
          "allValuesInputTypeHas": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "GetAllDynamicEntityPropertyValuesOutput": {
        "type": "object",
        "properties": {
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/GetAllDynamicEntityPropertyValuesOutputItem"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "InsertOrUpdateAllValuesInputItem": {
        "type": "object",
        "properties": {
          "entityId": {
            "type": "string",
            "nullable": true
          },
          "dynamicEntityPropertyId": {
            "type": "integer",
            "format": "int32"
          },
          "values": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "InsertOrUpdateAllValuesInput": {
        "type": "object",
        "properties": {
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/InsertOrUpdateAllValuesInputItem"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "CleanValuesInput": {
        "type": "object",
        "properties": {
          "dynamicEntityPropertyId": {
            "type": "integer",
            "format": "int32"
          },
          "entityId": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "DynamicPropertyDto": {
        "type": "object",
        "properties": {
          "propertyName": {
            "type": "string",
            "nullable": true
          },
          "displayName": {
            "type": "string",
            "nullable": true
          },
          "inputType": {
            "type": "string",
            "nullable": true
          },
          "permission": {
            "type": "string",
            "nullable": true
          },
          "tenantId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "id": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "ListResultDtoOfDynamicPropertyDto": {
        "type": "object",
        "properties": {
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DynamicPropertyDto"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "DynamicPropertyValueDto": {
        "type": "object",
        "properties": {
          "value": {
            "type": "string",
            "nullable": true
          },
          "tenantId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "dynamicPropertyId": {
            "type": "integer",
            "format": "int32"
          },
          "id": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "ListResultDtoOfDynamicPropertyValueDto": {
        "type": "object",
        "properties": {
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DynamicPropertyValueDto"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "EditionType": {
        "enum": [
          0,
          1
        ],
        "type": "integer",
        "format": "int32",
        "x-enumNames": [
          "NewRegistration",
          "Extend"
        ]
      },
      "NameValue": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "nullable": true
          },
          "value": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "EditionListDto": {
        "type": "object",
        "properties": {
          "editionType": {
            "$ref": "#/components/schemas/EditionType"
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "displayName": {
            "type": "string",
            "nullable": true
          },
          "price": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "dayCount": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "waitingDayAfterExpire": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "trialDayCount": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "expiringEditionDisplayName": {
            "type": "string",
            "nullable": true
          },
          "isActive": {
            "type": "boolean"
          },
          "featureValues": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/NameValue"
            },
            "nullable": true
          },
          "id": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "ListResultDtoOfEditionListDto": {
        "type": "object",
        "properties": {
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/EditionListDto"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "EditionEditDto": {
        "required": [
          "displayName"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "editionType": {
            "$ref": "#/components/schemas/EditionType"
          },
          "displayName": {
            "type": "string"
          },
          "price": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "dayCount": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "trialDayCount": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "waitingDayAfterExpire": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "expiringEditionId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "isActive": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "LocalizableComboboxItemDto": {
        "type": "object",
        "properties": {
          "value": {
            "type": "string",
            "nullable": true
          },
          "displayText": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "LocalizableComboboxItemSourceDto": {
        "type": "object",
        "properties": {
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/LocalizableComboboxItemDto"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "FeatureInputTypeDto": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "nullable": true
          },
          "attributes": {
            "type": "object",
            "additionalProperties": { },
            "nullable": true
          },
          "validator": {
            "$ref": "#/components/schemas/IValueValidator"
          },
          "itemSource": {
            "$ref": "#/components/schemas/LocalizableComboboxItemSourceDto"
          }
        },
        "additionalProperties": false
      },
      "FlatFeatureDto": {
        "type": "object",
        "properties": {
          "parentName": {
            "type": "string",
            "nullable": true
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "displayName": {
            "type": "string",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "defaultValue": {
            "type": "string",
            "nullable": true
          },
          "inputType": {
            "$ref": "#/components/schemas/FeatureInputTypeDto"
          }
        },
        "additionalProperties": false
      },
      "GetEditionEditOutput": {
        "type": "object",
        "properties": {
          "edition": {
            "$ref": "#/components/schemas/EditionEditDto"
          },
          "featureValues": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/NameValueDto"
            },
            "nullable": true
          },
          "features": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/FlatFeatureDto"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "EditionCreateDto": {
        "required": [
          "displayName"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "editionType": {
            "$ref": "#/components/schemas/EditionType"
          },
          "displayName": {
            "type": "string"
          },
          "price": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "dayCount": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "trialDayCount": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "waitingDayAfterExpire": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "expiringEditionId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "isActive": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "CreateEditionDto": {
        "required": [
          "edition",
          "featureValues"
        ],
        "type": "object",
        "properties": {
          "edition": {
            "$ref": "#/components/schemas/EditionCreateDto"
          },
          "featureValues": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/NameValueDto"
            }
          }
        },
        "additionalProperties": false
      },
      "UpdateEditionDto": {
        "required": [
          "edition",
          "featureValues"
        ],
        "type": "object",
        "properties": {
          "edition": {
            "$ref": "#/components/schemas/EditionEditDto"
          },
          "featureValues": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/NameValueDto"
            }
          }
        },
        "additionalProperties": false
      },
      "MoveTenantsToAnotherEditionDto": {
        "type": "object",
        "properties": {
          "sourceEditionId": {
            "maximum": 2147483647,
            "minimum": 1,
            "type": "integer",
            "format": "int32"
          },
          "targetEditionId": {
            "maximum": 2147483647,
            "minimum": 1,
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "EditionDeviceDto": {
        "type": "object",
        "properties": {
          "editionId": {
            "type": "integer",
            "format": "int32"
          },
          "deviceId": {
            "type": "integer",
            "format": "int64"
          },
          "purchasingResourceId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "editionType": {
            "$ref": "#/components/schemas/EditionType"
          },
          "editionName": {
            "type": "string",
            "nullable": true
          },
          "editionPrice": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "dayCount": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "trialDayCount": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "waitingDayAfterExpire": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "expiringEditionId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "maxUserCount": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "maxLocationCount": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "id": {
            "type": "integer",
            "format": "int64"
          }
        },
        "additionalProperties": false
      },
      "GetEditionDeviceForViewDto": {
        "type": "object",
        "properties": {
          "editionDevice": {
            "$ref": "#/components/schemas/EditionDeviceDto"
          },
          "deviceName": {
            "type": "string",
            "nullable": true
          },
          "deviceSerialNumber": {
            "type": "string",
            "nullable": true
          },
          "deviceTypeName": {
            "type": "string",
            "nullable": true
          },
          "deviceStatus": {
            "$ref": "#/components/schemas/DeviceStatus"
          },
          "usedUserCount": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "usedLocationCount": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "purchasingResourceTitle": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "PagedResultDtoOfGetEditionDeviceForViewDto": {
        "type": "object",
        "properties": {
          "totalCount": {
            "type": "integer",
            "format": "int32"
          },
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/GetEditionDeviceForViewDto"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "AllAvailableDevicesDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "deviceName": {
            "type": "string",
            "nullable": true
          },
          "deviceSerialNumber": {
            "type": "string",
            "nullable": true
          },
          "deviceTypeName": {
            "type": "string",
            "nullable": true
          },
          "deviceStatus": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "CreateEditionDeviceDto": {
        "type": "object",
        "properties": {
          "editionId": {
            "type": "integer",
            "format": "int32"
          },
          "devices": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AllAvailableDevicesDto"
            },
            "nullable": true
          },
          "deviceId": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "purchasingResourceId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "editionType": {
            "$ref": "#/components/schemas/EditionType"
          },
          "editionName": {
            "type": "string",
            "nullable": true
          },
          "editionPrice": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "dayCount": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "trialDayCount": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "waitingDayAfterExpire": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "expiringEditionId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "maxUserCount": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "maxLocationCount": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "id": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "EditEditionDeviceFeaturesDto": {
        "type": "object",
        "properties": {
          "editionId": {
            "type": "integer",
            "format": "int32"
          },
          "deviceId": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "editionName": {
            "type": "string",
            "nullable": true
          },
          "dayCount": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "trialDayCount": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "waitingDayAfterExpire": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "maxUserCount": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "maxLocationCount": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "id": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "EditionDeviceSubscribableEditionLookupTableDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "displayName": {
            "type": "string",
            "nullable": true
          },
          "price": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "dayCount": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "PagedResultDtoOfEditionDeviceSubscribableEditionLookupTableDto": {
        "type": "object",
        "properties": {
          "totalCount": {
            "type": "integer",
            "format": "int32"
          },
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/EditionDeviceSubscribableEditionLookupTableDto"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ListResultDtoOfAllAvailableDevicesDto": {
        "type": "object",
        "properties": {
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AllAvailableDevicesDto"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "EditionDevicePurchasingResourceLookupTableDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "displayName": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "PagedResultDtoOfEditionDevicePurchasingResourceLookupTableDto": {
        "type": "object",
        "properties": {
          "totalCount": {
            "type": "integer",
            "format": "int32"
          },
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/EditionDevicePurchasingResourceLookupTableDto"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "#/definitions/Nullable`1": {
        "type": "integer",
        "format": "int64"
      },
      "EmployeeLeaveReportDto": {
        "type": "object",
        "properties": {
          "totalApprovedLeaveRequestDays": {
            "type": "integer",
            "format": "int32"
          },
          "totalApprovedLeaveRequestHours": {
            "type": "string",
            "nullable": true
          },
          "totalRejectedLeaveRequestHours": {
            "type": "string",
            "nullable": true
          },
          "remainingLeavePermissionHours": {
            "type": "string",
            "nullable": true
          },
          "remainingLeavePermissionDays": {
            "type": "integer",
            "format": "int32"
          },
          "userId": {
            "type": "integer",
            "format": "int64"
          }
        },
        "additionalProperties": false
      },
      "GetEmployeeLeaveReportForViewDto": {
        "type": "object",
        "properties": {
          "employeeLeaveReport": {
            "$ref": "#/components/schemas/EmployeeLeaveReportDto"
          },
          "userName": {
            "type": "string",
            "nullable": true
          },
          "userId": {
            "type": "integer",
            "format": "int64"
          }
        },
        "additionalProperties": false
      },
      "PagedResultDtoOfGetEmployeeLeaveReportForViewDto": {
        "type": "object",
        "properties": {
          "totalCount": {
            "type": "integer",
            "format": "int32"
          },
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/GetEmployeeLeaveReportForViewDto"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "RequestType": {
        "enum": [
          1,
          2,
          3,
          4,
          5,
          6
        ],
        "type": "integer",
        "format": "int32",
        "x-enumNames": [
          "MandatoryLeave",
          "DailyEntitlementLeave",
          "HourlyEntitlementLeave",
          "SickLeave",
          "HourlySickLeave",
          "Mission"
        ]
      },
      "RequestStatus": {
        "enum": [
          1,
          2,
          3
        ],
        "type": "integer",
        "format": "int32",
        "x-enumNames": [
          "NewRequest",
          "Approved",
          "Rejected"
        ]
      },
      "RequestDto": {
        "type": "object",
        "properties": {
          "requestType": {
            "$ref": "#/components/schemas/RequestType"
          },
          "from": {
            "type": "string",
            "format": "date-time"
          },
          "to": {
            "type": "string",
            "format": "date-time"
          },
          "comment": {
            "type": "string",
            "nullable": true
          },
          "status": {
            "$ref": "#/components/schemas/RequestStatus"
          },
          "rejectReason": {
            "type": "string",
            "nullable": true
          },
          "substituteUserId": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "creatorUserId": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "creationTime": {
            "type": "string",
            "format": "date-time"
          },
          "id": {
            "type": "integer",
            "format": "int64"
          }
        },
        "additionalProperties": false
      },
      "GetRequestForViewDto": {
        "type": "object",
        "properties": {
          "request": {
            "$ref": "#/components/schemas/RequestDto"
          },
          "substituteUser": {
            "type": "string",
            "nullable": true
          },
          "requestByUser": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "GetDetailedEmployeeLeaveReportForViewDto": {
        "type": "object",
        "properties": {
          "reportDate": {
            "type": "string",
            "nullable": true
          },
          "reportWeekDay": {
            "type": "string",
            "nullable": true
          },
          "userRequest": {
            "$ref": "#/components/schemas/GetRequestForViewDto"
          },
          "employeeLeaveReport": {
            "$ref": "#/components/schemas/GetEmployeeLeaveReportForViewDto"
          }
        },
        "additionalProperties": false
      },
      "EmployeeMissionReportDto": {
        "type": "object",
        "properties": {
          "totalApprovedMissionRequestDays": {
            "type": "integer",
            "format": "int32"
          },
          "totalApprovedMissionRequestHours": {
            "type": "string",
            "nullable": true
          },
          "totalRejectedMissionRequestHours": {
            "type": "string",
            "nullable": true
          },
          "remainingMissionPermissionHours": {
            "type": "string",
            "nullable": true
          },
          "remainingMissionPermissionDays": {
            "type": "integer",
            "format": "int32"
          },
          "userId": {
            "type": "integer",
            "format": "int64"
          }
        },
        "additionalProperties": false
      },
      "GetEmployeeMissionReportForViewDto": {
        "type": "object",
        "properties": {
          "employeeMissionReport": {
            "$ref": "#/components/schemas/EmployeeMissionReportDto"
          },
          "userName": {
            "type": "string",
            "nullable": true
          },
          "userId": {
            "type": "integer",
            "format": "int64"
          }
        },
        "additionalProperties": false
      },
      "PagedResultDtoOfGetEmployeeMissionReportForViewDto": {
        "type": "object",
        "properties": {
          "totalCount": {
            "type": "integer",
            "format": "int32"
          },
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/GetEmployeeMissionReportForViewDto"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "GetDetailedEmployeeMissionReportForViewDto": {
        "type": "object",
        "properties": {
          "reportDate": {
            "type": "string",
            "nullable": true
          },
          "reportWeekDay": {
            "type": "string",
            "nullable": true
          },
          "userRequest": {
            "$ref": "#/components/schemas/GetRequestForViewDto"
          },
          "employeeMissionReport": {
            "$ref": "#/components/schemas/GetEmployeeMissionReportForViewDto"
          }
        },
        "additionalProperties": false
      },
      "EnteringLeavingType": {
        "enum": [
          1,
          2
        ],
        "type": "integer",
        "format": "int32",
        "x-enumNames": [
          "Enter",
          "Leave"
        ]
      },
      "EnterLeaveDto": {
        "type": "object",
        "properties": {
          "enterLeaveType": {
            "$ref": "#/components/schemas/EnteringLeavingType"
          },
          "occurDate": {
            "type": "string",
            "format": "date-time"
          },
          "occurTime": {
            "type": "string",
            "format": "date-span"
          },
          "status": {
            "$ref": "#/components/schemas/RequestStatus"
          },
          "creationTime": {
            "type": "string",
            "format": "date-time"
          },
          "creatorUserId": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "id": {
            "type": "integer",
            "format": "int64"
          }
        },
        "additionalProperties": false
      },
      "GetEnterLeaveForViewDto": {
        "type": "object",
        "properties": {
          "enterLeave": {
            "$ref": "#/components/schemas/EnterLeaveDto"
          },
          "requestByUser": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "PagedResultDtoOfGetEnterLeaveForViewDto": {
        "type": "object",
        "properties": {
          "totalCount": {
            "type": "integer",
            "format": "int32"
          },
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/GetEnterLeaveForViewDto"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "CreateOrEditEnterLeaveDto": {
        "type": "object",
        "properties": {
          "enterLeaveType": {
            "$ref": "#/components/schemas/EnteringLeavingType"
          },
          "occurDate": {
            "type": "string",
            "format": "date-time"
          },
          "occurTime": {
            "type": "string",
            "format": "date-span"
          },
          "comment": {
            "type": "string",
            "nullable": true
          },
          "status": {
            "$ref": "#/components/schemas/RequestStatus"
          },
          "rejectReason": {
            "type": "string",
            "nullable": true
          },
          "rejectByUserId": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "approverUserId": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "id": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "GetEnterLeaveForEditOutput": {
        "type": "object",
        "properties": {
          "enterLeave": {
            "$ref": "#/components/schemas/CreateOrEditEnterLeaveDto"
          }
        },
        "additionalProperties": false
      },
      "CreateFriendshipRequestInput": {
        "type": "object",
        "properties": {
          "userId": {
            "minimum": 1,
            "type": "integer",
            "format": "int64"
          },
          "tenantId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "CreateFriendshipRequestByUserNameInput": {
        "required": [
          "tenancyName"
        ],
        "type": "object",
        "properties": {
          "tenancyName": {
            "type": "string"
          },
          "userName": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "BlockUserInput": {
        "type": "object",
        "properties": {
          "userId": {
            "minimum": 1,
            "type": "integer",
            "format": "int64"
          },
          "tenantId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "UnblockUserInput": {
        "type": "object",
        "properties": {
          "userId": {
            "minimum": 1,
            "type": "integer",
            "format": "int64"
          },
          "tenantId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "AcceptFriendshipRequestInput": {
        "type": "object",
        "properties": {
          "userId": {
            "minimum": 1,
            "type": "integer",
            "format": "int64"
          },
          "tenantId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "TopStatsData": {
        "type": "object",
        "properties": {
          "newTenantsCount": {
            "type": "integer",
            "format": "int32"
          },
          "newSubscriptionAmount": {
            "type": "number",
            "format": "double"
          },
          "dashboardPlaceholder1": {
            "type": "integer",
            "format": "int32"
          },
          "dashboardPlaceholder2": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "RecentTenant": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "creationTime": {
            "type": "string",
            "format": "date-time"
          }
        },
        "additionalProperties": false
      },
      "GetRecentTenantsOutput": {
        "type": "object",
        "properties": {
          "recentTenantsDayCount": {
            "type": "integer",
            "format": "int32"
          },
          "maxRecentTenantsShownCount": {
            "type": "integer",
            "format": "int32"
          },
          "tenantCreationStartDate": {
            "type": "string",
            "format": "date-time"
          },
          "recentTenants": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/RecentTenant"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ExpiringTenant": {
        "type": "object",
        "properties": {
          "tenantName": {
            "type": "string",
            "nullable": true
          },
          "remainingDayCount": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "GetExpiringTenantsOutput": {
        "type": "object",
        "properties": {
          "expiringTenants": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ExpiringTenant"
            },
            "nullable": true
          },
          "subscriptionEndAlertDayCount": {
            "type": "integer",
            "format": "int32"
          },
          "maxExpiringTenantsShownCount": {
            "type": "integer",
            "format": "int32"
          },
          "subscriptionEndDateStart": {
            "type": "string",
            "format": "date-time"
          },
          "subscriptionEndDateEnd": {
            "type": "string",
            "format": "date-time"
          }
        },
        "additionalProperties": false
      },
      "ChartDateInterval": {
        "enum": [
          1,
          2,
          3
        ],
        "type": "integer",
        "format": "int32",
        "x-enumNames": [
          "Daily",
          "Weekly",
          "Monthly"
        ]
      },
      "IncomeStastistic": {
        "type": "object",
        "properties": {
          "label": {
            "type": "string",
            "nullable": true
          },
          "date": {
            "type": "string",
            "format": "date-time"
          },
          "amount": {
            "type": "number",
            "format": "double"
          }
        },
        "additionalProperties": false
      },
      "GetIncomeStatisticsDataOutput": {
        "type": "object",
        "properties": {
          "incomeStatistics": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/IncomeStastistic"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "TenantEdition": {
        "type": "object",
        "properties": {
          "label": {
            "type": "string",
            "nullable": true
          },
          "value": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "GetEditionTenantStatisticsOutput": {
        "type": "object",
        "properties": {
          "editionStatistics": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TenantEdition"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "GeneralSettingsEditDto": {
        "type": "object",
        "properties": {
          "timezone": {
            "type": "string",
            "nullable": true
          },
          "timezoneForComparison": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "SessionTimeOutSettingsEditDto": {
        "type": "object",
        "properties": {
          "isEnabled": {
            "type": "boolean"
          },
          "timeOutSecond": {
            "maximum": 2147483647,
            "minimum": 10,
            "type": "integer",
            "format": "int32"
          },
          "showTimeOutNotificationSecond": {
            "maximum": 2147483647,
            "minimum": 10,
            "type": "integer",
            "format": "int32"
          },
          "showLockScreenWhenTimedOut": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "HostUserManagementSettingsEditDto": {
        "type": "object",
        "properties": {
          "isEmailConfirmationRequiredForLogin": {
            "type": "boolean"
          },
          "smsVerificationEnabled": {
            "type": "boolean"
          },
          "isCookieConsentEnabled": {
            "type": "boolean"
          },
          "isQuickThemeSelectEnabled": {
            "type": "boolean"
          },
          "useCaptchaOnLogin": {
            "type": "boolean"
          },
          "allowUsingGravatarProfilePicture": {
            "type": "boolean"
          },
          "sessionTimeOutSettings": {
            "$ref": "#/components/schemas/SessionTimeOutSettingsEditDto"
          }
        },
        "additionalProperties": false
      },
      "EmailSettingsEditDto": {
        "type": "object",
        "properties": {
          "defaultFromAddress": {
            "type": "string",
            "nullable": true
          },
          "defaultFromDisplayName": {
            "type": "string",
            "nullable": true
          },
          "smtpHost": {
            "type": "string",
            "nullable": true
          },
          "smtpPort": {
            "type": "integer",
            "format": "int32"
          },
          "smtpUserName": {
            "type": "string",
            "nullable": true
          },
          "smtpPassword": {
            "type": "string",
            "nullable": true
          },
          "smtpDomain": {
            "type": "string",
            "nullable": true
          },
          "smtpEnableSsl": {
            "type": "boolean"
          },
          "smtpUseDefaultCredentials": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "TenantManagementSettingsEditDto": {
        "type": "object",
        "properties": {
          "allowSelfRegistration": {
            "type": "boolean"
          },
          "isNewRegisteredTenantActiveByDefault": {
            "type": "boolean"
          },
          "useCaptchaOnRegistration": {
            "type": "boolean"
          },
          "defaultEditionId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "PasswordComplexitySetting": {
        "type": "object",
        "properties": {
          "requireDigit": {
            "type": "boolean"
          },
          "requireLowercase": {
            "type": "boolean"
          },
          "requireNonAlphanumeric": {
            "type": "boolean"
          },
          "requireUppercase": {
            "type": "boolean"
          },
          "requiredLength": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "UserLockOutSettingsEditDto": {
        "type": "object",
        "properties": {
          "isEnabled": {
            "type": "boolean"
          },
          "maxFailedAccessAttemptsBeforeLockout": {
            "type": "integer",
            "format": "int32"
          },
          "defaultAccountLockoutSeconds": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "TwoFactorLoginSettingsEditDto": {
        "type": "object",
        "properties": {
          "isEnabledForApplication": {
            "type": "boolean"
          },
          "isEnabled": {
            "type": "boolean"
          },
          "isEmailProviderEnabled": {
            "type": "boolean"
          },
          "isSmsProviderEnabled": {
            "type": "boolean"
          },
          "isRememberBrowserEnabled": {
            "type": "boolean"
          },
          "isGoogleAuthenticatorEnabled": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "SecuritySettingsEditDto": {
        "type": "object",
        "properties": {
          "allowOneConcurrentLoginPerUser": {
            "type": "boolean"
          },
          "useDefaultPasswordComplexitySettings": {
            "type": "boolean"
          },
          "passwordComplexity": {
            "$ref": "#/components/schemas/PasswordComplexitySetting"
          },
          "defaultPasswordComplexity": {
            "$ref": "#/components/schemas/PasswordComplexitySetting"
          },
          "userLockOut": {
            "$ref": "#/components/schemas/UserLockOutSettingsEditDto"
          },
          "twoFactorLogin": {
            "$ref": "#/components/schemas/TwoFactorLoginSettingsEditDto"
          }
        },
        "additionalProperties": false
      },
      "HostBillingSettingsEditDto": {
        "type": "object",
        "properties": {
          "legalName": {
            "type": "string",
            "nullable": true
          },
          "address": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "OtherSettingsEditDto": {
        "type": "object",
        "properties": {
          "isQuickThemeSelectEnabled": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "FacebookExternalLoginProviderSettings": {
        "type": "object",
        "properties": {
          "appId": {
            "type": "string",
            "nullable": true
          },
          "appSecret": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "GoogleExternalLoginProviderSettings": {
        "type": "object",
        "properties": {
          "clientId": {
            "type": "string",
            "nullable": true
          },
          "clientSecret": {
            "type": "string",
            "nullable": true
          },
          "userInfoEndpoint": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "TwitterExternalLoginProviderSettings": {
        "type": "object",
        "properties": {
          "consumerKey": {
            "type": "string",
            "nullable": true
          },
          "consumerSecret": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "MicrosoftExternalLoginProviderSettings": {
        "type": "object",
        "properties": {
          "clientId": {
            "type": "string",
            "nullable": true
          },
          "clientSecret": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "OpenIdConnectExternalLoginProviderSettings": {
        "type": "object",
        "properties": {
          "clientId": {
            "type": "string",
            "nullable": true
          },
          "clientSecret": {
            "type": "string",
            "nullable": true
          },
          "authority": {
            "type": "string",
            "nullable": true
          },
          "loginUrl": {
            "type": "string",
            "nullable": true
          },
          "validateIssuer": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "JsonClaimMapDto": {
        "type": "object",
        "properties": {
          "claim": {
            "type": "string",
            "nullable": true
          },
          "key": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "WsFederationExternalLoginProviderSettings": {
        "type": "object",
        "properties": {
          "clientId": {
            "type": "string",
            "nullable": true
          },
          "tenant": {
            "type": "string",
            "nullable": true
          },
          "metaDataAddress": {
            "type": "string",
            "nullable": true
          },
          "wtrealm": {
            "type": "string",
            "nullable": true
          },
          "authority": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ExternalLoginProviderSettingsEditDto": {
        "type": "object",
        "properties": {
          "facebook_IsDeactivated": {
            "type": "boolean"
          },
          "facebook": {
            "$ref": "#/components/schemas/FacebookExternalLoginProviderSettings"
          },
          "google_IsDeactivated": {
            "type": "boolean"
          },
          "google": {
            "$ref": "#/components/schemas/GoogleExternalLoginProviderSettings"
          },
          "twitter_IsDeactivated": {
            "type": "boolean"
          },
          "twitter": {
            "$ref": "#/components/schemas/TwitterExternalLoginProviderSettings"
          },
          "microsoft_IsDeactivated": {
            "type": "boolean"
          },
          "microsoft": {
            "$ref": "#/components/schemas/MicrosoftExternalLoginProviderSettings"
          },
          "openIdConnect_IsDeactivated": {
            "type": "boolean"
          },
          "openIdConnect": {
            "$ref": "#/components/schemas/OpenIdConnectExternalLoginProviderSettings"
          },
          "openIdConnectClaimsMapping": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/JsonClaimMapDto"
            },
            "nullable": true
          },
          "wsFederation_IsDeactivated": {
            "type": "boolean"
          },
          "wsFederation": {
            "$ref": "#/components/schemas/WsFederationExternalLoginProviderSettings"
          },
          "wsFederationClaimsMapping": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/JsonClaimMapDto"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "HostSettingsEditDto": {
        "required": [
          "email",
          "general",
          "security",
          "tenantManagement",
          "userManagement"
        ],
        "type": "object",
        "properties": {
          "general": {
            "$ref": "#/components/schemas/GeneralSettingsEditDto"
          },
          "userManagement": {
            "$ref": "#/components/schemas/HostUserManagementSettingsEditDto"
          },
          "email": {
            "$ref": "#/components/schemas/EmailSettingsEditDto"
          },
          "tenantManagement": {
            "$ref": "#/components/schemas/TenantManagementSettingsEditDto"
          },
          "security": {
            "$ref": "#/components/schemas/SecuritySettingsEditDto"
          },
          "billing": {
            "$ref": "#/components/schemas/HostBillingSettingsEditDto"
          },
          "otherSettings": {
            "$ref": "#/components/schemas/OtherSettingsEditDto"
          },
          "externalLoginProviderSettings": {
            "$ref": "#/components/schemas/ExternalLoginProviderSettingsEditDto"
          }
        },
        "additionalProperties": false
      },
      "SendTestEmailInput": {
        "required": [
          "emailAddress"
        ],
        "type": "object",
        "properties": {
          "emailAddress": {
            "maxLength": 256,
            "type": "string"
          }
        },
        "additionalProperties": false
      },
      "ExternalLoginSettingsDto": {
        "type": "object",
        "properties": {
          "enabledSocialLoginSettings": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "InstallDto": {
        "required": [
          "adminPassword",
          "connectionString",
          "defaultLanguage",
          "webSiteUrl"
        ],
        "type": "object",
        "properties": {
          "connectionString": {
            "type": "string"
          },
          "adminPassword": {
            "type": "string"
          },
          "webSiteUrl": {
            "type": "string"
          },
          "serverUrl": {
            "type": "string",
            "nullable": true
          },
          "defaultLanguage": {
            "type": "string"
          },
          "smtpSettings": {
            "$ref": "#/components/schemas/EmailSettingsEditDto"
          },
          "billInfo": {
            "$ref": "#/components/schemas/HostBillingSettingsEditDto"
          }
        },
        "additionalProperties": false
      },
      "AppSettingsJsonDto": {
        "type": "object",
        "properties": {
          "webSiteUrl": {
            "type": "string",
            "nullable": true
          },
          "serverSiteUrl": {
            "type": "string",
            "nullable": true
          },
          "languages": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/NameValue"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "CheckDatabaseOutput": {
        "type": "object",
        "properties": {
          "isDatabaseExist": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "SubscribableEdition": {
        "required": [
          "displayName",
          "name"
        ],
        "type": "object",
        "properties": {
          "expiringEditionId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "price": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "dayCount": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "editionType": {
            "$ref": "#/components/schemas/EditionType"
          },
          "trialDayCount": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "waitingDayAfterExpire": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "isActive": {
            "type": "boolean"
          },
          "name": {
            "maxLength": 32,
            "minLength": 0,
            "type": "string"
          },
          "displayName": {
            "maxLength": 64,
            "minLength": 0,
            "type": "string"
          },
          "isDeleted": {
            "type": "boolean"
          },
          "deleterUserId": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "deletionTime": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "lastModificationTime": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "lastModifierUserId": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "creationTime": {
            "type": "string",
            "format": "date-time"
          },
          "creatorUserId": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "id": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "InvoiceDto": {
        "type": "object",
        "properties": {
          "totalPrice": {
            "type": "number",
            "format": "double"
          },
          "deductionPrice": {
            "type": "number",
            "format": "double"
          },
          "subscribableEdition": {
            "$ref": "#/components/schemas/SubscribableEdition"
          },
          "remainingDaysCount": {
            "type": "integer",
            "format": "int32"
          },
          "maxUserCount": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "maxLocationCount": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "invoiceNo": {
            "type": "string",
            "nullable": true
          },
          "invoiceDate": {
            "type": "string",
            "format": "date-time"
          },
          "tenantLegalName": {
            "type": "string",
            "nullable": true
          },
          "tenantAddress": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          },
          "tenantTaxNo": {
            "type": "string",
            "nullable": true
          },
          "hostLegalName": {
            "type": "string",
            "nullable": true
          },
          "hostAddress": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "CreateInvoiceDto": {
        "type": "object",
        "properties": {
          "subscriptionPaymentId": {
            "type": "integer",
            "format": "int64"
          }
        },
        "additionalProperties": false
      },
      "ApplicationLanguageListDto": {
        "type": "object",
        "properties": {
          "tenantId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "displayName": {
            "type": "string",
            "nullable": true
          },
          "icon": {
            "type": "string",
            "nullable": true
          },
          "isDisabled": {
            "type": "boolean"
          },
          "isDeleted": {
            "type": "boolean"
          },
          "deleterUserId": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "deletionTime": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "lastModificationTime": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "lastModifierUserId": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "creationTime": {
            "type": "string",
            "format": "date-time"
          },
          "creatorUserId": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "id": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "GetLanguagesOutput": {
        "type": "object",
        "properties": {
          "defaultLanguageName": {
            "type": "string",
            "nullable": true
          },
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ApplicationLanguageListDto"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ApplicationLanguageEditDto": {
        "required": [
          "name"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "name": {
            "maxLength": 128,
            "minLength": 0,
            "type": "string"
          },
          "icon": {
            "maxLength": 128,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "isEnabled": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "ComboboxItemDto": {
        "type": "object",
        "properties": {
          "value": {
            "type": "string",
            "nullable": true
          },
          "displayText": {
            "type": "string",
            "nullable": true
          },
          "isSelected": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "GetLanguageForEditOutput": {
        "type": "object",
        "properties": {
          "language": {
            "$ref": "#/components/schemas/ApplicationLanguageEditDto"
          },
          "languageNames": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ComboboxItemDto"
            },
            "nullable": true
          },
          "flags": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ComboboxItemDto"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "CreateOrUpdateLanguageInput": {
        "required": [
          "language"
        ],
        "type": "object",
        "properties": {
          "language": {
            "$ref": "#/components/schemas/ApplicationLanguageEditDto"
          }
        },
        "additionalProperties": false
      },
      "SetDefaultLanguageInput": {
        "required": [
          "name"
        ],
        "type": "object",
        "properties": {
          "name": {
            "maxLength": 128,
            "minLength": 0,
            "type": "string"
          }
        },
        "additionalProperties": false
      },
      "LanguageTextListDto": {
        "type": "object",
        "properties": {
          "key": {
            "type": "string",
            "nullable": true
          },
          "baseValue": {
            "type": "string",
            "nullable": true
          },
          "targetValue": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "PagedResultDtoOfLanguageTextListDto": {
        "type": "object",
        "properties": {
          "totalCount": {
            "type": "integer",
            "format": "int32"
          },
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/LanguageTextListDto"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "UpdateLanguageTextInput": {
        "required": [
          "key",
          "languageName",
          "sourceName",
          "value"
        ],
        "type": "object",
        "properties": {
          "languageName": {
            "maxLength": 128,
            "minLength": 0,
            "type": "string"
          },
          "sourceName": {
            "maxLength": 128,
            "minLength": 0,
            "type": "string"
          },
          "key": {
            "maxLength": 256,
            "minLength": 0,
            "type": "string"
          },
          "value": {
            "maxLength": 67108864,
            "minLength": 0,
            "type": "string"
          }
        },
        "additionalProperties": false
      },
      "UserNotificationState": {
        "enum": [
          0,
          1
        ],
        "type": "integer",
        "format": "int32",
        "x-enumNames": [
          "Unread",
          "Read"
        ]
      },
      "NotificationData": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "properties": {
            "type": "object",
            "additionalProperties": { },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "NotificationSeverity": {
        "enum": [
          0,
          1,
          2,
          3,
          4
        ],
        "type": "integer",
        "format": "int32",
        "x-enumNames": [
          "Info",
          "Success",
          "Warn",
          "Error",
          "Fatal"
        ]
      },
      "TenantNotification": {
        "type": "object",
        "properties": {
          "tenantId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "notificationName": {
            "type": "string",
            "nullable": true
          },
          "data": {
            "$ref": "#/components/schemas/NotificationData"
          },
          "entityType": {
            "type": "string",
            "nullable": true,
            "deprecated": true
          },
          "entityTypeName": {
            "type": "string",
            "nullable": true
          },
          "entityId": {
            "nullable": true
          },
          "severity": {
            "$ref": "#/components/schemas/NotificationSeverity"
          },
          "creationTime": {
            "type": "string",
            "format": "date-time"
          },
          "id": {
            "type": "string",
            "format": "uuid"
          }
        },
        "additionalProperties": false
      },
      "UserNotification": {
        "type": "object",
        "properties": {
          "tenantId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "userId": {
            "type": "integer",
            "format": "int64"
          },
          "state": {
            "$ref": "#/components/schemas/UserNotificationState"
          },
          "notification": {
            "$ref": "#/components/schemas/TenantNotification"
          },
          "id": {
            "type": "string",
            "format": "uuid"
          }
        },
        "additionalProperties": false
      },
      "GetNotificationsOutput": {
        "type": "object",
        "properties": {
          "unreadCount": {
            "type": "integer",
            "format": "int32"
          },
          "totalCount": {
            "type": "integer",
            "format": "int32"
          },
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/UserNotification"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "EntityDtoOfGuid": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          }
        },
        "additionalProperties": false
      },
      "NotificationSubscriptionWithDisplayNameDto": {
        "required": [
          "name"
        ],
        "type": "object",
        "properties": {
          "displayName": {
            "type": "string",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "name": {
            "maxLength": 96,
            "type": "string"
          },
          "isSubscribed": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "GetNotificationSettingsOutput": {
        "type": "object",
        "properties": {
          "receiveNotifications": {
            "type": "boolean"
          },
          "notifications": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/NotificationSubscriptionWithDisplayNameDto"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "NotificationSubscriptionDto": {
        "required": [
          "name"
        ],
        "type": "object",
        "properties": {
          "name": {
            "maxLength": 96,
            "type": "string"
          },
          "isSubscribed": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "UpdateNotificationSettingsInput": {
        "type": "object",
        "properties": {
          "receiveNotifications": {
            "type": "boolean"
          },
          "notifications": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/NotificationSubscriptionDto"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "OrganizationUnitDto": {
        "type": "object",
        "properties": {
          "parentId": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "code": {
            "type": "string",
            "nullable": true
          },
          "displayName": {
            "type": "string",
            "nullable": true
          },
          "memberCount": {
            "type": "integer",
            "format": "int32"
          },
          "roleCount": {
            "type": "integer",
            "format": "int32"
          },
          "lastModificationTime": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "lastModifierUserId": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "creationTime": {
            "type": "string",
            "format": "date-time"
          },
          "creatorUserId": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "id": {
            "type": "integer",
            "format": "int64"
          }
        },
        "additionalProperties": false
      },
      "ListResultDtoOfOrganizationUnitDto": {
        "type": "object",
        "properties": {
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/OrganizationUnitDto"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "OrganizationUnitUserListDto": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "nullable": true
          },
          "surname": {
            "type": "string",
            "nullable": true
          },
          "userName": {
            "type": "string",
            "nullable": true
          },
          "emailAddress": {
            "type": "string",
            "nullable": true
          },
          "profilePictureId": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "addedTime": {
            "type": "string",
            "format": "date-time"
          },
          "id": {
            "type": "integer",
            "format": "int64"
          }
        },
        "additionalProperties": false
      },
      "PagedResultDtoOfOrganizationUnitUserListDto": {
        "type": "object",
        "properties": {
          "totalCount": {
            "type": "integer",
            "format": "int32"
          },
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/OrganizationUnitUserListDto"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "OrganizationUnitRoleListDto": {
        "type": "object",
        "properties": {
          "displayName": {
            "type": "string",
            "nullable": true
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "addedTime": {
            "type": "string",
            "format": "date-time"
          },
          "id": {
            "type": "integer",
            "format": "int64"
          }
        },
        "additionalProperties": false
      },
      "PagedResultDtoOfOrganizationUnitRoleListDto": {
        "type": "object",
        "properties": {
          "totalCount": {
            "type": "integer",
            "format": "int32"
          },
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/OrganizationUnitRoleListDto"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "CreateOrganizationUnitInput": {
        "required": [
          "displayName"
        ],
        "type": "object",
        "properties": {
          "parentId": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "displayName": {
            "maxLength": 128,
            "minLength": 0,
            "type": "string"
          }
        },
        "additionalProperties": false
      },
      "UpdateOrganizationUnitInput": {
        "required": [
          "displayName"
        ],
        "type": "object",
        "properties": {
          "id": {
            "minimum": 1,
            "type": "integer",
            "format": "int64"
          },
          "displayName": {
            "maxLength": 128,
            "minLength": 0,
            "type": "string"
          }
        },
        "additionalProperties": false
      },
      "MoveOrganizationUnitInput": {
        "type": "object",
        "properties": {
          "id": {
            "minimum": 1,
            "type": "integer",
            "format": "int64"
          },
          "newParentId": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "UsersToOrganizationUnitInput": {
        "type": "object",
        "properties": {
          "userIds": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int64"
            },
            "nullable": true
          },
          "organizationUnitId": {
            "minimum": 1,
            "type": "integer",
            "format": "int64"
          }
        },
        "additionalProperties": false
      },
      "RolesToOrganizationUnitInput": {
        "type": "object",
        "properties": {
          "roleIds": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int32"
            },
            "nullable": true
          },
          "organizationUnitId": {
            "minimum": 1,
            "type": "integer",
            "format": "int64"
          }
        },
        "additionalProperties": false
      },
      "FindOrganizationUnitUsersInput": {
        "type": "object",
        "properties": {
          "organizationUnitId": {
            "type": "integer",
            "format": "int64"
          },
          "maxResultCount": {
            "maximum": 1000,
            "minimum": 1,
            "type": "integer",
            "format": "int32"
          },
          "skipCount": {
            "maximum": 2147483647,
            "minimum": 0,
            "type": "integer",
            "format": "int32"
          },
          "filter": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "FindOrganizationUnitRolesInput": {
        "type": "object",
        "properties": {
          "organizationUnitId": {
            "type": "integer",
            "format": "int64"
          },
          "maxResultCount": {
            "maximum": 1000,
            "minimum": 1,
            "type": "integer",
            "format": "int32"
          },
          "skipCount": {
            "maximum": 2147483647,
            "minimum": 0,
            "type": "integer",
            "format": "int32"
          },
          "filter": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "SubscriptionPaymentGatewayType": {
        "enum": [
          1,
          2,
          3,
          4
        ],
        "type": "integer",
        "format": "int32",
        "x-enumNames": [
          "Paypal",
          "Stripe",
          "Shetab",
          "DirectRequest"
        ]
      },
      "CreatePaymentDto": {
        "type": "object",
        "properties": {
          "editionId": {
            "type": "integer",
            "format": "int32"
          },
          "deviceId": {
            "type": "integer",
            "format": "int64"
          },
          "editionType": {
            "$ref": "#/components/schemas/EditionType"
          },
          "subscriptionPaymentGatewayType": {
            "$ref": "#/components/schemas/SubscriptionPaymentGatewayType"
          },
          "successUrl": {
            "type": "string",
            "nullable": true
          },
          "errorUrl": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "CancelPaymentDto": {
        "type": "object",
        "properties": {
          "paymentId": {
            "type": "string",
            "nullable": true
          },
          "gateway": {
            "$ref": "#/components/schemas/SubscriptionPaymentGatewayType"
          }
        },
        "additionalProperties": false
      },
      "SubscriptionPaymentListDto": {
        "type": "object",
        "properties": {
          "gateway": {
            "type": "string",
            "nullable": true
          },
          "amount": {
            "type": "number",
            "format": "double"
          },
          "editionId": {
            "type": "integer",
            "format": "int32"
          },
          "dayCount": {
            "type": "integer",
            "format": "int32"
          },
          "paymentPeriodType": {
            "type": "string",
            "nullable": true
          },
          "externalPaymentId": {
            "type": "string",
            "nullable": true
          },
          "payerId": {
            "type": "string",
            "nullable": true
          },
          "status": {
            "type": "string",
            "nullable": true
          },
          "editionDisplayName": {
            "type": "string",
            "nullable": true
          },
          "tenantId": {
            "type": "integer",
            "format": "int32"
          },
          "invoiceNo": {
            "type": "string",
            "nullable": true
          },
          "lastModificationTime": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "lastModifierUserId": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "creationTime": {
            "type": "string",
            "format": "date-time"
          },
          "creatorUserId": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "id": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "PagedResultDtoOfSubscriptionPaymentListDto": {
        "type": "object",
        "properties": {
          "totalCount": {
            "type": "integer",
            "format": "int32"
          },
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SubscriptionPaymentListDto"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "PaymentGatewayModel": {
        "type": "object",
        "properties": {
          "gatewayType": {
            "$ref": "#/components/schemas/SubscriptionPaymentGatewayType"
          },
          "supportsRecurringPayments": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "SubscriptionPaymentStatus": {
        "enum": [
          0,
          1,
          2,
          3,
          4,
          5
        ],
        "type": "integer",
        "format": "int32",
        "x-enumNames": [
          "SentToGateway",
          "NotPaid",
          "Paid",
          "Failed",
          "Cancelled",
          "Completed"
        ]
      },
      "SubscriptionPaymentDto": {
        "type": "object",
        "properties": {
          "description": {
            "type": "string",
            "nullable": true
          },
          "gateway": {
            "$ref": "#/components/schemas/SubscriptionPaymentGatewayType"
          },
          "amount": {
            "type": "number",
            "format": "double"
          },
          "editionId": {
            "type": "integer",
            "format": "int32"
          },
          "tenantId": {
            "type": "integer",
            "format": "int32"
          },
          "dayCount": {
            "type": "integer",
            "format": "int32"
          },
          "paymentId": {
            "type": "string",
            "nullable": true
          },
          "payerId": {
            "type": "string",
            "nullable": true
          },
          "editionDisplayName": {
            "type": "string",
            "nullable": true
          },
          "invoiceNo": {
            "type": "integer",
            "format": "int64"
          },
          "status": {
            "$ref": "#/components/schemas/SubscriptionPaymentStatus"
          },
          "isRecurring": {
            "type": "boolean"
          },
          "externalPaymentId": {
            "type": "string",
            "nullable": true
          },
          "successUrl": {
            "type": "string",
            "nullable": true
          },
          "errorUrl": {
            "type": "string",
            "nullable": true
          },
          "editionType": {
            "$ref": "#/components/schemas/EditionType"
          },
          "id": {
            "type": "integer",
            "format": "int64"
          }
        },
        "additionalProperties": false
      },
      "PayPalConfigurationDto": {
        "type": "object",
        "properties": {
          "clientId": {
            "type": "string",
            "nullable": true
          },
          "demoUsername": {
            "type": "string",
            "nullable": true
          },
          "demoPassword": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "FlatPermissionWithLevelDto": {
        "type": "object",
        "properties": {
          "level": {
            "type": "integer",
            "format": "int32"
          },
          "parentName": {
            "type": "string",
            "nullable": true
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "displayName": {
            "type": "string",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "isGrantedByDefault": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "ListResultDtoOfFlatPermissionWithLevelDto": {
        "type": "object",
        "properties": {
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/FlatPermissionWithLevelDto"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "CurrentUserProfileEditDto": {
        "required": [
          "emailAddress",
          "name",
          "surname",
          "userName"
        ],
        "type": "object",
        "properties": {
          "name": {
            "maxLength": 64,
            "minLength": 0,
            "type": "string"
          },
          "surname": {
            "maxLength": 64,
            "minLength": 0,
            "type": "string"
          },
          "userName": {
            "maxLength": 256,
            "minLength": 0,
            "type": "string"
          },
          "emailAddress": {
            "maxLength": 256,
            "minLength": 0,
            "type": "string"
          },
          "phoneNumber": {
            "maxLength": 50,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "isPhoneNumberConfirmed": {
            "type": "boolean"
          },
          "timezone": {
            "type": "string",
            "nullable": true
          },
          "qrCodeSetupImageUrl": {
            "type": "string",
            "nullable": true
          },
          "isGoogleAuthenticatorEnabled": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "UpdateGoogleAuthenticatorKeyOutput": {
        "type": "object",
        "properties": {
          "qrCodeSetupImageUrl": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ChangePasswordInput": {
        "required": [
          "currentPassword",
          "newPassword"
        ],
        "type": "object",
        "properties": {
          "currentPassword": {
            "type": "string"
          },
          "newPassword": {
            "type": "string"
          }
        },
        "additionalProperties": false
      },
      "UpdateProfilePictureInput": {
        "type": "object",
        "properties": {
          "fileToken": {
            "maxLength": 400,
            "type": "string",
            "nullable": true
          },
          "x": {
            "type": "integer",
            "format": "int32"
          },
          "y": {
            "type": "integer",
            "format": "int32"
          },
          "width": {
            "type": "integer",
            "format": "int32"
          },
          "height": {
            "type": "integer",
            "format": "int32"
          },
          "useGravatarProfilePicture": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "GetPasswordComplexitySettingOutput": {
        "type": "object",
        "properties": {
          "setting": {
            "$ref": "#/components/schemas/PasswordComplexitySetting"
          }
        },
        "additionalProperties": false
      },
      "GetProfilePictureOutput": {
        "type": "object",
        "properties": {
          "profilePicture": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ChangeUserLanguageDto": {
        "required": [
          "languageName"
        ],
        "type": "object",
        "properties": {
          "languageName": {
            "type": "string"
          }
        },
        "additionalProperties": false
      },
      "UpdateProfilePictureByUserInput": {
        "required": [
          "fileToken",
          "imageByte",
          "userId"
        ],
        "type": "object",
        "properties": {
          "userId": {
            "type": "integer",
            "format": "int64"
          },
          "fileToken": {
            "maxLength": 400,
            "type": "string"
          },
          "imageByte": {
            "type": "string",
            "format": "byte"
          },
          "x": {
            "type": "integer",
            "format": "int32"
          },
          "y": {
            "type": "integer",
            "format": "int32"
          },
          "width": {
            "type": "integer",
            "format": "int32"
          },
          "height": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "PurchasingResourceDto": {
        "type": "object",
        "properties": {
          "title": {
            "type": "string",
            "nullable": true
          },
          "id": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "GetPurchasingResourceForViewDto": {
        "type": "object",
        "properties": {
          "purchasingResource": {
            "$ref": "#/components/schemas/PurchasingResourceDto"
          }
        },
        "additionalProperties": false
      },
      "PagedResultDtoOfGetPurchasingResourceForViewDto": {
        "type": "object",
        "properties": {
          "totalCount": {
            "type": "integer",
            "format": "int32"
          },
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/GetPurchasingResourceForViewDto"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "CreateOrEditPurchasingResourceDto": {
        "required": [
          "title"
        ],
        "type": "object",
        "properties": {
          "title": {
            "maxLength": 128,
            "minLength": 1,
            "type": "string"
          },
          "id": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "GetPurchasingResourceForEditOutput": {
        "type": "object",
        "properties": {
          "purchasingResource": {
            "$ref": "#/components/schemas/CreateOrEditPurchasingResourceDto"
          }
        },
        "additionalProperties": false
      },
      "ReportsManagerDto": {
        "type": "object",
        "properties": {
          "creationTime": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "subscriptionEndDateUtc": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "seniorManagerName": {
            "type": "string",
            "nullable": true
          },
          "seniorManagerSurname": {
            "type": "string",
            "nullable": true
          },
          "seniorManagerPhoneNumber": {
            "type": "string",
            "nullable": true
          },
          "adminEmailAddress": {
            "type": "string",
            "nullable": true
          },
          "address": {
            "type": "string",
            "nullable": true
          },
          "tenancyName": {
            "type": "string",
            "nullable": true
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "isActive": {
            "type": "boolean"
          },
          "countryId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "stateId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "cityId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "id": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "GetReportsManagerForViewDto": {
        "type": "object",
        "properties": {
          "reportsTenant": {
            "$ref": "#/components/schemas/ReportsManagerDto"
          },
          "countryName": {
            "type": "string",
            "nullable": true
          },
          "stateName": {
            "type": "string",
            "nullable": true
          },
          "cityName": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "PagedResultDtoOfGetReportsManagerForViewDto": {
        "type": "object",
        "properties": {
          "totalCount": {
            "type": "integer",
            "format": "int32"
          },
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/GetReportsManagerForViewDto"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ReportsTenantDto": {
        "type": "object",
        "properties": {
          "creationTime": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "subscriptionEndDateUtc": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "seniorManagerName": {
            "type": "string",
            "nullable": true
          },
          "seniorManagerSurname": {
            "type": "string",
            "nullable": true
          },
          "seniorManagerPhoneNumber": {
            "type": "string",
            "nullable": true
          },
          "adminEmailAddress": {
            "type": "string",
            "nullable": true
          },
          "address": {
            "type": "string",
            "nullable": true
          },
          "tenancyName": {
            "type": "string",
            "nullable": true
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "isActive": {
            "type": "boolean"
          },
          "countryId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "stateId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "cityId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "id": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "GetReportsTenantForViewDto": {
        "type": "object",
        "properties": {
          "reportsTenant": {
            "$ref": "#/components/schemas/ReportsTenantDto"
          },
          "countryName": {
            "type": "string",
            "nullable": true
          },
          "stateName": {
            "type": "string",
            "nullable": true
          },
          "cityName": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "PagedResultDtoOfGetReportsTenantForViewDto": {
        "type": "object",
        "properties": {
          "totalCount": {
            "type": "integer",
            "format": "int32"
          },
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/GetReportsTenantForViewDto"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "PagedResultDtoOfGetRequestForViewDto": {
        "type": "object",
        "properties": {
          "totalCount": {
            "type": "integer",
            "format": "int32"
          },
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/GetRequestForViewDto"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "CreateOrEditRequestDto": {
        "type": "object",
        "properties": {
          "requestType": {
            "$ref": "#/components/schemas/RequestType"
          },
          "from": {
            "type": "string",
            "format": "date-time"
          },
          "to": {
            "type": "string",
            "format": "date-time"
          },
          "comment": {
            "type": "string",
            "nullable": true
          },
          "status": {
            "$ref": "#/components/schemas/RequestStatus"
          },
          "substituteUserId": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "id": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "GetRequestForEditOutput": {
        "type": "object",
        "properties": {
          "request": {
            "$ref": "#/components/schemas/CreateOrEditRequestDto"
          },
          "userName": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "RequestUserLookupTableDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "displayName": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "PagedResultDtoOfRequestUserLookupTableDto": {
        "type": "object",
        "properties": {
          "totalCount": {
            "type": "integer",
            "format": "int32"
          },
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/RequestUserLookupTableDto"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "#/definitions/String": {
        "type": "string"
      },
      "RoleListDto": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "nullable": true
          },
          "displayName": {
            "type": "string",
            "nullable": true
          },
          "isStatic": {
            "type": "boolean"
          },
          "isDefault": {
            "type": "boolean"
          },
          "creationTime": {
            "type": "string",
            "format": "date-time"
          },
          "id": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "ListResultDtoOfRoleListDto": {
        "type": "object",
        "properties": {
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/RoleListDto"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "RoleEditDto": {
        "required": [
          "displayName"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "displayName": {
            "type": "string"
          },
          "isDefault": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "FlatPermissionDto": {
        "type": "object",
        "properties": {
          "parentName": {
            "type": "string",
            "nullable": true
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "displayName": {
            "type": "string",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "isGrantedByDefault": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "GetRoleForEditOutput": {
        "type": "object",
        "properties": {
          "role": {
            "$ref": "#/components/schemas/RoleEditDto"
          },
          "permissions": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/FlatPermissionDto"
            },
            "nullable": true
          },
          "grantedPermissionNames": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "CreateOrUpdateRoleInput": {
        "required": [
          "grantedPermissionNames",
          "role"
        ],
        "type": "object",
        "properties": {
          "role": {
            "$ref": "#/components/schemas/RoleEditDto"
          },
          "grantedPermissionNames": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        },
        "additionalProperties": false
      },
      "UserLoginInfoDto": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "nullable": true
          },
          "surname": {
            "type": "string",
            "nullable": true
          },
          "userName": {
            "type": "string",
            "nullable": true
          },
          "emailAddress": {
            "type": "string",
            "nullable": true
          },
          "profilePictureId": {
            "type": "string",
            "nullable": true
          },
          "id": {
            "type": "integer",
            "format": "int64"
          }
        },
        "additionalProperties": false
      },
      "SubscriptionPaymentType": {
        "enum": [
          0,
          1,
          2
        ],
        "type": "integer",
        "format": "int32",
        "x-enumNames": [
          "Manual",
          "RecurringAutomatic",
          "RecurringManual"
        ]
      },
      "EditionInfoDto": {
        "type": "object",
        "properties": {
          "displayName": {
            "type": "string",
            "nullable": true
          },
          "trialDayCount": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "monthlyPrice": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "annualPrice": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "isHighestEdition": {
            "type": "boolean"
          },
          "isFree": {
            "type": "boolean"
          },
          "id": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "TenantLoginInfoDto": {
        "type": "object",
        "properties": {
          "tenancyName": {
            "type": "string",
            "nullable": true
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "logoId": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "logoFileType": {
            "type": "string",
            "nullable": true
          },
          "customCssId": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "subscriptionEndDateUtc": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "isInTrialPeriod": {
            "type": "boolean"
          },
          "subscriptionPaymentType": {
            "$ref": "#/components/schemas/SubscriptionPaymentType"
          },
          "edition": {
            "$ref": "#/components/schemas/EditionInfoDto"
          },
          "creationTime": {
            "type": "string",
            "format": "date-time"
          },
          "dayCount": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "subscriptionDateString": {
            "type": "string",
            "nullable": true
          },
          "creationTimeString": {
            "type": "string",
            "nullable": true
          },
          "id": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "ApplicationInfoDto": {
        "type": "object",
        "properties": {
          "version": {
            "type": "string",
            "nullable": true
          },
          "releaseDate": {
            "type": "string",
            "format": "date-time"
          },
          "currency": {
            "type": "string",
            "nullable": true
          },
          "currencySign": {
            "type": "string",
            "nullable": true
          },
          "allowTenantsToChangeEmailSettings": {
            "type": "boolean"
          },
          "userDelegationIsEnabled": {
            "type": "boolean"
          },
          "features": {
            "type": "object",
            "additionalProperties": {
              "type": "boolean"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ThemeLayoutSettingsDto": {
        "type": "object",
        "properties": {
          "layoutType": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ThemeHeaderSettingsDto": {
        "type": "object",
        "properties": {
          "desktopFixedHeader": {
            "type": "boolean"
          },
          "mobileFixedHeader": {
            "type": "boolean"
          },
          "headerSkin": {
            "type": "string",
            "nullable": true
          },
          "minimizeDesktopHeaderType": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ThemeSubHeaderSettingsDto": {
        "type": "object",
        "properties": {
          "fixedSubHeader": {
            "type": "boolean"
          },
          "subheaderStyle": {
            "type": "string",
            "nullable": true
          },
          "subheaderSize": {
            "type": "integer",
            "format": "int32"
          },
          "titleStlye": {
            "type": "string",
            "nullable": true
          },
          "containerStyle": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ThemeMenuSettingsDto": {
        "type": "object",
        "properties": {
          "position": {
            "type": "string",
            "nullable": true
          },
          "asideSkin": {
            "type": "string",
            "nullable": true
          },
          "fixedAside": {
            "type": "boolean"
          },
          "allowAsideMinimizing": {
            "type": "boolean"
          },
          "defaultMinimizedAside": {
            "type": "boolean"
          },
          "submenuToggle": {
            "type": "string",
            "nullable": true
          },
          "searchActive": {
            "type": "boolean"
          },
          "enableSecondary": {
            "type": "boolean"
          },
          "hoverableAside": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "ThemeFooterSettingsDto": {
        "type": "object",
        "properties": {
          "fixedFooter": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "ThemeSettingsDto": {
        "type": "object",
        "properties": {
          "theme": {
            "type": "string",
            "nullable": true
          },
          "layout": {
            "$ref": "#/components/schemas/ThemeLayoutSettingsDto"
          },
          "header": {
            "$ref": "#/components/schemas/ThemeHeaderSettingsDto"
          },
          "subHeader": {
            "$ref": "#/components/schemas/ThemeSubHeaderSettingsDto"
          },
          "menu": {
            "$ref": "#/components/schemas/ThemeMenuSettingsDto"
          },
          "footer": {
            "$ref": "#/components/schemas/ThemeFooterSettingsDto"
          }
        },
        "additionalProperties": false
      },
      "UiCustomizationSettingsDto": {
        "type": "object",
        "properties": {
          "baseSettings": {
            "$ref": "#/components/schemas/ThemeSettingsDto"
          },
          "isLeftMenuUsed": {
            "type": "boolean"
          },
          "isTopMenuUsed": {
            "type": "boolean"
          },
          "isTabMenuUsed": {
            "type": "boolean"
          },
          "allowMenuScroll": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "GetCurrentLoginInformationsOutput": {
        "type": "object",
        "properties": {
          "user": {
            "$ref": "#/components/schemas/UserLoginInfoDto"
          },
          "impersonatorUser": {
            "$ref": "#/components/schemas/UserLoginInfoDto"
          },
          "tenant": {
            "$ref": "#/components/schemas/TenantLoginInfoDto"
          },
          "impersonatorTenant": {
            "$ref": "#/components/schemas/TenantLoginInfoDto"
          },
          "application": {
            "$ref": "#/components/schemas/ApplicationInfoDto"
          },
          "theme": {
            "$ref": "#/components/schemas/UiCustomizationSettingsDto"
          }
        },
        "additionalProperties": false
      },
      "UpdateUserSignInTokenOutput": {
        "type": "object",
        "properties": {
          "signInToken": {
            "type": "string",
            "nullable": true
          },
          "encodedUserId": {
            "type": "string",
            "nullable": true
          },
          "encodedTenantId": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "StateDto": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "nullable": true
          },
          "countryCode": {
            "type": "string",
            "nullable": true
          },
          "stateCode": {
            "type": "string",
            "nullable": true
          },
          "countryId": {
            "type": "integer",
            "format": "int32"
          },
          "id": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "GetStateForViewDto": {
        "type": "object",
        "properties": {
          "state": {
            "$ref": "#/components/schemas/StateDto"
          },
          "countryName": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "PagedResultDtoOfGetStateForViewDto": {
        "type": "object",
        "properties": {
          "totalCount": {
            "type": "integer",
            "format": "int32"
          },
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/GetStateForViewDto"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ListResultDtoOfGetStateForViewDto": {
        "type": "object",
        "properties": {
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/GetStateForViewDto"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "CreateOrEditStateDto": {
        "required": [
          "name"
        ],
        "type": "object",
        "properties": {
          "name": {
            "maxLength": 128,
            "minLength": 1,
            "type": "string"
          },
          "countryCode": {
            "maxLength": 50,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "stateCode": {
            "maxLength": 50,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "countryId": {
            "type": "integer",
            "format": "int32"
          },
          "id": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "GetStateForEditOutput": {
        "type": "object",
        "properties": {
          "state": {
            "$ref": "#/components/schemas/CreateOrEditStateDto"
          },
          "countryName": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "StateCountryLookupTableDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "displayName": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "PagedResultDtoOfStateCountryLookupTableDto": {
        "type": "object",
        "properties": {
          "totalCount": {
            "type": "integer",
            "format": "int32"
          },
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/StateCountryLookupTableDto"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "StripeConfigurationDto": {
        "type": "object",
        "properties": {
          "publishableKey": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "StripeCreatePaymentSessionInput": {
        "type": "object",
        "properties": {
          "paymentId": {
            "type": "integer",
            "format": "int64"
          },
          "successUrl": {
            "type": "string",
            "nullable": true
          },
          "cancelUrl": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "StripePaymentResultOutput": {
        "type": "object",
        "properties": {
          "paymentDone": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "EditionSelectDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "editionType": {
            "$ref": "#/components/schemas/EditionType"
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "displayName": {
            "type": "string",
            "nullable": true
          },
          "expiringEditionId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "price": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "dayCount": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "trialDayCount": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "waitingDayAfterExpire": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "isFree": {
            "type": "boolean"
          },
          "isActive": {
            "type": "boolean"
          },
          "additionalData": {
            "type": "object",
            "properties": {
              "Paypal": {
                "type": "object",
                "additionalProperties": {
                  "type": "string"
                }
              },
              "Stripe": {
                "type": "object",
                "additionalProperties": {
                  "type": "string"
                }
              },
              "Shetab": {
                "type": "object",
                "additionalProperties": {
                  "type": "string"
                }
              },
              "DirectRequest": {
                "type": "object",
                "additionalProperties": {
                  "type": "string"
                }
              }
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "SubscriptionDeviceEditionDto": {
        "type": "object",
        "properties": {
          "tenantId": {
            "type": "integer",
            "format": "int32"
          },
          "deviceId": {
            "type": "integer",
            "format": "int64"
          },
          "editionSelect": {
            "$ref": "#/components/schemas/EditionSelectDto"
          }
        },
        "additionalProperties": false
      },
      "GetSummaryEmployeeReportForViewDto": {
        "type": "object",
        "properties": {
          "summaryEmployeeReport": {
            "$ref": "#/components/schemas/SummaryEmployeeReportDto"
          },
          "userId": {
            "type": "integer",
            "format": "int64"
          },
          "userName": {
            "type": "string",
            "nullable": true
          },
          "workScheduleName": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "PagedResultDtoOfGetSummaryEmployeeReportForViewDto": {
        "type": "object",
        "properties": {
          "totalCount": {
            "type": "integer",
            "format": "int32"
          },
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/GetSummaryEmployeeReportForViewDto"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "SupportType": {
        "enum": [
          1,
          2,
          3,
          4
        ],
        "type": "integer",
        "format": "int32",
        "x-enumNames": [
          "Support",
          "RenewSubscription",
          "IncreaseUserPackage",
          "IncreaseLocation"
        ]
      },
      "SupportStatus": {
        "enum": [
          1,
          2,
          3
        ],
        "type": "integer",
        "format": "int32",
        "x-enumNames": [
          "NewRequest",
          "Answered",
          "Rejected"
        ]
      },
      "SupportDto": {
        "type": "object",
        "properties": {
          "requestSubject": {
            "type": "string",
            "nullable": true
          },
          "requestType": {
            "$ref": "#/components/schemas/SupportType"
          },
          "requestStatus": {
            "$ref": "#/components/schemas/SupportStatus"
          },
          "requestDescription": {
            "type": "string",
            "nullable": true
          },
          "additionalDescription": {
            "type": "string",
            "nullable": true
          },
          "deviceId": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "requestUserId": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "supportParentId": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "id": {
            "type": "integer",
            "format": "int64"
          }
        },
        "additionalProperties": false
      },
      "ListResultDtoOfGetSupportForViewDto": {
        "type": "object",
        "properties": {
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/GetSupportForViewDto"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "GetSupportForViewDto": {
        "type": "object",
        "properties": {
          "support": {
            "$ref": "#/components/schemas/SupportDto"
          },
          "childAnswers": {
            "$ref": "#/components/schemas/ListResultDtoOfGetSupportForViewDto"
          },
          "tenant": {
            "type": "string",
            "nullable": true
          },
          "deviceName": {
            "type": "string",
            "nullable": true
          },
          "userName": {
            "type": "string",
            "nullable": true
          },
          "supportRequestSubject": {
            "type": "string",
            "nullable": true
          },
          "creationTime": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "PagedResultDtoOfGetSupportForViewDto": {
        "type": "object",
        "properties": {
          "totalCount": {
            "type": "integer",
            "format": "int32"
          },
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/GetSupportForViewDto"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "CreateOrEditSupportDto": {
        "required": [
          "requestDescription",
          "requestSubject"
        ],
        "type": "object",
        "properties": {
          "requestSubject": {
            "maxLength": 1024,
            "minLength": 1,
            "type": "string"
          },
          "requestDescription": {
            "maxLength": 2048,
            "minLength": 1,
            "type": "string"
          },
          "requestType": {
            "$ref": "#/components/schemas/SupportType"
          },
          "requestStatus": {
            "$ref": "#/components/schemas/SupportStatus"
          },
          "additionalDescription": {
            "type": "string",
            "nullable": true
          },
          "deviceId": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "requestUserId": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "supportParentId": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "id": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "SupportDeviceLookupTableDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "displayName": {
            "type": "string",
            "nullable": true
          },
          "serialNumber": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "PagedResultDtoOfSupportDeviceLookupTableDto": {
        "type": "object",
        "properties": {
          "totalCount": {
            "type": "integer",
            "format": "int32"
          },
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SupportDeviceLookupTableDto"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "SupportUserLookupTableDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "displayName": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "PagedResultDtoOfSupportUserLookupTableDto": {
        "type": "object",
        "properties": {
          "totalCount": {
            "type": "integer",
            "format": "int32"
          },
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SupportUserLookupTableDto"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "SupportSupportLookupTableDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "displayName": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "PagedResultDtoOfSupportSupportLookupTableDto": {
        "type": "object",
        "properties": {
          "totalCount": {
            "type": "integer",
            "format": "int32"
          },
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SupportSupportLookupTableDto"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "TenantListDto": {
        "type": "object",
        "properties": {
          "tenancyName": {
            "type": "string",
            "nullable": true
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "editionDisplayName": {
            "type": "string",
            "nullable": true
          },
          "connectionString": {
            "type": "string",
            "nullable": true
          },
          "isActive": {
            "type": "boolean"
          },
          "creationTime": {
            "type": "string",
            "format": "date-time"
          },
          "subscriptionEndDateUtc": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "editionId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "isInTrialPeriod": {
            "type": "boolean"
          },
          "seniorManagerUserId": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "seniorManagerName": {
            "type": "string",
            "nullable": true
          },
          "seniorManagerSurname": {
            "type": "string",
            "nullable": true
          },
          "seniorManagerPhoneNumber": {
            "type": "string",
            "nullable": true
          },
          "adminEmailAddress": {
            "type": "string",
            "nullable": true
          },
          "countryId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "stateId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "cityId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "address": {
            "type": "string",
            "nullable": true
          },
          "latitude": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "longitude": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "businessTypes": {
            "type": "string",
            "nullable": true
          },
          "hasWebService": {
            "type": "boolean"
          },
          "lastEnterExitTime": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "purchasedUsers": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "usedUsers": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "isVIP": {
            "type": "boolean"
          },
          "id": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "PagedResultDtoOfTenantListDto": {
        "type": "object",
        "properties": {
          "totalCount": {
            "type": "integer",
            "format": "int32"
          },
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TenantListDto"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "CreateTenantInput": {
        "required": [
          "adminEmailAddress",
          "name",
          "tenancyName"
        ],
        "type": "object",
        "properties": {
          "tenancyName": {
            "maxLength": 64,
            "minLength": 0,
            "pattern": "^[a-zA-Z][a-zA-Z0-9_-]{1,}$",
            "type": "string"
          },
          "name": {
            "maxLength": 128,
            "minLength": 0,
            "type": "string"
          },
          "adminEmailAddress": {
            "maxLength": 256,
            "minLength": 0,
            "type": "string",
            "format": "email"
          },
          "adminPassword": {
            "maxLength": 128,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "connectionString": {
            "maxLength": 1024,
            "type": "string",
            "nullable": true
          },
          "shouldChangePasswordOnNextLogin": {
            "type": "boolean"
          },
          "sendActivationEmail": {
            "type": "boolean"
          },
          "sendActivationSMS": {
            "type": "boolean"
          },
          "editionId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "isActive": {
            "type": "boolean"
          },
          "subscriptionEndDateUtc": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "isInTrialPeriod": {
            "type": "boolean"
          },
          "seniorManagerName": {
            "maxLength": 128,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "seniorManagerSurname": {
            "maxLength": 128,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "seniorManagerPhoneNumber": {
            "maxLength": 50,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "countryId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "stateId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "cityId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "address": {
            "maxLength": 1024,
            "type": "string",
            "nullable": true
          },
          "latitude": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "longitude": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "businessTypes": {
            "type": "string",
            "nullable": true
          },
          "hasWebService": {
            "type": "boolean"
          },
          "lastEnterExitTime": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "purchasedUsers": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "usedUsers": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "isVIP": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "TenantEditDto": {
        "required": [
          "adminEmailAddress",
          "name",
          "tenancyName"
        ],
        "type": "object",
        "properties": {
          "tenancyName": {
            "maxLength": 64,
            "minLength": 0,
            "type": "string"
          },
          "name": {
            "maxLength": 128,
            "minLength": 0,
            "type": "string"
          },
          "connectionString": {
            "type": "string",
            "nullable": true
          },
          "editionId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "isActive": {
            "type": "boolean"
          },
          "subscriptionEndDateUtc": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "isInTrialPeriod": {
            "type": "boolean"
          },
          "seniorManagerName": {
            "maxLength": 128,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "seniorManagerSurname": {
            "maxLength": 128,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "seniorManagerPhoneNumber": {
            "maxLength": 50,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "adminEmailAddress": {
            "maxLength": 256,
            "minLength": 0,
            "type": "string",
            "format": "email"
          },
          "countryId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "stateId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "cityId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "address": {
            "maxLength": 1024,
            "type": "string",
            "nullable": true
          },
          "latitude": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "longitude": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "businessTypes": {
            "type": "string",
            "nullable": true
          },
          "hasWebService": {
            "type": "boolean"
          },
          "lastEnterExitTime": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "purchasedUsers": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "usedUsers": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "isVIP": {
            "type": "boolean"
          },
          "id": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "GetTenantFeaturesEditOutput": {
        "type": "object",
        "properties": {
          "featureValues": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/NameValueDto"
            },
            "nullable": true
          },
          "features": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/FlatFeatureDto"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "UpdateTenantFeaturesInput": {
        "required": [
          "featureValues"
        ],
        "type": "object",
        "properties": {
          "id": {
            "maximum": 2147483647,
            "minimum": 1,
            "type": "integer",
            "format": "int32"
          },
          "featureValues": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/NameValueDto"
            }
          }
        },
        "additionalProperties": false
      },
      "EntityDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "ChangeTenantAdminInput": {
        "required": [
          "oldUserId",
          "tenantId",
          "userId"
        ],
        "type": "object",
        "properties": {
          "tenantId": {
            "type": "integer",
            "format": "int32"
          },
          "userId": {
            "type": "integer",
            "format": "int64"
          },
          "oldUserId": {
            "type": "integer",
            "format": "int64"
          },
          "isOldManagerDeactive": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "MemberActivity": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "nullable": true
          },
          "earnings": {
            "type": "string",
            "nullable": true
          },
          "cases": {
            "type": "integer",
            "format": "int32"
          },
          "closed": {
            "type": "integer",
            "format": "int32"
          },
          "rate": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "GetMemberActivityOutput": {
        "type": "object",
        "properties": {
          "memberActivities": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/MemberActivity"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "SalesSummaryDatePeriod": {
        "enum": [
          1,
          2,
          3
        ],
        "type": "integer",
        "format": "int32",
        "x-enumNames": [
          "Daily",
          "Weekly",
          "Monthly"
        ]
      },
      "SalesSummaryData": {
        "type": "object",
        "properties": {
          "period": {
            "type": "string",
            "nullable": true
          },
          "sales": {
            "type": "integer",
            "format": "int32"
          },
          "profit": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "GetDashboardDataOutput": {
        "type": "object",
        "properties": {
          "totalProfit": {
            "type": "integer",
            "format": "int32"
          },
          "newFeedbacks": {
            "type": "integer",
            "format": "int32"
          },
          "newOrders": {
            "type": "integer",
            "format": "int32"
          },
          "newUsers": {
            "type": "integer",
            "format": "int32"
          },
          "salesSummary": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SalesSummaryData"
            },
            "nullable": true
          },
          "totalSales": {
            "type": "integer",
            "format": "int32"
          },
          "revenue": {
            "type": "integer",
            "format": "int32"
          },
          "expenses": {
            "type": "integer",
            "format": "int32"
          },
          "growth": {
            "type": "integer",
            "format": "int32"
          },
          "transactionPercent": {
            "type": "integer",
            "format": "int32"
          },
          "newVisitPercent": {
            "type": "integer",
            "format": "int32"
          },
          "bouncePercent": {
            "type": "integer",
            "format": "int32"
          },
          "dailySales": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int32"
            },
            "nullable": true
          },
          "profitShares": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int32"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "GetTopStatsOutput": {
        "type": "object",
        "properties": {
          "totalProfit": {
            "type": "integer",
            "format": "int32"
          },
          "newFeedbacks": {
            "type": "integer",
            "format": "int32"
          },
          "newOrders": {
            "type": "integer",
            "format": "int32"
          },
          "newUsers": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "GetProfitShareOutput": {
        "type": "object",
        "properties": {
          "profitShares": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int32"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "GetDailySalesOutput": {
        "type": "object",
        "properties": {
          "dailySales": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int32"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "GetSalesSummaryOutput": {
        "type": "object",
        "properties": {
          "totalSales": {
            "type": "integer",
            "format": "int32"
          },
          "revenue": {
            "type": "integer",
            "format": "int32"
          },
          "expenses": {
            "type": "integer",
            "format": "int32"
          },
          "growth": {
            "type": "integer",
            "format": "int32"
          },
          "salesSummary": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SalesSummaryData"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "RegionalStatCountry": {
        "type": "object",
        "properties": {
          "countryName": {
            "type": "string",
            "nullable": true
          },
          "sales": {
            "type": "number",
            "format": "double"
          },
          "change": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int32"
            },
            "nullable": true
          },
          "averagePrice": {
            "type": "number",
            "format": "double"
          },
          "totalPrice": {
            "type": "number",
            "format": "double"
          }
        },
        "additionalProperties": false
      },
      "GetRegionalStatsOutput": {
        "type": "object",
        "properties": {
          "stats": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/RegionalStatCountry"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "GetGeneralStatsOutput": {
        "type": "object",
        "properties": {
          "transactionPercent": {
            "type": "integer",
            "format": "int32"
          },
          "newVisitPercent": {
            "type": "integer",
            "format": "int32"
          },
          "bouncePercent": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "TenantDeviceDto": {
        "type": "object",
        "properties": {
          "deviceId": {
            "type": "integer",
            "format": "int64"
          },
          "tenantId": {
            "type": "integer",
            "format": "int32"
          },
          "creationTime": {
            "type": "string",
            "format": "date-time"
          },
          "id": {
            "type": "integer",
            "format": "int64"
          }
        },
        "additionalProperties": false
      },
      "GetTenantDeviceForViewDto": {
        "type": "object",
        "properties": {
          "tenantDevice": {
            "$ref": "#/components/schemas/TenantDeviceDto"
          },
          "deviceSerialNumber": {
            "type": "string",
            "nullable": true
          },
          "tenantName": {
            "type": "string",
            "nullable": true
          },
          "tenancyCodeName": {
            "type": "string",
            "nullable": true
          },
          "deviceName": {
            "type": "string",
            "nullable": true
          },
          "deviceQRCode": {
            "type": "string",
            "nullable": true
          },
          "deviceTypeName": {
            "type": "string",
            "nullable": true
          },
          "deviceStatus": {
            "$ref": "#/components/schemas/DeviceStatus"
          },
          "editionDisplayName": {
            "type": "string",
            "nullable": true
          },
          "price": {
            "type": "number",
            "format": "double"
          },
          "dayCount": {
            "type": "integer",
            "format": "int32"
          },
          "maxUserCount": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "maxLocationCount": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "usedUserCount": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "usedLocationCount": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "purchasingResourceTitle": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "PagedResultDtoOfGetTenantDeviceForViewDto": {
        "type": "object",
        "properties": {
          "totalCount": {
            "type": "integer",
            "format": "int32"
          },
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/GetTenantDeviceForViewDto"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "CreateOrEditTenantDeviceDto": {
        "type": "object",
        "properties": {
          "deviceId": {
            "type": "integer",
            "format": "int64"
          },
          "tenantId": {
            "type": "integer",
            "format": "int32"
          },
          "id": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "TenantDeviceDeviceLookupTableDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "displayName": {
            "type": "string",
            "nullable": true
          },
          "deviceSerialNumber": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "PagedResultDtoOfTenantDeviceDeviceLookupTableDto": {
        "type": "object",
        "properties": {
          "totalCount": {
            "type": "integer",
            "format": "int32"
          },
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TenantDeviceDeviceLookupTableDto"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "TenantDeviceTenantLookupTableDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "displayName": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "PagedResultDtoOfTenantDeviceTenantLookupTableDto": {
        "type": "object",
        "properties": {
          "totalCount": {
            "type": "integer",
            "format": "int32"
          },
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TenantDeviceTenantLookupTableDto"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "SubscriptionStartType": {
        "enum": [
          1,
          2,
          3
        ],
        "type": "integer",
        "format": "int32",
        "x-enumNames": [
          "Free",
          "Trial",
          "Paid"
        ]
      },
      "RegisterTenantInput": {
        "required": [
          "adminEmailAddress",
          "name",
          "tenancyName"
        ],
        "type": "object",
        "properties": {
          "tenancyName": {
            "maxLength": 64,
            "minLength": 0,
            "type": "string"
          },
          "name": {
            "maxLength": 64,
            "minLength": 0,
            "type": "string"
          },
          "adminEmailAddress": {
            "maxLength": 256,
            "minLength": 0,
            "type": "string",
            "format": "email"
          },
          "adminPassword": {
            "maxLength": 32,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "captchaResponse": {
            "type": "string",
            "nullable": true
          },
          "subscriptionStartType": {
            "$ref": "#/components/schemas/SubscriptionStartType"
          },
          "editionId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "deviceId": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "seniorManagerName": {
            "maxLength": 128,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "seniorManagerSurname": {
            "maxLength": 128,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "seniorManagerPhoneNumber": {
            "maxLength": 50,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "countryId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "stateId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "cityId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "address": {
            "maxLength": 1024,
            "type": "string",
            "nullable": true
          },
          "latitude": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "longitude": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "businessTypes": {
            "type": "string",
            "nullable": true
          },
          "hasWebService": {
            "type": "boolean"
          },
          "lastEnterExitTime": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "purchasedUsers": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "usedUsers": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "isVIP": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "RegisterTenantOutput": {
        "type": "object",
        "properties": {
          "tenantId": {
            "type": "integer",
            "format": "int32"
          },
          "tenancyName": {
            "type": "string",
            "nullable": true
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "userName": {
            "type": "string",
            "nullable": true
          },
          "emailAddress": {
            "type": "string",
            "nullable": true
          },
          "isTenantActive": {
            "type": "boolean"
          },
          "isActive": {
            "type": "boolean"
          },
          "isEmailConfirmationRequired": {
            "type": "boolean"
          },
          "seniorManagerName": {
            "type": "string",
            "nullable": true
          },
          "seniorManagerSurname": {
            "type": "string",
            "nullable": true
          },
          "seniorManagerPhoneNumber": {
            "type": "string",
            "nullable": true
          },
          "countryId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "stateId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "cityId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "address": {
            "type": "string",
            "nullable": true
          },
          "latitude": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "longitude": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "businessTypes": {
            "type": "string",
            "nullable": true
          },
          "hasWebService": {
            "type": "boolean"
          },
          "lastEnterExitTime": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "purchasedUsers": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "usedUsers": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "isVIP": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "FlatFeatureSelectDto": {
        "type": "object",
        "properties": {
          "parentName": {
            "type": "string",
            "nullable": true
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "displayName": {
            "type": "string",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "defaultValue": {
            "type": "string",
            "nullable": true
          },
          "inputType": {
            "$ref": "#/components/schemas/IInputType"
          },
          "textHtmlColor": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "EditionWithFeaturesDto": {
        "type": "object",
        "properties": {
          "edition": {
            "$ref": "#/components/schemas/EditionSelectDto"
          },
          "featureValues": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/NameValueDto"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "EditionsSelectOutput": {
        "type": "object",
        "properties": {
          "allFeatures": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/FlatFeatureSelectDto"
            },
            "nullable": true
          },
          "editionsWithFeatures": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/EditionWithFeaturesDto"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "TenantUserManagementSettingsEditDto": {
        "type": "object",
        "properties": {
          "allowSelfRegistration": {
            "type": "boolean"
          },
          "isNewRegisteredUserActiveByDefault": {
            "type": "boolean"
          },
          "isEmailConfirmationRequiredForLogin": {
            "type": "boolean"
          },
          "useCaptchaOnRegistration": {
            "type": "boolean"
          },
          "useCaptchaOnLogin": {
            "type": "boolean"
          },
          "isCookieConsentEnabled": {
            "type": "boolean"
          },
          "isQuickThemeSelectEnabled": {
            "type": "boolean"
          },
          "allowUsingGravatarProfilePicture": {
            "type": "boolean"
          },
          "sessionTimeOutSettings": {
            "$ref": "#/components/schemas/SessionTimeOutSettingsEditDto"
          }
        },
        "additionalProperties": false
      },
      "TenantEmailSettingsEditDto": {
        "type": "object",
        "properties": {
          "useHostDefaultEmailSettings": {
            "type": "boolean"
          },
          "defaultFromAddress": {
            "type": "string",
            "nullable": true
          },
          "defaultFromDisplayName": {
            "type": "string",
            "nullable": true
          },
          "smtpHost": {
            "type": "string",
            "nullable": true
          },
          "smtpPort": {
            "type": "integer",
            "format": "int32"
          },
          "smtpUserName": {
            "type": "string",
            "nullable": true
          },
          "smtpPassword": {
            "type": "string",
            "nullable": true
          },
          "smtpDomain": {
            "type": "string",
            "nullable": true
          },
          "smtpEnableSsl": {
            "type": "boolean"
          },
          "smtpUseDefaultCredentials": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "LdapSettingsEditDto": {
        "type": "object",
        "properties": {
          "isModuleEnabled": {
            "type": "boolean"
          },
          "isEnabled": {
            "type": "boolean"
          },
          "domain": {
            "type": "string",
            "nullable": true
          },
          "userName": {
            "type": "string",
            "nullable": true
          },
          "password": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "TenantBillingSettingsEditDto": {
        "type": "object",
        "properties": {
          "legalName": {
            "type": "string",
            "nullable": true
          },
          "address": {
            "type": "string",
            "nullable": true
          },
          "taxVatNo": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "TenantFooterSettingsEditDto": {
        "type": "object",
        "properties": {
          "footerBody": {
            "type": "string",
            "nullable": true
          },
          "copyrightText": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "TenantFileProtocolSettingsEditDto": {
        "type": "object",
        "properties": {
          "isFTPProtocol": {
            "type": "boolean"
          },
          "ftpRootAddress": {
            "type": "string",
            "nullable": true
          },
          "ftpUser": {
            "type": "string",
            "nullable": true
          },
          "ftpPassword": {
            "type": "string",
            "nullable": true
          },
          "isFileProtocol": {
            "type": "boolean"
          },
          "path": {
            "type": "string",
            "nullable": true
          },
          "mediaRootAddress": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "TenantOtherSettingsEditDto": {
        "type": "object",
        "properties": {
          "isQuickThemeSelectEnabled": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "TenantSettingsEditDto": {
        "required": [
          "security",
          "userManagement"
        ],
        "type": "object",
        "properties": {
          "general": {
            "$ref": "#/components/schemas/GeneralSettingsEditDto"
          },
          "userManagement": {
            "$ref": "#/components/schemas/TenantUserManagementSettingsEditDto"
          },
          "email": {
            "$ref": "#/components/schemas/TenantEmailSettingsEditDto"
          },
          "ldap": {
            "$ref": "#/components/schemas/LdapSettingsEditDto"
          },
          "security": {
            "$ref": "#/components/schemas/SecuritySettingsEditDto"
          },
          "billing": {
            "$ref": "#/components/schemas/TenantBillingSettingsEditDto"
          },
          "footer": {
            "$ref": "#/components/schemas/TenantFooterSettingsEditDto"
          },
          "fileProtocol": {
            "$ref": "#/components/schemas/TenantFileProtocolSettingsEditDto"
          },
          "otherSettings": {
            "$ref": "#/components/schemas/TenantOtherSettingsEditDto"
          },
          "externalLoginProviderSettings": {
            "$ref": "#/components/schemas/ExternalLoginProviderSettingsEditDto"
          }
        },
        "additionalProperties": false
      },
      "SettingScopes": {
        "enum": [
          1,
          2,
          4,
          7
        ],
        "type": "integer",
        "format": "int32",
        "x-enumNames": [
          "Application",
          "Tenant",
          "User",
          "All"
        ]
      },
      "ListResultDtoOfNameValueDto": {
        "type": "object",
        "properties": {
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/NameValueDto"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "AuthenticateByTenantModel": {
        "required": [
          "password",
          "tenancyName",
          "userNameOrEmailAddress"
        ],
        "type": "object",
        "properties": {
          "tenancyName": {
            "type": "string"
          },
          "userNameOrEmailAddress": {
            "maxLength": 256,
            "type": "string"
          },
          "password": {
            "maxLength": 32,
            "type": "string"
          },
          "twoFactorVerificationCode": {
            "type": "string",
            "nullable": true
          },
          "rememberClient": {
            "type": "boolean"
          },
          "twoFactorRememberClientToken": {
            "type": "string",
            "nullable": true
          },
          "singleSignIn": {
            "type": "boolean",
            "nullable": true
          },
          "returnUrl": {
            "type": "string",
            "nullable": true
          },
          "captchaResponse": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "AuthenticateResultModel": {
        "type": "object",
        "properties": {
          "accessToken": {
            "type": "string",
            "nullable": true
          },
          "encryptedAccessToken": {
            "type": "string",
            "nullable": true
          },
          "expireInSeconds": {
            "type": "integer",
            "format": "int32"
          },
          "shouldResetPassword": {
            "type": "boolean"
          },
          "passwordResetCode": {
            "type": "string",
            "nullable": true
          },
          "userId": {
            "type": "integer",
            "format": "int64"
          },
          "requiresTwoFactorVerification": {
            "type": "boolean"
          },
          "twoFactorAuthProviders": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          },
          "twoFactorRememberClientToken": {
            "type": "string",
            "nullable": true
          },
          "returnUrl": {
            "type": "string",
            "nullable": true
          },
          "refreshToken": {
            "type": "string",
            "nullable": true
          },
          "refreshTokenExpireInSeconds": {
            "type": "integer",
            "format": "int32"
          },
          "tenantId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "AuthenticateModel": {
        "required": [
          "password",
          "userNameOrEmailAddress"
        ],
        "type": "object",
        "properties": {
          "userNameOrEmailAddress": {
            "maxLength": 256,
            "type": "string"
          },
          "password": {
            "maxLength": 32,
            "type": "string"
          },
          "twoFactorVerificationCode": {
            "type": "string",
            "nullable": true
          },
          "rememberClient": {
            "type": "boolean"
          },
          "twoFactorRememberClientToken": {
            "type": "string",
            "nullable": true
          },
          "singleSignIn": {
            "type": "boolean",
            "nullable": true
          },
          "returnUrl": {
            "type": "string",
            "nullable": true
          },
          "captchaResponse": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "RefreshTokenResult": {
        "type": "object",
        "properties": {
          "accessToken": {
            "type": "string",
            "nullable": true
          },
          "encryptedAccessToken": {
            "type": "string",
            "nullable": true
          },
          "expireInSeconds": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "SendTwoFactorAuthCodeModel": {
        "required": [
          "provider"
        ],
        "type": "object",
        "properties": {
          "userId": {
            "minimum": 1,
            "type": "integer",
            "format": "int64"
          },
          "provider": {
            "type": "string"
          }
        },
        "additionalProperties": false
      },
      "ImpersonatedAuthenticateResultModel": {
        "type": "object",
        "properties": {
          "accessToken": {
            "type": "string",
            "nullable": true
          },
          "encryptedAccessToken": {
            "type": "string",
            "nullable": true
          },
          "expireInSeconds": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "SwitchedAccountAuthenticateResultModel": {
        "type": "object",
        "properties": {
          "accessToken": {
            "type": "string",
            "nullable": true
          },
          "encryptedAccessToken": {
            "type": "string",
            "nullable": true
          },
          "expireInSeconds": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "ExternalLoginProviderInfoModel": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "nullable": true
          },
          "clientId": {
            "type": "string",
            "nullable": true
          },
          "additionalParams": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ExternalAuthenticateModel": {
        "required": [
          "authProvider",
          "providerAccessCode",
          "providerKey"
        ],
        "type": "object",
        "properties": {
          "authProvider": {
            "maxLength": 128,
            "type": "string"
          },
          "providerKey": {
            "maxLength": 256,
            "type": "string"
          },
          "providerAccessCode": {
            "type": "string"
          },
          "returnUrl": {
            "type": "string",
            "nullable": true
          },
          "singleSignIn": {
            "type": "boolean",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ExternalAuthenticateResultModel": {
        "type": "object",
        "properties": {
          "accessToken": {
            "type": "string",
            "nullable": true
          },
          "encryptedAccessToken": {
            "type": "string",
            "nullable": true
          },
          "expireInSeconds": {
            "type": "integer",
            "format": "int32"
          },
          "waitingForActivation": {
            "type": "boolean"
          },
          "returnUrl": {
            "type": "string",
            "nullable": true
          },
          "refreshToken": {
            "type": "string",
            "nullable": true
          },
          "refreshTokenExpireInSeconds": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "TwitterGetRequestTokenResponse": {
        "type": "object",
        "properties": {
          "token": {
            "type": "string",
            "nullable": true
          },
          "secret": {
            "type": "string",
            "nullable": true
          },
          "confirmed": {
            "type": "boolean"
          },
          "redirectUrl": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "TwitterGetAccessTokenResponse": {
        "type": "object",
        "properties": {
          "accessToken": {
            "type": "string",
            "nullable": true
          },
          "accessTokenSecret": {
            "type": "string",
            "nullable": true
          },
          "userId": {
            "type": "string",
            "nullable": true
          },
          "userName": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "UserListRoleDto": {
        "type": "object",
        "properties": {
          "roleId": {
            "type": "integer",
            "format": "int32"
          },
          "roleName": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "UserListDto": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "nullable": true
          },
          "surname": {
            "type": "string",
            "nullable": true
          },
          "userName": {
            "type": "string",
            "nullable": true
          },
          "emailAddress": {
            "type": "string",
            "nullable": true
          },
          "phoneNumber": {
            "type": "string",
            "nullable": true
          },
          "profilePictureId": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "isEmailConfirmed": {
            "type": "boolean"
          },
          "roles": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/UserListRoleDto"
            },
            "nullable": true
          },
          "isActive": {
            "type": "boolean"
          },
          "creationTime": {
            "type": "string",
            "format": "date-time"
          },
          "genderType": {
            "$ref": "#/components/schemas/GenderType"
          },
          "birthdate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "bankAccount": {
            "type": "string",
            "nullable": true
          },
          "countryId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "stateId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "cityId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "address": {
            "type": "string",
            "nullable": true
          },
          "homePhoneNumber": {
            "type": "string",
            "nullable": true
          },
          "workPhoneNumber": {
            "type": "string",
            "nullable": true
          },
          "postalCode": {
            "type": "string",
            "nullable": true
          },
          "birthCertificateNumber": {
            "type": "string",
            "nullable": true
          },
          "nationalCode": {
            "type": "string",
            "nullable": true
          },
          "degreeType": {
            "$ref": "#/components/schemas/DegreeType"
          },
          "occupation": {
            "type": "string",
            "nullable": true
          },
          "jobTitle": {
            "type": "string",
            "nullable": true
          },
          "introduceType": {
            "$ref": "#/components/schemas/IntroduceType"
          },
          "vacationTypeId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "id": {
            "type": "integer",
            "format": "int64"
          }
        },
        "additionalProperties": false
      },
      "PagedResultDtoOfUserListDto": {
        "type": "object",
        "properties": {
          "totalCount": {
            "type": "integer",
            "format": "int32"
          },
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/UserListDto"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "UserRoleDto": {
        "type": "object",
        "properties": {
          "roleId": {
            "type": "integer",
            "format": "int32"
          },
          "roleName": {
            "type": "string",
            "nullable": true
          },
          "roleDisplayName": {
            "type": "string",
            "nullable": true
          },
          "isAssigned": {
            "type": "boolean"
          },
          "inheritedFromOrganizationUnit": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "GetTenantDevicesForUserDto": {
        "type": "object",
        "properties": {
          "userId": {
            "type": "integer",
            "format": "int64"
          },
          "deviceId": {
            "type": "integer",
            "format": "int64"
          },
          "deviceName": {
            "type": "string",
            "nullable": true
          },
          "deviceSerialNumber": {
            "type": "string",
            "nullable": true
          },
          "deviceTypeName": {
            "type": "string",
            "nullable": true
          },
          "dayCount": {
            "type": "integer",
            "format": "int32"
          },
          "maxUserCount": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "maxLocationCount": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "usedUserCount": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "usedLocationCount": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "isAssigned": {
            "type": "boolean"
          },
          "id": {
            "type": "integer",
            "format": "int64"
          }
        },
        "additionalProperties": false
      },
      "WorkModelType": {
        "enum": [
          1,
          2,
          3,
          4
        ],
        "type": "integer",
        "format": "int32",
        "x-enumNames": [
          "Standard",
          "Flexible",
          "Daily",
          "AnyTime"
        ]
      },
      "WeekDays": {
        "enum": [
          0,
          1,
          2,
          3,
          4,
          5,
          6
        ],
        "type": "integer",
        "format": "int32",
        "x-enumNames": [
          "Saturday",
          "Sunday",
          "Monday",
          "Tuesday",
          "Wednesday",
          "Thursday",
          "Friday"
        ]
      },
      "WorkHourDto": {
        "type": "object",
        "properties": {
          "weekNumber": {
            "type": "integer",
            "format": "int32"
          },
          "weekDay": {
            "$ref": "#/components/schemas/WeekDays"
          },
          "dayName": {
            "type": "string",
            "nullable": true
          },
          "startingOvertime": {
            "type": "string",
            "format": "date-span",
            "nullable": true
          },
          "hourFrom": {
            "type": "string",
            "format": "date-span"
          },
          "hourTo": {
            "type": "string",
            "format": "date-span"
          },
          "endingOvertime": {
            "type": "string",
            "format": "date-span",
            "nullable": true
          },
          "respiteOvertime": {
            "type": "string",
            "format": "date-span",
            "nullable": true
          },
          "totalHours": {
            "type": "string",
            "format": "date-span"
          },
          "flexibilityDuration": {
            "type": "string",
            "format": "date-span"
          },
          "isHolidayEnable": {
            "type": "boolean"
          },
          "id": {
            "type": "integer",
            "format": "int64"
          }
        },
        "additionalProperties": false
      },
      "WorkScheduleDto": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "nullable": true
          },
          "workModelType": {
            "$ref": "#/components/schemas/WorkModelType"
          },
          "isCalendarHolidayEnable": {
            "type": "boolean"
          },
          "workingTotalTime": {
            "type": "string",
            "nullable": true
          },
          "startDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "endDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "usersCount": {
            "type": "integer",
            "format": "int32"
          },
          "workHours": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/WorkHourDto"
            },
            "nullable": true
          },
          "isAssigned": {
            "type": "boolean"
          },
          "id": {
            "type": "integer",
            "format": "int64"
          }
        },
        "additionalProperties": false
      },
      "VacationTypeDto": {
        "type": "object",
        "properties": {
          "title": {
            "type": "string",
            "nullable": true
          },
          "totalVacationHours": {
            "type": "integer",
            "format": "int32"
          },
          "vacationHoursPerMonth": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "vacationHoursPerDay": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "hasLimitationVacationPerDay": {
            "type": "boolean"
          },
          "isAssigned": {
            "type": "boolean"
          },
          "id": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "GetUserForEditOutput": {
        "type": "object",
        "properties": {
          "profilePictureId": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "user": {
            "$ref": "#/components/schemas/UserEditDto"
          },
          "roles": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/UserRoleDto"
            },
            "nullable": true
          },
          "devices": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/GetTenantDevicesForUserDto"
            },
            "nullable": true
          },
          "workSchedules": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/WorkScheduleDto"
            },
            "nullable": true
          },
          "vacationTypes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/VacationTypeDto"
            },
            "nullable": true
          },
          "allOrganizationUnits": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/OrganizationUnitDto"
            },
            "nullable": true
          },
          "memberedOrganizationUnits": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "GetUserPermissionsForEditOutput": {
        "type": "object",
        "properties": {
          "permissions": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/FlatPermissionDto"
            },
            "nullable": true
          },
          "grantedPermissionNames": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "EntityDtoOfInt64": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64"
          }
        },
        "additionalProperties": false
      },
      "UpdateUserPermissionsInput": {
        "required": [
          "grantedPermissionNames"
        ],
        "type": "object",
        "properties": {
          "id": {
            "maximum": 2147483647,
            "minimum": 1,
            "type": "integer",
            "format": "int64"
          },
          "grantedPermissionNames": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        },
        "additionalProperties": false
      },
      "CreateOrUpdateUserInput": {
        "required": [
          "assignedDevicesId",
          "assignedRoleNames",
          "assignedWorkSchedulesId",
          "user"
        ],
        "type": "object",
        "properties": {
          "user": {
            "$ref": "#/components/schemas/UserEditDto"
          },
          "assignedRoleNames": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "assignedDevicesId": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "assignedWorkSchedulesId": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "sendActivationEmail": {
            "type": "boolean"
          },
          "setRandomPassword": {
            "type": "boolean"
          },
          "organizationUnits": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int64"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "CreateUserOnTenantInput": {
        "required": [
          "tenantId",
          "user"
        ],
        "type": "object",
        "properties": {
          "tenantId": {
            "type": "integer",
            "format": "int32"
          },
          "user": {
            "$ref": "#/components/schemas/UserEditDto"
          },
          "sendActivationEmail": {
            "type": "boolean"
          },
          "setRandomPassword": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "GetAllForLookupTableInput": {
        "type": "object",
        "properties": {
          "filter": {
            "type": "string",
            "nullable": true
          },
          "sorting": {
            "type": "string",
            "nullable": true
          },
          "skipCount": {
            "maximum": 2147483647,
            "minimum": 0,
            "type": "integer",
            "format": "int32"
          },
          "maxResultCount": {
            "maximum": 2147483647,
            "minimum": 1,
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "UserWorkScheduleAbnormalities": {
        "enum": [
          1,
          2,
          3,
          4,
          5,
          6,
          7,
          8,
          9
        ],
        "type": "integer",
        "format": "int32",
        "x-enumNames": [
          "Normal",
          "Late",
          "EarlyOvertime",
          "LateOvertime",
          "Absence",
          "Holiday",
          "HolidayOvertime",
          "NightShif",
          "EarlyLeave"
        ]
      },
      "UserClockInOutDto": {
        "type": "object",
        "properties": {
          "clock": {
            "type": "string",
            "format": "date-time"
          },
          "clockInOutType": {
            "$ref": "#/components/schemas/UserClockInOutType"
          },
          "abnormalityType": {
            "$ref": "#/components/schemas/UserWorkScheduleAbnormalities"
          },
          "weekNumber": {
            "type": "integer",
            "format": "int32"
          },
          "userId": {
            "type": "integer",
            "format": "int64"
          },
          "workScheduleId": {
            "type": "integer",
            "format": "int64"
          },
          "workHourId": {
            "type": "integer",
            "format": "int64"
          },
          "organizationUnitId": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "id": {
            "type": "integer",
            "format": "int64"
          }
        },
        "additionalProperties": false
      },
      "GetUserClockInOutForViewDto": {
        "type": "object",
        "properties": {
          "userClockInOut": {
            "$ref": "#/components/schemas/UserClockInOutDto"
          },
          "userName": {
            "type": "string",
            "nullable": true
          },
          "workScheduleName": {
            "type": "string",
            "nullable": true
          },
          "workHourDayName": {
            "type": "string",
            "nullable": true
          },
          "organizationUnitDisplayName": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "PagedResultDtoOfGetUserClockInOutForViewDto": {
        "type": "object",
        "properties": {
          "totalCount": {
            "type": "integer",
            "format": "int32"
          },
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/GetUserClockInOutForViewDto"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "CreateOrEditUserClockInOutDto": {
        "type": "object",
        "properties": {
          "clock": {
            "type": "string",
            "format": "date-time"
          },
          "clockInOutType": {
            "$ref": "#/components/schemas/UserClockInOutType"
          },
          "abnormalityType": {
            "$ref": "#/components/schemas/UserWorkScheduleAbnormalities"
          },
          "weekNumber": {
            "type": "integer",
            "format": "int32"
          },
          "projectName": {
            "maxLength": 1024,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "description": {
            "maxLength": 2048,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "userId": {
            "type": "integer",
            "format": "int64"
          },
          "workScheduleId": {
            "type": "integer",
            "format": "int64"
          },
          "workHourId": {
            "type": "integer",
            "format": "int64"
          },
          "organizationUnitId": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "id": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "GetUserClockInOutForEditOutput": {
        "type": "object",
        "properties": {
          "userClockInOut": {
            "$ref": "#/components/schemas/CreateOrEditUserClockInOutDto"
          },
          "userName": {
            "type": "string",
            "nullable": true
          },
          "workScheduleName": {
            "type": "string",
            "nullable": true
          },
          "workHourDayName": {
            "type": "string",
            "nullable": true
          },
          "organizationUnitDisplayName": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "UserClockInOutUserLookupTableDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "displayName": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "UserClockInOutWorkScheduleLookupTableDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "displayName": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "UserClockInOutWorkHourLookupTableDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "displayName": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "UserClockInOutOrganizationUnitLookupTableDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "displayName": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "UserDelegationDto": {
        "type": "object",
        "properties": {
          "username": {
            "type": "string",
            "nullable": true
          },
          "startTime": {
            "type": "string",
            "format": "date-time"
          },
          "endTime": {
            "type": "string",
            "format": "date-time"
          },
          "id": {
            "type": "integer",
            "format": "int64"
          }
        },
        "additionalProperties": false
      },
      "PagedResultDtoOfUserDelegationDto": {
        "type": "object",
        "properties": {
          "totalCount": {
            "type": "integer",
            "format": "int32"
          },
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/UserDelegationDto"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "CreateUserDelegationDto": {
        "required": [
          "endTime",
          "startTime",
          "targetUserId"
        ],
        "type": "object",
        "properties": {
          "targetUserId": {
            "minimum": 1,
            "type": "integer",
            "format": "int64"
          },
          "startTime": {
            "type": "string",
            "format": "date-time"
          },
          "endTime": {
            "type": "string",
            "format": "date-time"
          }
        },
        "additionalProperties": false
      },
      "UserDeviceDto": {
        "type": "object",
        "properties": {
          "userId": {
            "type": "integer",
            "format": "int64"
          },
          "deviceId": {
            "type": "integer",
            "format": "int64"
          },
          "deviceName": {
            "type": "string",
            "nullable": true
          },
          "deviceSerialNumber": {
            "type": "string",
            "nullable": true
          },
          "deviceTypeName": {
            "type": "string",
            "nullable": true
          },
          "isAssigned": {
            "type": "boolean"
          },
          "id": {
            "type": "integer",
            "format": "int64"
          }
        },
        "additionalProperties": false
      },
      "GetUserDeviceForViewDto": {
        "type": "object",
        "properties": {
          "userDevice": {
            "$ref": "#/components/schemas/UserDeviceDto"
          },
          "userName": {
            "type": "string",
            "nullable": true
          },
          "userPhoneNumber": {
            "type": "string",
            "nullable": true
          },
          "deviceName": {
            "type": "string",
            "nullable": true
          },
          "deviceSerialNumber": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "PagedResultDtoOfGetUserDeviceForViewDto": {
        "type": "object",
        "properties": {
          "totalCount": {
            "type": "integer",
            "format": "int32"
          },
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/GetUserDeviceForViewDto"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "CreateUserDeviceDto": {
        "type": "object",
        "properties": {
          "userId": {
            "type": "integer",
            "format": "int64"
          },
          "deviceId": {
            "type": "integer",
            "format": "int64"
          },
          "id": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "UserDeviceUserLookupTableDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "displayName": {
            "type": "string",
            "nullable": true
          },
          "userPhoneNumber": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "PagedResultDtoOfUserDeviceUserLookupTableDto": {
        "type": "object",
        "properties": {
          "totalCount": {
            "type": "integer",
            "format": "int32"
          },
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/UserDeviceUserLookupTableDto"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "UserDeviceDeviceLookupTableDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "displayName": {
            "type": "string",
            "nullable": true
          },
          "deviceSerialNumber": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "PagedResultDtoOfUserDeviceDeviceLookupTableDto": {
        "type": "object",
        "properties": {
          "totalCount": {
            "type": "integer",
            "format": "int32"
          },
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/UserDeviceDeviceLookupTableDto"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "LinkToUserInput": {
        "required": [
          "password",
          "usernameOrEmailAddress"
        ],
        "type": "object",
        "properties": {
          "tenancyName": {
            "type": "string",
            "nullable": true
          },
          "usernameOrEmailAddress": {
            "type": "string"
          },
          "password": {
            "type": "string"
          }
        },
        "additionalProperties": false
      },
      "LinkedUserDto": {
        "type": "object",
        "properties": {
          "tenantId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "tenancyName": {
            "type": "string",
            "nullable": true
          },
          "username": {
            "type": "string",
            "nullable": true
          },
          "id": {
            "type": "integer",
            "format": "int64"
          }
        },
        "additionalProperties": false
      },
      "PagedResultDtoOfLinkedUserDto": {
        "type": "object",
        "properties": {
          "totalCount": {
            "type": "integer",
            "format": "int32"
          },
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/LinkedUserDto"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ListResultDtoOfLinkedUserDto": {
        "type": "object",
        "properties": {
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/LinkedUserDto"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "UnlinkUserInput": {
        "type": "object",
        "properties": {
          "tenantId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "userId": {
            "type": "integer",
            "format": "int64"
          }
        },
        "additionalProperties": false
      },
      "UserLoginAttemptDto": {
        "type": "object",
        "properties": {
          "tenancyName": {
            "type": "string",
            "nullable": true
          },
          "userNameOrEmail": {
            "type": "string",
            "nullable": true
          },
          "clientIpAddress": {
            "type": "string",
            "nullable": true
          },
          "clientName": {
            "type": "string",
            "nullable": true
          },
          "browserInfo": {
            "type": "string",
            "nullable": true
          },
          "result": {
            "type": "string",
            "nullable": true
          },
          "creationTime": {
            "type": "string",
            "format": "date-time"
          }
        },
        "additionalProperties": false
      },
      "ListResultDtoOfUserLoginAttemptDto": {
        "type": "object",
        "properties": {
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/UserLoginAttemptDto"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "UserWorkScheduleDto": {
        "type": "object",
        "properties": {
          "userId": {
            "type": "integer",
            "format": "int64"
          },
          "workScheduleId": {
            "type": "integer",
            "format": "int64"
          },
          "id": {
            "type": "integer",
            "format": "int64"
          }
        },
        "additionalProperties": false
      },
      "GetUserWorkScheduleForViewDto": {
        "type": "object",
        "properties": {
          "userWorkSchedule": {
            "$ref": "#/components/schemas/UserWorkScheduleDto"
          },
          "userName": {
            "type": "string",
            "nullable": true
          },
          "workScheduleName": {
            "type": "string",
            "nullable": true
          },
          "workModelType": {
            "$ref": "#/components/schemas/WorkModelType"
          },
          "workingTotalTime": {
            "type": "string",
            "nullable": true
          },
          "workHours": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/WorkHourDto"
            },
            "nullable": true
          },
          "startDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "endDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "PagedResultDtoOfGetUserWorkScheduleForViewDto": {
        "type": "object",
        "properties": {
          "totalCount": {
            "type": "integer",
            "format": "int32"
          },
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/GetUserWorkScheduleForViewDto"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "CreateOrEditUserWorkScheduleDto": {
        "type": "object",
        "properties": {
          "userId": {
            "type": "integer",
            "format": "int64"
          },
          "workScheduleId": {
            "type": "integer",
            "format": "int64"
          },
          "id": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "GetUserWorkScheduleForEditOutput": {
        "type": "object",
        "properties": {
          "userWorkSchedule": {
            "$ref": "#/components/schemas/CreateOrEditUserWorkScheduleDto"
          },
          "userName": {
            "type": "string",
            "nullable": true
          },
          "workScheduleName": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "UserWorkScheduleUserLookupTableDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "displayName": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "PagedResultDtoOfUserWorkScheduleUserLookupTableDto": {
        "type": "object",
        "properties": {
          "totalCount": {
            "type": "integer",
            "format": "int32"
          },
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/UserWorkScheduleUserLookupTableDto"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "UserWorkScheduleWorkScheduleLookupTableDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "displayName": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "PagedResultDtoOfUserWorkScheduleWorkScheduleLookupTableDto": {
        "type": "object",
        "properties": {
          "totalCount": {
            "type": "integer",
            "format": "int32"
          },
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/UserWorkScheduleWorkScheduleLookupTableDto"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "GetVacationTypeForViewDto": {
        "type": "object",
        "properties": {
          "vacationType": {
            "$ref": "#/components/schemas/VacationTypeDto"
          }
        },
        "additionalProperties": false
      },
      "PagedResultDtoOfGetVacationTypeForViewDto": {
        "type": "object",
        "properties": {
          "totalCount": {
            "type": "integer",
            "format": "int32"
          },
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/GetVacationTypeForViewDto"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "CreateOrEditVacationTypeDto": {
        "required": [
          "title"
        ],
        "type": "object",
        "properties": {
          "title": {
            "maxLength": 1024,
            "minLength": 1,
            "type": "string"
          },
          "totalVacationHours": {
            "type": "integer",
            "format": "int32"
          },
          "vacationHoursPerMonth": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "vacationHoursPerDay": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "hasLimitationVacationPerDay": {
            "type": "boolean"
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "id": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "GetVacationTypeForEditOutput": {
        "type": "object",
        "properties": {
          "vacationType": {
            "$ref": "#/components/schemas/CreateOrEditVacationTypeDto"
          }
        },
        "additionalProperties": false
      },
      "WebhookEvent": {
        "required": [
          "webhookName"
        ],
        "type": "object",
        "properties": {
          "webhookName": {
            "type": "string"
          },
          "data": {
            "type": "string",
            "nullable": true
          },
          "creationTime": {
            "type": "string",
            "format": "date-time"
          },
          "tenantId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "isDeleted": {
            "type": "boolean"
          },
          "deletionTime": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "id": {
            "type": "string",
            "format": "uuid"
          }
        },
        "additionalProperties": false
      },
      "HttpStatusCode": {
        "enum": [
          100,
          101,
          102,
          103,
          200,
          201,
          202,
          203,
          204,
          205,
          206,
          207,
          208,
          226,
          300,
          301,
          302,
          303,
          304,
          305,
          306,
          307,
          308,
          400,
          401,
          402,
          403,
          404,
          405,
          406,
          407,
          408,
          409,
          410,
          411,
          412,
          413,
          414,
          415,
          416,
          417,
          421,
          422,
          423,
          424,
          426,
          428,
          429,
          431,
          451,
          500,
          501,
          502,
          503,
          504,
          505,
          506,
          507,
          508,
          510,
          511
        ],
        "type": "integer",
        "format": "int32",
        "x-enumNames": [
          "Continue",
          "SwitchingProtocols",
          "Processing",
          "EarlyHints",
          "OK",
          "Created",
          "Accepted",
          "NonAuthoritativeInformation",
          "NoContent",
          "ResetContent",
          "PartialContent",
          "MultiStatus",
          "AlreadyReported",
          "IMUsed",
          "MultipleChoices",
          "Ambiguous",
          "MovedPermanently",
          "Moved",
          "Found",
          "Redirect",
          "SeeOther",
          "RedirectMethod",
          "NotModified",
          "UseProxy",
          "Unused",
          "TemporaryRedirect",
          "RedirectKeepVerb",
          "PermanentRedirect",
          "BadRequest",
          "Unauthorized",
          "PaymentRequired",
          "Forbidden",
          "NotFound",
          "MethodNotAllowed",
          "NotAcceptable",
          "ProxyAuthenticationRequired",
          "RequestTimeout",
          "Conflict",
          "Gone",
          "LengthRequired",
          "PreconditionFailed",
          "RequestEntityTooLarge",
          "RequestUriTooLong",
          "UnsupportedMediaType",
          "RequestedRangeNotSatisfiable",
          "ExpectationFailed",
          "MisdirectedRequest",
          "UnprocessableEntity",
          "Locked",
          "FailedDependency",
          "UpgradeRequired",
          "PreconditionRequired",
          "TooManyRequests",
          "RequestHeaderFieldsTooLarge",
          "UnavailableForLegalReasons",
          "InternalServerError",
          "NotImplemented",
          "BadGateway",
          "ServiceUnavailable",
          "GatewayTimeout",
          "HttpVersionNotSupported",
          "VariantAlsoNegotiates",
          "InsufficientStorage",
          "LoopDetected",
          "NotExtended",
          "NetworkAuthenticationRequired"
        ]
      },
      "GetAllSendAttemptsOutput": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "webhookEventId": {
            "type": "string",
            "format": "uuid"
          },
          "webhookName": {
            "type": "string",
            "nullable": true
          },
          "data": {
            "type": "string",
            "nullable": true
          },
          "response": {
            "type": "string",
            "nullable": true
          },
          "responseStatusCode": {
            "$ref": "#/components/schemas/HttpStatusCode"
          },
          "creationTime": {
            "type": "string",
            "format": "date-time"
          }
        },
        "additionalProperties": false
      },
      "PagedResultDtoOfGetAllSendAttemptsOutput": {
        "type": "object",
        "properties": {
          "totalCount": {
            "type": "integer",
            "format": "int32"
          },
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/GetAllSendAttemptsOutput"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "GetAllSendAttemptsOfWebhookEventOutput": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "webhookUri": {
            "type": "string",
            "nullable": true
          },
          "webhookSubscriptionId": {
            "type": "string",
            "format": "uuid"
          },
          "response": {
            "type": "string",
            "nullable": true
          },
          "responseStatusCode": {
            "$ref": "#/components/schemas/HttpStatusCode"
          },
          "creationTime": {
            "type": "string",
            "format": "date-time"
          },
          "lastModificationTime": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ListResultDtoOfGetAllSendAttemptsOfWebhookEventOutput": {
        "type": "object",
        "properties": {
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/GetAllSendAttemptsOfWebhookEventOutput"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "GetAllSubscriptionsOutput": {
        "type": "object",
        "properties": {
          "webhookUri": {
            "type": "string",
            "nullable": true
          },
          "isActive": {
            "type": "boolean"
          },
          "webhooks": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          },
          "id": {
            "type": "string",
            "format": "uuid"
          }
        },
        "additionalProperties": false
      },
      "ListResultDtoOfGetAllSubscriptionsOutput": {
        "type": "object",
        "properties": {
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/GetAllSubscriptionsOutput"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "WebhookSubscription": {
        "type": "object",
        "properties": {
          "tenantId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "webhookUri": {
            "type": "string",
            "nullable": true
          },
          "secret": {
            "type": "string",
            "nullable": true
          },
          "isActive": {
            "type": "boolean"
          },
          "webhooks": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          },
          "headers": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            },
            "nullable": true
          },
          "id": {
            "type": "string",
            "format": "uuid"
          }
        },
        "additionalProperties": false
      },
      "ActivateWebhookSubscriptionInput": {
        "type": "object",
        "properties": {
          "subscriptionId": {
            "type": "string",
            "format": "uuid"
          },
          "isActive": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "GetAllAvailableWebhooksOutput": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "nullable": true
          },
          "displayName": {
            "type": "string",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ListResultDtoOfGetAllAvailableWebhooksOutput": {
        "type": "object",
        "properties": {
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/GetAllAvailableWebhooksOutput"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "GetLatestWebLogsOutput": {
        "type": "object",
        "properties": {
          "latestWebLogLines": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "PagedResultDtoOfWorkScheduleDto": {
        "type": "object",
        "properties": {
          "totalCount": {
            "type": "integer",
            "format": "int32"
          },
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/WorkScheduleDto"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "CreateOrEditWorkScheduleDto": {
        "required": [
          "name"
        ],
        "type": "object",
        "properties": {
          "name": {
            "maxLength": 1024,
            "minLength": 1,
            "type": "string"
          },
          "workModelType": {
            "$ref": "#/components/schemas/WorkModelType"
          },
          "isCalendarHolidayEnable": {
            "type": "boolean"
          },
          "startDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "endDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "workHours": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/WorkHourDto"
            },
            "nullable": true
          },
          "id": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "GetWorkScheduleForEditOutput": {
        "type": "object",
        "properties": {
          "workSchedule": {
            "$ref": "#/components/schemas/CreateOrEditWorkScheduleDto"
          }
        },
        "additionalProperties": false
      }
    }
  }
}